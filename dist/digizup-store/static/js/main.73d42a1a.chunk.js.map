{"version":3,"sources":["config/FirebaseConfig.js","utils/utils.js","components/CatProductCard.js","components/Loading.js","utils/Delayed.js","components/LoadingFullScreen.js","components/InfoCard.js","views/Category.js","views/Home.js","views/About.js","components/CartCard.js","views/Cart.js","store/actions/cartUpdateActions.js","axios/axios.js","views/Checkout.js","store/actions/checkoutActions.js","store/actions/searchActions.js","components/Navbar.js","store/actions/authActions.js","components/ProductCard.js","views/Store.js","views/Login.js","views/Signup.js","views/Product.js","utils/ScrollToTop.js","components/OrderCard.js","views/Orders.js","views/Order.js","store/actions/orderActions.js","store/actions/accountActions.js","views/Account.js","views/AccountAddresses.js","views/AccountPayments.js","views/Err404.js","components/AppFooter.js","views/Payment.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/searchReducer.js","store/reducers/cartUpdateReducer.js","store/reducers/rootReducer.js","index.js","assets/img/digi-logo-small.png","assets/img/page_not_found.png","assets/img/digi-logo.jpg"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","priceFormat","price","value","formatted","Intl","NumberFormat","style","currency","format","symbol","integer","split","slice","decimal","className","compose","withRouter","props","product","productName","defaultImage","productid","productOption","closeIcon","header","image","reveal","waves","revealIcon","to","Loading","src","logo","alt","Delayed","state","hidden","setTimeout","setState","this","waitBeforeShow","children","React","Component","InfoCard","connect","firestoreConnect","collection","category","match","params","categoriesCollection","useSelector","ordered","categories","useState","cat","setCat","categoryProducts","setCategoryProducts","useEffect","find","each","title","urlid","getProductsCollection","a","keywords","where","get","snaps","empty","console","log","localProducts","forEach","doc","index","data","pro","hasOptions","options","Object","keys","productOptions","sort","filter","isActive","randOption","Math","floor","random","length","productFullName","images","id","push","CategoryBannerJSX","banner","items","nav","dots","dotsEach","rewind","autoplay","loop","events","map","key","uuid","CategoryProductsJSX","CategoryPageJSX","isLoaded","LoadingFullScreen","Home","About","cartUpdate","cartItem","productPrice","cartQty","option","cartid","locCartQty","setLocCartQty","cartFunc","updateCart","removeFromCart","cartMessage","cartCount","history","useHistory","redirectToProductPage","target","onClick","horizontal","onKeyDown","e","keyCode","onBlur","onChange","type","authuid","auth","uid","dispatch","updateCartAction","getState","getFirebase","getFirestore","parseInt","update","then","delete","removeFromCartAction","cartMessageReset","deleteNotification","docid","total","setTotal","useFirestoreConnect","subcollections","storeAs","cartCollection","cart","setCart","setLog","newTotal","reduce","tot","cartNotifications","_","orderBy","qty","newcart","cartTotalSectionJSX","cartItemsJSX","cartNotificationsJSX","notificationMessage","CartPageMarkUpJSX","instance","axios","create","baseURL","addAddress","newAddress","add","createdAt","Date","catch","err","message","addAddressAction","addCard","newCard","addCardAction","placeOrder","newOrder","status","isOpen","tracking","updateTime","snap","docs","placeOrderAction","profile","stage","setStage","window","scrollTo","localTotal","acc","addresses","addressIndex","setAddressIndex","initAddress","fullName","addressLine","city","country","pincode","phoneNo","setNewAddress","paymentModeIndex","setPaymentModeIndex","cardIndex","cardHolderName","cardNo","cardExpMM","cardExpYY","stripe","useStripe","elements","useElements","setError","errorLog","setErrorLog","disabled","setDisabled","processing","setProcessing","succeeded","setSucceeded","clientSecret","setClientSecret","method","url","response","getClientSecret","placeOrderFn","order","address","paymentType","paymentModes","consumeruid","replace","payNow","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","name","firstName","lastName","resp","paymentIntent","error","deliverySectionJSX","eachLoc","checked","readOnly","actions","flat","modal","node","bottomSheet","fixedFooter","open","dismissible","endingTop","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","opacity","outDuration","preventScrolling","startingTop","trigger","required","htmlFor","paymentModeHead","paymentModeIcon","paymentModeInner","checkout","mode","expanded","icon","item","onSubmit","hidePostalCode","event","searchAction","searchTerm","toLowerCase","snapWithoutOptions","snapWithOptions","out","includes","matches","tags","tag","rating","optionTags","searchResults","logout","signOut","search","searchReset","setCategories","setCartCount","sortedCategories","allCategory","concat","localCartCount","menuOpenState","setMenuOpenState","setCategory","setSearchTerm","query","queryString","parse","location","innerWidth","setWidth","innerHeight","setHeight","updateWidthAndHeight","$","css","click","addEventListener","removeEventListener","submitSearch","dropdown_inner_html","eachcategory","dropdown_html","alignment","autoTrigger","closeOnClick","constrainWidth","container","coverTrigger","hover","searchbar_inner_html","sideNavCategoryLinks_html","exact","fontSize","marginTop","accordion","ProductCard","Array","round","fill","products","searchError","searchMessage","authError","authMessage","login","credentials","signInWithEmailAndPassword","email","password","loginAction","authMessageReset","setEmail","setPassword","emailBlur","setEmailBlur","passwordBlur","setPasswordBlur","allValid","authLog","setAuthLog","emailValidation","passwordValidation","renderLog","test","setValid","setInvalid","field","errorMessage","removeClass","addClass","html","signup","newUser","createUserWithEmailAndPassword","user","set","initials","signupAction","setFirstName","setLastName","confirmPassword","setConfirmPassword","firstNameBlur","setFirstNameBlur","lastNameBlur","setLastNameBlur","confirmPasswordBlur","setConfirmPasswordBlur","firstNameValidation","lastNameValidation","confirmPasswordValidation","addToCart","newProduct","addToCartAction","setProductOption","productFromCollection","setProduct","getRenderedProduct","getOptionIndicesArray","optionString","splice","getOptionString","optionIndicesArray","join","renderedProduct","setRenderedProduct","inStock","features","eaOp","eaOpIndex","optionCategoriesObject","optionCategories","optionFeatures","ac","eaAr","specs","optionSpecs","setHistoryToProductOption","listen","localProductOption","cartQuantity","setCartQuantity","handleCartUpdate","val","categoryOptionsSelectionBtns","eachCat","eachCatIndex","eachCatObj","eachCatObjIndex","opAr","isSelected","op","isAvailable","bestMatch","allOpAr","ea","optionName","ImageSectionJSX","eachImage","InStockJSX","alert","addingToCart","FeaturesJSX","feature","SpecsJSX","spec","specKey","specValue","DescriptionJSX","description","unlisten","redirectToOrderSummaryPage","close","moment","toDate","ordersCollection","orders","setOrders","local","ordersJSX","requestCancellationAction","orderID","cancellationMessage","orderId","unshift","orderid","setCancellationMessage","requestCancellation","cancelButton","placeholder","orderCreds","orderPayment","orderAddress","orderTracking","orderCart","productRedirect","OrderPageJSX","removeAddressAction","addressid","removeCardAction","cardid","removeCard","removeAddress","AccountPageJSX","addAddressBtn","AccountAddressesPageJSX","floating","large","cards","initCard","setNewCard","addCardBtn","submitNewCard","DebitCreditCardsJSX","AccountPaymentsPageJSX","Err404","notFoundImg","link","text","href","handleSubmit","promise","loadStripe","App","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initState","rootReducer","combineReducers","action","firebaseReducer","firestoreReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","ReactDOM","render","document","getElementById","URL","process","origin","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.73d42a1a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport 'firebase/auth';      //firebase authentication\nimport 'firebase/firestore'; //firebase firestore\nimport 'firebase/analytics'; //firebase analytics\n\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyBHW5GkbAYKKiS-0O7V9yE6I_rhqdm5dmI\",\n    authDomain: \"digizup-store-test1.firebaseapp.com\",\n    databaseURL: \"https://digizup-store-test1.firebaseio.com\",\n    projectId: \"digizup-store-test1\",\n    storageBucket: \"digizup-store-test1.appspot.com\",\n    messagingSenderId: \"629806898681\",\n    appId: \"1:629806898681:web:405b49966fdd13c86b7128\",\n    measurementId: \"G-DCTWT63X8B\"\n  };\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport const db = firebase.firestore();\n\nexport default firebase;","import React from 'react'\n\nexport const numberFormat = (value) =>\nnew Intl.NumberFormat('en-IN', {\n  style: 'currency',\n  currency: 'INR'\n}).format(value);\n\nexport const priceFormat = (price)=>{\n    var formatted = numberFormat(price);\n    var symbol = formatted[0];\n    var integer = formatted.split('.')[0].slice(1);\n    var decimal = formatted.split('.')[1];\n    return (\n      <span className=\"product-price\">\n        {symbol+\" \"+integer+\".\"}<sub>{decimal}</sub>\n      </span>\n    )\n}","import React from 'react'\nimport 'materialize-css';\nimport { Card, CardTitle, Icon, Modal, Button } from 'react-materialize';\nimport { compose } from 'redux';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport { priceFormat } from '../utils/utils';\n\nfunction CatProductCard(props) {\n    // console.log(props);\n    const { productName, defaultImage, price, productid, productOption } = props.product;\n    // console.log(defaultImage);\n    return (\n        <div className=\"CatProductCard\">\n            <Card\n              className=\"round-card\"\n              closeIcon={<Icon>close</Icon>}\n              header={<CardTitle image={defaultImage} className=\"card-title-img\" reveal waves=\"light\" />}\n              revealIcon={<Icon>more_vert</Icon>}\n            >\n              <div className=\"card-content-area\">\n                <NavLink to={ '/product/'+productid+(productOption?('?productOption='+productOption):('')) } >\n                    <p className=\"text-link\">{productName}</p>\n                </NavLink>\n                <p className=\"right-align heavy_text\">{ priceFormat(price) }</p>\n              </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default  compose(\n    withRouter\n)(CatProductCard)\n","import React from 'react'\nimport logo from '../assets/img/digi-logo.jpg'\n\nfunction Loading() {\n    return (\n        <div className=\"Loading Page\">\n        <div className=\"row\">\n        <div className=\"col s12 m8 l6 offset-m2 offset-l3\">\n        <div className=\"card round-card\">\n        <div className=\"card-content\">\n        <div className=\"center\">\n            <div className=\"logo-container\">\n            <img src={logo} alt=\"\" />\n            </div>\n            <h4 className=\"center\">Loading....</h4>\n        </div>\n        </div>\n        </div>\n        </div>\n        </div>\n        </div>\n    )\n}\n\nexport default Loading\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loading from '../components/Loading';\n\nclass Delayed extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {hidden : true};\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({hidden: false});\n        }, this.props.waitBeforeShow);\n    }\n\n    render() {\n        return this.state.hidden ? ( <Loading /> ) : this.props.children;\n    }\n}\n\nDelayed.propTypes = {\n  waitBeforeShow: PropTypes.number.isRequired\n};\n\nexport default Delayed;","import React from 'react'\nimport logo from '../assets/img/digi-logo.jpg'\n\nfunction Loading() {\n    return (\n        <div className=\"LoadingFullScreen\">\n            <div className=\"logo-container\">\n                <img src={logo} />\n            </div>\n            <h5 className=\"heavy_text center\">Welcome to </h5>\n            <h4 className=\"heavy_text center\">Digizup Store</h4>\n        </div>\n    )\n}\n\nexport default Loading\n","import React from 'react'\n\nfunction InfoCard({children}) {\n    return (\n        <div className=\"Info Card\">\n        <div className=\"row\">\n        <div className=\"col s12 m8 l6 offset-m2 offset-l3\">\n        <div className=\"card round-card\">\n        <div className=\"card-content\">\n            {children}\n        </div>\n        </div>\n        </div>\n        </div>\n        </div>\n    )\n}\n\nexport default InfoCard\n","import React, { useEffect, useState, Fragment } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { withRouter, NavLink } from 'react-router-dom'\nimport { compose } from 'redux'\nimport { firestoreConnect, isLoaded } from 'react-redux-firebase';\nimport { db } from '../config/FirebaseConfig';\nimport 'materialize-css';\nimport { Carousel, Icon, Modal, Button } from 'react-materialize';\nimport CatProductCard from '../components/CatProductCard';\nimport { v1 as uuid } from 'uuid';\nimport OwlCarousel from 'react-owl-carousel2';\nimport 'react-owl-carousel2/lib/styles.css'; //Allows for server-side rendering.\nimport 'react-owl-carousel2/src/owl.carousel.css'; //Allows for server-side rendering.\nimport 'react-owl-carousel2/src/owl.theme.green.css'; //Allows for server-side rendering.\nimport Delayed from '../utils/Delayed';\nimport Loading from '../components/Loading';\nimport LoadingFullScreen from '../components/LoadingFullScreen';\nimport InfoCard from '../components/InfoCard';\n\nfunction Category(props) {\n    const category = props.match.params.category ?? 'all';\n    const categoriesCollection = useSelector(state=>state.firestore.ordered.categories);\n    const [cat , setCat] = useState(null);\n    const productsCollection = [];\n    var [categoryProducts,setCategoryProducts] = useState(null??[]);\n    useEffect(()=>{\n        // console.log('category=>', category);\n        if(!categoriesCollection) return;\n        setCat( categoriesCollection.find(each=>(category==each.title || category==each.urlid)) );\n        setCategoryProducts([]);\n    },[category]);\n    useEffect(()=>{\n        if(!categoriesCollection) return;\n        setCat( categoriesCollection.find(each=>(category==each.title || category==each.urlid)) );\n    },[categoriesCollection])\n    useEffect(()=>{\n        if(!category || !cat || !categoriesCollection) return;\n        getProductsCollection();\n    },[cat])\n\n    const getProductsCollection = async ()=>{\n        var keywords = [category,cat?.title];\n        // console.log({keywords});\n        const snaps = await db.collection('products').where('categories','array-contains-any',keywords).get();\n        if(snaps.empty){console.log('empty');return; }\n        var localProducts = [];\n        snaps.forEach((doc,index)=>{\n            if(index>=20) return;\n            var data = doc.data();\n            var pro = {};\n            if(data.hasOptions == true){\n                var options = Object.keys(data.productOptions).sort().filter(each=>data.productOptions[each].isActive);\n                var randOption = options[ Math.floor(Math.random()*options.length) ];\n                pro={\n                    productName: data.productOptions[randOption].productFullName,\n                    defaultImage: data.productOptions[randOption].images[0],\n                    price: data.productOptions[randOption].price,\n                    productid: doc.id,\n                    productOption: randOption,\n                    hasOptions: true\n                }\n            }else{\n                pro={\n                    productName: data.productName,\n                    defaultImage: data.images[0],\n                    price: data.price,\n                    productid: doc.id,\n                    productOption: false,\n                    hasOptions: false\n                }\n            }\n            localProducts.push(pro);\n        })\n        // console.log('localProducts',localProducts);\n        setCategoryProducts(localProducts);\n    }\n    \n    const CategoryBannerJSX = (cat&& cat?.banner && cat.banner.length>0)?(\n        <div className=\"banner-carousel\">\n            <OwlCarousel  options={{\n                items: 1,\n                nav: false,\n                dots: false,\n                dotsEach:false,\n                rewind: true,\n                autoplay: true,\n                loop: true,\n                }} \n                events={{}} \n            >\n                { cat.banner.map((each,index)=> (<div key={uuid()}><img src={each.image}/></div>) ) }\n            </OwlCarousel>\n        </div>\n    ):(null)\n\n    const CategoryProductsJSX = (cat && categoryProducts)?(\n        <div className=\"container\">\n        <div className={(cat.banner && cat.banner.length>0)?('categoriesProductsSection flyover-banner'):('categoriesProductsSection')}>\n            <div className=\"row\">\n                {categoryProducts.map(each=>( \n                    <div key={uuid()} className=\"col s6 m4 l3\">\n                        <CatProductCard product={each} />\n                    </div>\n                 ))}\n\n            </div>\n        </div>\n        </div>\n\n    ):(null)\n\n    const CategoryPageJSX = (isLoaded(categoriesCollection))?(\n        <Fragment>\n        {(cat)?(\n            <Fragment>\n                {CategoryBannerJSX}\n                {CategoryProductsJSX}\n            </Fragment>\n        ):(\n            <Delayed waitBeforeShow={1000}>\n            <InfoCard>\n                <h6 className=\"center\">Sorry this category doesnot exist</h6>\n                <div className=\"center\">\n                    <NavLink to=\"/store\"> <div className=\"btn dark_btn\">Visit Store</div> </NavLink>\n                </div>\n            </InfoCard>\n            </Delayed>\n        )}\n        </Fragment>\n    ):(<LoadingFullScreen /> )\n\n    return (\n        <div className=\"Category Page\" >\n                {CategoryPageJSX}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    return {}\n}\n\nexport default  \ncompose(\n    connect(mapStateToProps, null),\n    firestoreConnect([\n        {collection: 'categories'}\n    ]),\n    withRouter\n)(Category)\n","import React, { useEffect, useState } from 'react'\nimport Category from './Category';\n\nfunction Home(props) {\n    return (\n        <Category />\n    )\n}\nexport default Home","import React from 'react'\n\nfunction About() {\n    return (\n        <div>\n            about\n        </div>\n    )\n}\n\nexport default About\n","import React,{useState, useEffect} from 'react'\nimport 'materialize-css';\nimport { Card, CardTitle, Icon } from 'react-materialize';\nimport { priceFormat } from '../utils/utils';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nfunction CartCard(props) {\n    const { productName, productPrice, defaultImage, cartQty, productid, option, id } = props?.cartItem\n    const cartid = id;\n    const [locCartQty,setLocCartQty] = useState(cartQty);\n    const { updateCart, removeFromCart } = props?.cartFunc\n    const {cartMessage,cartCount} = props?.cartUpdate;\n    useEffect(()=>{\n      if(locCartQty <=0 ) setLocCartQty(1);\n      if(cartMessage == 'CART_UPDATING') return;\n      if(locCartQty != cartQty){\n        setTimeout(()=>{\n          updateCart(cartid, locCartQty);\n        },3000)\n      }\n    },[locCartQty]);\n\n\n    const history = useHistory();\n    const redirectToProductPage = ()=>{\n      var target = `/product/${productid}`+((option)?`?productOption=${option}`:``)\n      history.push(target);\n    }\n    return (\n        <div className=\"CartCard\">\n            <Card\n              closeIcon={<Icon>close</Icon>}\n              header={<CardTitle onClick={redirectToProductPage} image={defaultImage} />}\n              horizontal\n              revealIcon={<Icon>more_vert</Icon>}\n            >\n              <div className=\"card-info\">\n                <p onClick={redirectToProductPage} >{productName}</p>\n                <p className=\"flow-text regular_text primary-green-dark-text right-align\">{priceFormat(productPrice)}</p>\n              </div>\n              <div className=\"cart-management\">\n                    \n                <div className=\"quantity-selection-container\">\n                  <div onClick={()=>{ updateCart(cartid,cartQty-1) }} className=\"btn-floating quantity-adjustment-btn\"> <i className=\"material-icons\">remove_circle</i> </div>\n                  <input \n                  value={locCartQty} \n                  onKeyDown={(e)=>{if(e.keyCode==13 && e.target.value>0 )updateCart(cartid, e.target.value)}} \n                  onBlur={(e)=>{if(e.target.value>0)updateCart(cartid, e.target.value)}}\n                  onChange={(e)=>{if(e.target.value<=0){setLocCartQty(1)}else{ setLocCartQty(e.target.value) }}}  className=\"cart-quantity-input\" type=\"number\"/>\n                  <div onClick={()=>{ updateCart(cartid, cartQty+1) }} className=\"btn-floating quantity-adjustment-btn\"> <i className=\"material-icons\">add_circle</i> </div>\n                </div>\n                    \n                <div  \n                onClick={()=>{ removeFromCart(cartid) }}\n                className=\"btn remove_btn\">Remove</div>\n              </div>\n            </Card> \n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n  return {\n    cartUpdate: state.cartUpdate\n  }\n}\n\nexport default connect(mapStateToProps,null)(CartCard);","import React, { useState, useEffect, Fragment } from 'react'\nimport { priceFormat } from '../utils/utils'\n\nimport CartCard from '../components/CartCard';\nimport { connect, useSelector } from 'react-redux';\nimport { auth } from 'firebase';\nimport { useFirebaseConnect, useFirestoreConnect, isLoaded } from 'react-redux-firebase';\n\nimport { v1 as uuid } from 'uuid';\nimport { updateCartAction, deleteNotification, addCartAction, removeFromCartAction, cartMessageReset } from '../store/actions/cartUpdateActions';\nimport { testAction } from '../store/actions/testAction';\nimport { db } from '../config/FirebaseConfig';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport Delayed from '../utils/Delayed';\nimport _ from 'lodash';\nimport InfoCard from '../components/InfoCard.js'\nimport Loading from '../components/Loading';\n\nfunction Cart(props) {\n    const history = useHistory();\n    const authuid = useSelector(state=> state.firebase.auth.uid ) ?? 'default';\n    useEffect(()=>{\n        if(!authuid || authuid == 'default'){\n            setTimeout(()=>{\n                history.push('/login');\n            },3000)\n        }\n    },[authuid])\n\n    const [total, setTotal] = useState(0)\n    \n    useFirestoreConnect([ {\n        collection: 'users', \n        doc: authuid,\n        subcollections: [{ collection: 'cart' }], \n        storeAs: 'cart' \n    },{\n        collection: 'users',\n        doc: authuid,\n        subcollections: [{collection:'cartNotifications'}],\n        storeAs: 'cartNotifications'\n    }])\n    const cartCollection = useSelector(state=> state.firestore.ordered.cart)\n    const [cart,setCart] = useState([]);\n    const [log, setLog ] = useState('');\n    useEffect(()=>{\n        if(!isLoaded(cartCollection)) return setLog('LOADING');\n        if(!cartCollection || cartCollection.length == 0){ setCart([]); return setLog('EMPTY');}\n        setLog('FETCHED');\n        setCart(cartCollection)\n        var newTotal = cartCollection.reduce((tot,each)=>(tot+each.productPrice*each.cartQty),0)\n        // console.log(total);\n        setTotal(newTotal);\n    },[cartCollection])\n    \n    const cartNotifications = useSelector(state=> _.orderBy(state.firestore.ordered.cartNotifications ?? [], ['createdAt'],['desc'])) ?? [];\n    useEffect(()=>{ \n        // console.log(cartNotifications);\n    },[cartNotifications]);\n\n    const {updateCartAction, removeFromCart, cartMessageReset, deleteNotification} = props;\n    const updateCart = (cartid, qty)=>{\n        var newcart = cart.map((each)=>((each.id ==cartid)?({...each, cartQty:qty}):(each)));\n        var newTotal = newcart.reduce((tot,each)=>(tot+each.productPrice*each.cartQty),0)\n        setTotal(newTotal);\n        setCart(newcart);\n        updateCartAction(cartid, qty);\n    }\n\n    const cartFunc={\n        updateCart,\n        removeFromCart\n    }\n\n    const cartMessage =props?.cartUpdate?.cartMessage;\n    \n    useEffect(()=>{\n        if(cartMessage == 'CART_UPDATED' || cartMessage == 'CART_ADDED'){\n            cartMessageReset();\n        }\n    },[cartMessage])\n\n\n    const cartTotalSectionJSX = (\n            <div className=\"col s12 l5 push-s0 push-l7\">\n                <div className=\"cart-total-container center\">\n                  <h6 className=\"primary-green-light\">Cart Total</h6>\n                  <h5 className=\"center-align primary-green-dark heavy_text\">{priceFormat(total)}</h5>\n                  <div onClick={()=>{history.push('/checkout')}} className=\"btn dark_btn\">Checkout</div>\n                </div>\n            </div>);\n    const cartItemsJSX = (\n            <div className=\"col s12 l7 pull-s0 pull-l5\">\n                <div className=\"cart-items-container\">\n                  {cart && cart.map(cartItem=>( <CartCard key={uuid()} cartFunc={cartFunc} cartItem={cartItem} /> ))}\n                </div>\n            </div>);\n    \n    const cartNotificationsJSX = (cartNotifications&& cartNotifications.length > 0)?(\n        <div className=\"cartNotifications\">\n        <div className=\"card round-card\">\n        <div className=\"card-content\">\n        <div className=\"row\">\n        {cartNotifications.map(each=>(\n            <Fragment key={uuid()}>\n            <div className=\"col s9\">\n                <p \n                style={{'lineHeight':'3'}}\n                className=\"head regular_text center\">{each.notificationMessage}</p>\n            </div>\n            <div className=\"col s3 center\">\n                <div\n                 onClick={()=>{deleteNotification(each.id)}}\n                 className=\"btn-floating btn-small red_btn\"><i className=\"material-icons\">clear</i></div>\n            </div>\n            </Fragment>\n        ))}\n        </div>\n        </div>\n        </div>\n        </div>\n    ):(null)\n    const CartPageMarkUpJSX = (\n        <div className=\"row\">\n            {(cart && cart.length>0)?(\n                <Fragment>\n                    {cartTotalSectionJSX}\n                    {cartItemsJSX}\n                </Fragment>\n            ):(\n                <Fragment>\n                    {(log == 'LOADING')?( <Loading /> ):(null)}\n                    {(log == 'EMPTY')?( <InfoCard><p className=\"center flow-text\">Your Cart is Empty</p> </InfoCard> ):(null)}\n                </Fragment>\n            )}\n        </div>\n)\n    return (\n        <div className=\"Cart\">\n            <div className=\"container\">\n                <h5 className=\"primary-green-dark-text center\">Your Shopping <span className=\"heavy_text\">Cart</span></h5>\n                {cartNotificationsJSX}\n                {(authuid!='default')?(\n                    <Delayed waitBeforeShow={500}>\n                        <Fragment>{CartPageMarkUpJSX}</Fragment>\n                    </Delayed>\n                ):(\n                    <InfoCard>\n                        <p className=\"flow-text center\">\n                        Please <span className=\"heavy_text primary-green-dark-text\">SignIn</span> To Continue\n                        </p>\n                    </InfoCard>\n                )}\n            </div>\n        </div>\n    )\n}\nconst mapStateToProps = (state)=>{\n    // console.log(state);\n    return{\n        cartUpdate: state.cartUpdate,\n        authuid : state.firebase.auth.uid\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        updateCartAction: (cartid, cartQty)=>{\n            dispatch(updateCartAction(cartid, cartQty))\n        },\n        removeFromCart : (cartid)=>{ dispatch( removeFromCartAction(cartid) ) },\n        cartMessageReset: ()=>{ dispatch( cartMessageReset() ) },\n        deleteNotification: (docid)=>{ dispatch( deleteNotification(docid) )}\n    }\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(Cart)\n","import {db } from '../../config/FirebaseConfig';\n\nexport const updateCartAction = (cartid, cartQty)=>{\n\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\n        dispatch({type:'CART_UPDATING'});\n        cartQty = parseInt(cartQty);\n        const firestore = getFirestore();\n        console.log('state');\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('users').doc(authuid).collection('cart').doc(cartid).update({cartQty:cartQty})\n            .then(()=>{\n                setTimeout(()=>{\n                    return dispatch({type:'CART_UPDATED'});\n                },500);\n            });\n    }\n}\n\nexport const addToCartAction = (newProduct)=>{\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\n        dispatch({type:'CART_UPDATING'});\n        const {productid, option} = newProduct;\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        var doc = (option)?(productid+'-'+option):(productid+'-'+'default');\n        firestore.collection('/users').doc(authuid).collection('/cart').doc(doc).set(newProduct)\n        .then(()=>{\n            return dispatch({type:'CART_UPDATED'});\n        })\n    }\n}\n\nexport const removeFromCartAction = (cartid)=>{\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\n        dispatch({type:'CART_UPDATING'});\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('/users').doc(authuid).collection('/cart').doc(cartid).delete()\n        .then(()=>{\n            return dispatch({type:'CART_UPDATED'});\n        })\n    }\n}\n\nexport const deleteNotification =  (docid)=>{\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('/users').doc(authuid).collection('cartNotifications').doc(docid).delete();\n    }\n}\n\nexport const cartMessageReset = ()=>{\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\n        return dispatch({type:'CART_MESSAGE_RESET'});\n    }\n}\n\n\n","import axios from 'axios'\nconst instance = axios.create({\n    baseURL: 'https://us-central1-digizup-store-test1.cloudfunctions.net/api'\n})\n// const instance = axios.create({\n//     baseURL: 'http://localhost:5001/digizup-store-test1/us-central1/api'\n// })\nexport default  instance\n\n// https://us-central1-digizup-store-test1.cloudfunctions.net/api\n// http://localhost:5001/digizup-store-test1/us-central1/api\n","import React, { useState, useEffect, Fragment } from 'react'\nimport 'materialize-css';\nimport { Collapsible, CollapsibleItem, Icon, Modal, Button } from 'react-materialize';\nimport queryString from 'query-string';\nimport { compose } from 'redux';\nimport { connect, useSelector } from 'react-redux';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { v1 as uuid, parse } from \"uuid\";\nimport { isLoaded, useFirestoreConnect, useFirebaseConnect, useFirestore } from 'react-redux-firebase';\nimport { db } from '../config/FirebaseConfig';\nimport { addAddressAction, addCardAction, placeOrderAction } from '../store/actions/checkoutActions';\nimport Delayed from '../utils/Delayed';\nimport { priceFormat } from '../utils/utils';\n\nimport axios from '../axios/axios'\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js'\n\n\nfunction Checkout(props) {\n    \n    const authuid = useSelector(state=> state.firebase.auth.uid ) ?? 'default';\n    const profile = useSelector(state=> state.firebase.profile ) ?? {};\n    useEffect(()=>{console.log(profile)},[profile])\n    const history = useHistory();\n\n    const [stage, setStage] = useState(0);\n    useEffect(()=>{\n        window.scrollTo(0,0);\n    },[stage])\n\n    useEffect(()=>{\n        if(!authuid || authuid == 'default'){\n            setTimeout(()=>{\n                // history.push('/login');\n            },3000)\n        }\n    },[authuid])\n    useFirestoreConnect([{\n        collection: 'users',\n        doc: authuid,\n        subcollections: [{collection:'cart'}],\n        storeAs: 'cart'\n    },{\n        collection: 'users',\n        doc: authuid,\n        subcollections: [{collection:'addresses'}],\n        storeAs: 'addresses'\n    }]);\n\n    const addAddress = props?.addAddress;\n    const placeOrder = props?.placeOrder;\n\n    const cart =  useSelector(state=> state.firestore.ordered.cart) ?? []\n    useEffect(()=>{\n        // console.log('cart',cart)\n        if(cart.length>0){\n            var localTotal = cart.reduce((acc,each)=>(acc+each.productPrice*each.cartQty),0);\n            setTotal(localTotal);\n        }\n    },[cart]);\n\n    const addresses = useSelector(state=> state.firestore.ordered.addresses) ?? [];\n    useEffect(()=>{ \n        // console.log('addresses',addresses);\n        if(!addresses || addresses.length==0) return;\n        if(addressIndex==-1){setAddressIndex(0); }\n    },[addresses]);\n\n\n    const [total,setTotal] = useState(0);\n\n    useEffect(()=>{},[cart, addresses])\n\n    const initAddress = { fullName    :'', addressLine :'', city    :'', state   :'', country :'', pincode :'', phoneNo :'' }\n    const [newAddress, setNewAddress] = useState(initAddress);\n    const [addressIndex, setAddressIndex] = useState(-1);\n    var [paymentModeIndex, setPaymentModeIndex] = useState(4);\n    var [cardIndex, setCardIndex] = useState(-1);\n    var initCard = { cardHolderName: '', cardNo: '', cardExpMM: '', cardExpYY: '' };\n    const [newCard, setNewCard] = useState(initCard);\n    useEffect(()=>{\n        // console.log({addressIndex});\n    },[addressIndex]);\n    useEffect(()=>{\n        // console.log({cardIndex});\n    },[cardIndex]);\n    const submitNewAddress = ()=>{\n        addAddress(newAddress);\n        setNewAddress(initAddress);\n    }\n    const submitAddress = ()=>{\n        // console.log({addresses,addressIndex});\n        if(addressIndex < 0) return;\n        else{setStage(1);}\n    }\n\n    const submitPaymentMode = ()=>{\n        if(paymentModeIndex >= 0) setStage(2);\n    }\n    const proceedToPayment= ()=>{\n        setStage(3);\n    }\n\n    const stripe = useStripe();\n    const elements = useElements();\n    const [error, setError] = useState(null);\n    const [errorLog, setErrorLog] = useState('');\n    const [disabled, setDisabled] = useState(true);\n    const [processing, setProcessing] = useState(null);\n    const [succeeded, setSucceeded] = useState(null);\n    const [clientSecret, setClientSecret] = useState(true);\n    useEffect(()=>{\n        if(total == 0)return;\n       const getClientSecret = async ()=>{\n           const response = await axios({\n               method: 'post',\n               url: `/payments/create?total=${total*100}`\n           })\n           setClientSecret(response.data.clientSecret)\n       }\n       getClientSecret();\n    },[total])\n    const handleCardElementChange = (event)=>{\n        setDisabled(event.empty);\n        setError(event.error ? event.error.message : \"\");\n    }\n\n    const placeOrderFn = ()=>{\n        if(addressIndex< 0 )return;\n        if(paymentModeIndex< 0 )return;\n        var order = { \n            cart: cart.map(each=>({\n                    cartQty: each.cartQty,\n                    productName: each.productName,\n                    productPrice: each.productPrice,\n                    productid: each.productid,\n                    option: each.option,\n                    defaultImage: each.defaultImage,\n                })),\n            total: total,\n            address:{\n                    fullName: addresses[addressIndex].fullName,\n                    addressLine: addresses[addressIndex].addressLine,\n                    city: addresses[addressIndex].city,\n                    state: addresses[addressIndex].state,\n                    country: addresses[addressIndex].country,\n                    pincode: addresses[addressIndex].pincode,\n                    phoneNo: addresses[addressIndex].phoneNo,\n                },\n            paymentType: paymentModes[paymentModeIndex].paymentType,\n            consumeruid: authuid,\n            cartCount: cart.reduce((tot,each)=>(tot+each.cartQty),0)??0,\n            defaultImage: cart[0].defaultImage\n        }\n        placeOrder(order);\n        history.replace('/account/orders');\n    }\n\n    const payNow = async (e)=>{\n        e.preventDefault();\n        if(addressIndex< 0 )return;\n        if(paymentModeIndex< 0 )return;\n        \n        console.log('submit');\n        setProcessing(true);\n        const payload = await stripe.confirmCardPayment(clientSecret,{\n            payment_method: {\n                card: elements.getElement(CardElement),\n                billing_details: {\n                    name: `${profile.firstName} ${profile.lastName} - ${authuid}`\n                },\n            }\n        }).then((resp)=>{\n            if(resp?.paymentIntent?.status == 'succeeded'){\n                setSucceeded(true);\n                setProcessing(false);\n                setError(null);\n                setErrorLog('');\n                placeOrderFn();\n                \n            }else{\n                setProcessing(false);\n                setErrorLog(resp.error.message) \n            }\n            // console.log(resp);\n        })\n        // history.push('account/orders');\n    }\n\n\n    const deliverySectionJSX = (\n        <div className=\"deliverySection\">\n            <h4 className=\"center\">Select Your Delivery Location</h4>\n            <div className=\"row\">\n                { (!addresses && addresses.length ==0)?(\n                    <p className=\"center\">\n                        No saved Address found.\n                        <br />Please add atleast one.\n                    </p>\n                ):(null)}\n                { addresses && addresses.map((eachLoc,index)=>(\n                <div key={uuid()} className=\"col s6 m6 l4\">\n                    <div  onClick={()=>{setAddressIndex(index)}} className=\"card round-card\">\n                        <div className=\"card-content\">\n                            <p className=\"flow-text\"> \n                            <label>\n                              <input name=\"addressGroup\" type=\"radio\" checked={(index == addressIndex)} readOnly={true} />\n                              <span className=\"primary-green-dark-text heavy_text\">{eachLoc.fullName}</span>\n                            </label>\n                             </p>\n                            <p>{eachLoc.addressLine}</p>\n                            <p>{eachLoc.city}, {eachLoc.state}-{eachLoc.pincode}</p>\n                            <p>{eachLoc.phoneNo}--{eachLoc.country}</p>\n                        </div>\n                    </div>   \n                </div>\n                )) }\n                <div className=\"col s12\"></div>\n                <div className=\"col s12 m6 center\">\n                    <Modal\n                      actions={[\n                        (<Button flat modal=\"close\" node=\"button\" waves=\"red\">Close</Button>),\n                        (<Button onClick={()=>{submitNewAddress(newAddress)}} flat modal=\"close\" node=\"button\" waves=\"green\">Add Address</Button>)\n                      ]}\n                      bottomSheet={false}\n                      fixedFooter={true}\n                      header=\"Add a new Address\"\n                      id=\"addAddressModal\"\n                      open={false}\n                      options={{\n                        dismissible: true,\n                        endingTop: '16%',\n                        inDuration: 250,\n                        onCloseEnd: null,\n                        onCloseStart: null,\n                        onOpenEnd: null,\n                        onOpenStart: null,\n                        opacity: 0.5,\n                        outDuration: 250,\n                        preventScrolling: true,\n                        startingTop: '55%'\n                      }}\n                    //   root={[object HTMLBodyElement]}\n                      trigger={<div className=\"btn light_btn\"> <i className=\"material-icons\">add</i> <span>Add Address</span> </div>}\n                    >\n                        <div className=\"row\">\n                            <div className=\"input-field col s12\">\n                                <i className=\"material-icons prefix\">account_circle</i>\n                                <input onChange={(e)=>{setNewAddress({...newAddress, fullName:e.target.value})}} value={newAddress.fullName} id=\"fullName-addAddress\" type=\"text\" required />\n                                <label  htmlFor=\"fullName-addAddress\">Full Name</label>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <i className=\"material-icons prefix\">location_city</i>\n                                <input onChange={(e)=>{setNewAddress({...newAddress, addressLine:e.target.value})}} value={newAddress.addressLine} id=\"addressLine-addAddress\" type=\"text\" required />\n                                <label htmlFor=\"addressLine-addAddress\">Address Line</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <i className=\"material-icons prefix\">location_on</i>\n                                <input onChange={(e)=>{setNewAddress({...newAddress, city:e.target.value})}} value={newAddress.city} id=\"city-addAddress\" type=\"text\" required />\n                                <label htmlFor=\"city-addAddress\">City</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input onChange={(e)=>{setNewAddress({...newAddress, state:e.target.value})}} value={newAddress.state} id=\"state-addAddress\" type=\"text\" required />\n                                <label htmlFor=\"state-addAddress\">State</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input onChange={(e)=>{setNewAddress({...newAddress, country:e.target.value})}} value={newAddress.country} id=\"country-addAddress\" type=\"text\" required />\n                                <label htmlFor=\"country-addAddress\">Country</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input onChange={(e)=>{setNewAddress({...newAddress, pincode:e.target.value})}} value={newAddress.pincode} id=\"pincode-addAddress\" type=\"text\" required />\n                                <label htmlFor=\"pincode-addAddress\">Pincode</label>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <i className=\"material-icons prefix\">local_phone</i>\n                                <input onChange={(e)=>{setNewAddress({...newAddress, phoneNo:e.target.value})}} value={newAddress.phoneNo} id=\"phoneNo-addAddress\" type=\"text\" required />\n                                <label htmlFor=\"phoneNo-addAddress\">Phone Number</label>\n                            </div>\n                        </div>\n                    </Modal>\n                </div>\n                <div className=\"col s12 m6 center\">\n                    {\n                    (!addresses || addresses.length ==0)?(\n                        <div className=\"btn dark_btn disabled\">Select Address</div>\n                    ):(\n                        <div onClick={()=>{submitAddress()}} className=\"btn dark_btn\">Select Address</div>\n                    )\n                    }\n                </div>\n            </div>\n        </div>\n    )\n    \n     var paymentModes = [\n         { paymentType :'card', paymentModeHead:\"Credit / Debit Card\",             paymentModeIcon:'payment',      paymentModeInner:( <p>We accept Visa, MasterCard Credit and debit cards.</p> ) },\n\n         { paymentType:'crypto', paymentModeHead:\"Crypto Currencies\",               paymentModeIcon:'fingerprint',  paymentModeInner:( <p>coinbase e-commerce * </p> ) },\n\n         { paymentType:'paypal', paymentModeHead:\"PayPal\",                          paymentModeIcon:'filter_drama', paymentModeInner:( <p>paypal Integration* </p> ) },\n\n         { paymentType:'paytm', paymentModeHead:\"Paytm\",                           paymentModeIcon:'filter_drama', paymentModeInner:( <p>paytm Integration* </p> ) },\n\n         { paymentType:'cod', paymentModeHead:\"COD/POD (Cash/Pay On Delivery)\",  paymentModeIcon:'attach_money', paymentModeInner:( <p>we acccept cash aswell as digital payment options on your door step </p> ) }\n\n     ]\n \n    const paymentModesSectionJSX = (\n        <div className=\"checkout-payment-modes-section\">\n            {/* 2=> payment option */}\n            <h4 className=\"center\">Select Your Payment Option</h4>\n            <Collapsible>\n                {paymentModes.map((mode,index)=>(\n                <CollapsibleItem key={uuid()}\n                    expanded = {(index == paymentModeIndex)}\n                    onClick={()=>{setPaymentModeIndex(index)}}\n                    header={( \n                    <div className=\"payment-mode-option\">\n                        <label>\n                            <input name=\"paymentModesGroup\" type=\"radio\" checked={( index == paymentModeIndex )} readOnly={true}/>\n                            <span></span>\n                        </label>\n                        <p className=\" payment-mode-option-name primary-green-dark-text heavy_text\">{mode.paymentModeHead}</p>\n                        <span><i className=\"material-icons\">{(index == paymentModeIndex)?('keyboard_arrow_up'):('keyboard_arrow_down')}</i></span>\n                    </div> )}\n                    icon={<Icon>{mode.paymentModeIcon}</Icon>}\n                    node=\"div\"\n                >\n                    {mode.paymentModeInner}\n                </CollapsibleItem>\n                ))}\n            </Collapsible>\n            <div className=\"center\">\n                <div onClick={()=>{ submitPaymentMode()}} className=\"btn dark_btn\">Order Summary</div>\n            </div>\n        </div>\n    )\n\n    const orderSummarySectionJSX = (\n        <div className=\"checkout-order-summary-section\">\n        {/* 3=> order summary   */}\n            <div className=\"summary-delivery-address\">\n                {(addresses && addressIndex>-1)?(<div className=\"center\">\n                    <h6 className=\"center\"> <Icon>location_on</Icon> Delivery Address:</h6>\n                    <div className=\"row\">\n                        <div className=\"card col s8 m8 l6 offset-m2 offset-l3 round-card\">\n                            <div className=\"card-content\">\n                            {(addresses[addressIndex])?(\n                            <Fragment>\n                                <p className=\"heavy_text\">{ addresses[addressIndex].fullName }</p>\n                                <p className=\"heavy_text\">{ addresses[addressIndex].addressLine +'-'+ addresses[addressIndex].city}</p>\n                                <p className=\"heavy_text\">{ addresses[addressIndex].state+'-'+addresses[addressIndex].pincode +', '+addresses[addressIndex].country}</p>\n                                <p className=\"heavy_text\">{ addresses[addressIndex].phoneNo}</p>\n                            </Fragment>\n                            ):(null)}\n                            </div>\n                        </div>\n                    </div>\n                </div>):(null)}\n            </div>\n            <div className=\"summary-payment-mode\">\n                <h6 className=\"center\">Payment Option: <Icon>{paymentModes[paymentModeIndex].paymentModeIcon}</Icon> {paymentModes[paymentModeIndex].paymentModeHead}</h6>\n            </div>\n            <div className=\"summary-order-details\">\n                <div className=\"row\">\n                <div className=\"col s12 m8 l8 offset-m2 offset-l2\">\n                <div className=\"card round-card\">\n                <div className=\"card-content\">\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>Product</td><td>Price/Qty</td><td>Qty</td><td>SubTotal</td>\n                        </tr>\n                        { cart && cart.map(item=>( \n                        <tr key={uuid()} >\n                            <td>{item.productName}</td><td>{item.productPrice}</td><td>{item.cartQty}</td><td>{item.productPrice*item.cartQty}</td>\n                        </tr>))}\n                        <tr>\n                            <td></td><td></td><td className=\"heavy_text\">Total</td><td className=\"heavy_text no-wrap\">{ priceFormat(total)}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                </div>\n                </div>\n                </div>\n                </div>\n            </div>\n            <div className=\"summary-payment-proceeding\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6 center\">\n                        <div onClick={()=>{setStage(0)}} className=\"btn light_btn\">Edit Address/Payment Options</div>\n                    </div>\n                    <div className=\"col s12 m6 center\">\n                        {(paymentModeIndex === 0)?(\n                            <div onClick={()=>{proceedToPayment()}} className=\"btn dark_btn\">Proceed To Payment</div>\n                        ):(\n                            <div onClick={()=>{placeOrderFn()}} className=\"btn dark_btn\">Place Order</div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n    const integrationJSX = (\n        <div className=\"card round-card\">\n            <h4 className=\"center head\">Payment</h4>\n            <div className=\"card-content center\">\n                <form onSubmit={payNow}>\n                    <CardElement \n                    options={{ value: {hidePostalCode: true}}}\n                    onChange={handleCardElementChange} />\n                    <button  className=\"btn dark_btn\" disabled={processing || disabled || succeeded} >\n                        <span>\n                            {(processing ? \"Processing\" : \"Pay Now\")}\n                        </span>\n                    </button>\n                </form>\n                <p className=\"center red-text\">{errorLog}</p>\n            </div>\n        </div>\n    )\n    const checkoutResultJSX = (\n        <div className=\"checkout-integration-section\">\n            <h5 className=\"center\">Success!!</h5>\n        </div>\n    )\n    \n    const checkout = [\n        deliverySectionJSX,\n        paymentModesSectionJSX,\n        orderSummarySectionJSX,\n        integrationJSX,\n        checkoutResultJSX\n    ]\n    return(\n        <div className=\"Checkout Page\">\n            <div className=\"container\">\n                {(authuid!='default')?(\n                    <Delayed waitBeforeShow={5000} >\n                        {checkout[stage]}\n                    </Delayed>\n                ):(\n                    <div className=\"center\">\n                        <div className=\"row\">\n                        <div className=\"col s8 m6 l6 offset-s2 offset-m3 offset-l3\">\n                        <div className=\"card round-card\">\n                        <div className=\"card-content\">\n                            <p className=\"flow-text\">\n                                Please <span className=\"heavy_text primary-green-dark-text\">SignIn</span>To Continue\n                            </p>\n                        </div>    \n                        </div>    \n                        </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n                \n        </div>\n    )\n\n}\n\nconst mapStateToProps = (state)=>{\n    // console.log('state-checkout',state);\n    return { }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return{ \n        addAddress : (newAddress)=>{ dispatch(addAddressAction(newAddress)) },\n        addCard : (newCard)=>{ dispatch( addCardAction(newCard) ) },\n        placeOrder : (newOrder)=>{ dispatch( placeOrderAction(newOrder) ) }\n    }\n}\n\nexport default \ncompose(\n    connect(mapStateToProps,mapDispatchToProps),\n    withRouter\n)(Checkout)\n","import React from 'react'\nimport { useSelector } from \"react-redux\"; \n\nexport const addAddressAction = (newAddress)=>{\n    console.log('addAddressAction')\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('users').doc(authuid).collection('addresses').add({...newAddress, createdAt: new Date()})\n        .then(()=>{\n            console.log('newAddress added');\n        })\n        .catch((err)=>{console.log('err=>',err.message)});\n\n    }\n}\n\nexport const addCardAction = (newCard)=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('users').doc(authuid).collection('cards').add({...newCard, createdAt: new Date()})\n        .then(()=>{ console.log('new card added') })\n        .catch((err)=>{ console.log('err=>', err.message) })\n    }\n}\n\nexport const placeOrderAction = (newOrder)=>{\n    console.log('newOrder',newOrder);\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('users').doc(authuid).collection('orders').add({\n            ...newOrder,\n            status:'Order Placed', \n            isOpen: true, \n            createdAt:new Date(), \n            tracking: [\n                { title:'Placed Order', updateTime: new Date() }\n            ]\n        })\n        .then(()=>{console.log('placed order')})\n        .then(async ()=>{ \n            var snap = await firestore.collection('users').doc(authuid).collection('cart').get();\n            console.log('snap', snap);\n            snap.docs.forEach((doc) => {\n                firestore.collection('users').doc(authuid).collection('cart').doc(doc.id).delete();\n            });\n        })\n        .catch(err=>{console.log('err=>', err)});\n    }\n}","import _ from \"lodash\";\n\nexport const searchAction = (searchTerm, category)=>{\n    // console.log('in searchAction', searchTerm, category);\n    return async (dispatch, getState, {getFirestore, getFirebase})=>{\n        dispatch({type:'SEARCH_IN_PROGRESS'});\n        const firestore = getFirestore();\n        searchTerm= searchTerm.toLowerCase();\n        var keywords = searchTerm.split(/(?:,| |\\+|-|\\(|\\))+/);\n        \n        //  console.log('key',keywords);\n        const snapWithoutOptions = await firestore.collection('/products').where('hasOptions','==',false).where('tags','array-contains-any',keywords).get();\n        const snapWithOptions = await firestore.collection('/products').where('hasOptions','==',true).where('tags','array-contains-any',keywords).get();\n        if( snapWithOptions.empty && snapWithoutOptions.empty ){ \n            // console.log('nothing found'); return dispatch({ type:\"SEARCH_RESULTS_NOT_FOUND\", err: \"No Results Found\" }); \n        }\n        var out=[];\n        snapWithoutOptions.forEach(doc=>{\n            try{\n                // console.log(doc.id)\n                var data = doc.data();\n                if(!data.categories.includes(category)) return;\n                var matches = data.tags.reduce((acc,tag)=> (keywords.includes(tag))?(acc+1):(acc) ,0);\n                // if(matches>0) \n                out.push({\n                    id: doc.id, \n                    productName:data.productName, \n                    price:data.price, \n                    defaultImage:data.images[0], \n                    option: false, \n                    matches, \n                    rating: data.rating ?? 4.5\n                });\n            }catch(err){ return; }\n        })\n        snapWithOptions.forEach(doc=>{\n            // console.log(doc.id)\n            var data = doc.data();\n            if(!data.categories.includes(category)) return;\n            var optionsKeys = Object.keys(data.productOptions).sort();\n            optionsKeys.forEach((key,index)=>{\n                try{\n                    // console.log('key',key);\n                    if(!data.productOptions[key].isActive) return;\n                    var matches = data.productOptions[key].optionTags.reduce((acc,tag)=> (keywords.includes(tag))?(acc+1):(acc) ,0);\n                    // console.log(key, matches, data.productOptions[key].optionTags);\n                    out.push({ id: doc.id,\n                        productName:data.productOptions[key].productFullName,\n                        price:data.productOptions[key].price,\n                        defaultImage:data.productOptions[key].images[0],\n                        option: key,\n                        matches,\n                        rating: data.rating ?? 4.5\n                    });\n                }\n                catch(err){return;}\n            });\n        })\n        out = _.orderBy( out, ['matches','option'], ['desc','asc']);\n        // console.log(out);\n        // console.log('Results=>',out);\n        if(out.length > 0) dispatch({ type:\"SEARCH_RESULTS_FETCHED\", searchResults: out });\n        else dispatch({ type:\"SEARCH_RESULTS_NOT_FOUND\", err: \"No Results Found\" });\n    }\n}\n\nexport const searchResetAction = ()=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        return dispatch({ type:\"SEARCH_RESET\" });\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { NavLink, useHistory, withRouter } from 'react-router-dom'\nimport {v1 as uuid} from 'uuid';\nimport { connect, useSelector } from 'react-redux';\n\nimport logo from '../assets/img/digi-logo-small.png'\n\nimport Cart from \"@material-ui/icons/AddShoppingCart\";\nimport Close from '@material-ui/icons/CloseRounded';\nimport Menu from '@material-ui/icons/MenuRounded';\n\nimport $ from 'jquery'\nimport M from 'materialize-css';\nimport { Dropdown, Button, Divider, Collapsible, CollapsibleItem, Icon } from \"react-materialize\";\n\nimport { firebaseConnect, firestoreConnect, useFirestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { logoutAction } from '../store/actions/authActions';\nimport { searchAction, searchResetAction } from '../store/actions/searchActions';\nimport queryString from \"query-string\";\nimport _ from 'lodash';\n\nfunction Navbar(props) {\n    const { auth,profile, logout, search, searchReset} = props ;\n    const [categories, setCategories] = useState(null);\n    const history = useHistory()\n    const [cartCount,setCartCount] = useState(0);\n    useEffect(()=>{\n      if(!props?.categories) return;\n      // console.log(props.categories);\n      var sortedCategories = props.categories;\n      var allCategory = sortedCategories.filter(each=>(each.title =='All'));\n      sortedCategories = _.orderBy( sortedCategories, ['title'], ['asc']);\n      sortedCategories = sortedCategories.filter(each=>each.title!='All');\n      sortedCategories = allCategory.concat(sortedCategories);\n      // console.log(sortedCategories);\n      setCategories(sortedCategories);\n    },[props.categories])\n    \n    const authuid = useSelector(state=> state.firebase.auth.uid ) ?? 'default';\n    useFirestoreConnect([{\n        collection: 'users',\n        doc: authuid,\n        subcollections: [{collection:'cart'}],\n        storeAs: 'cart'\n    }]);\n    useFirestoreConnect([{\n      collection: 'users',\n      doc: authuid,\n      subcollections: [{collection:'orders'}],\n      storeAs: 'orders'\n    }]);\n    const cart =  useSelector(state=> state.firestore.ordered.cart) ?? []\n    useEffect(()=>{\n      var localCartCount = cart.reduce((tot,each)=>(parseInt(parseInt(tot)+parseInt(each.cartQty))),0);\n      setCartCount(localCartCount);\n    },[cart])\n\n    const [menuOpenState, setMenuOpenState] = useState(false);\n    const [category, setCategory] = useState('All');\n    const [searchTerm,setSearchTerm] = useState('');\n    var query = queryString.parse(props?.location?.search);\n    useEffect(()=>{\n      setSearchTerm(query?.searchTerm ?? '');\n    },[query?.searchTerm]);\n    useEffect(()=>{\n      setCategory(query?.category ?? 'All');\n    },[query?.category]);\n    \n    const [width, setWidth] = useState(window.innerWidth);\n    const [height, setHeight] = useState(window.innerHeight);\n\n\n    const menuOpen = ()=>{\n      //console.log('menu-open');\n      $('.side_menu').css('zIndex', '2900');\n      $('.side_menu_content').css('transform', 'translateX(0%)');\n      $('.overlay').css('opacity', '1');\n    }\n    const menuClose = ()=>{\n      //console.log('menu-close');\n      $('.side_menu_content').css('transform', 'translateX(-100%)');\n      $('.overlay').css('opacity', '0');\n      setTimeout(()=>{\n        $('.side_menu').css('zIndex', '-1');\n      },200)\n    }\n\n    const updateWidthAndHeight = () => {\n      setWidth(window.innerWidth);\n      setHeight(window.innerHeight);\n    };\n    \n    useEffect(()=>{\n      menuOpenState? menuOpen() : menuClose();\n    },[menuOpenState])\n    \n    useEffect(()=>{\n      $('link').click(()=>{ console.log('link Click'); setMenuOpenState(false)})\n      $('ovelayLink').click(()=>{ console.log('link Click');; setMenuOpenState(false)})\n      window.addEventListener(\"resize\", updateWidthAndHeight);\n      return () => {\n        window.removeEventListener(\"resize\", updateWidthAndHeight)\n      };\n    },[])\n\n    const submitSearch = ()=>{\n      // console.log(category, searchTerm);\n      searchReset();\n      history.push('/store?searchTerm='+searchTerm+\"&&category=\"+category);\n    }\n\n    const dropdown_inner_html =  categories?.map( eachcategory=> ( <a key={uuid()} onClick={()=>{setCategory(eachcategory?.title)}}>{eachcategory?.title}</a> ) );\n    const dropdown_html = (\n      <Dropdown\n          id=\"Dropdown_6\"\n          options={{\n            alignment: 'left',\n            autoTrigger: true,\n            closeOnClick: true,\n            constrainWidth: false,\n            container: null,\n            coverTrigger: false,\n            hover: false,\n            inDuration: 150,\n            onCloseEnd: null,\n            onCloseStart: null,\n            onOpenEnd: null,\n            onOpenStart: null,\n            outDuration: 250\n          }}\n          trigger={\n            <div className='btn categories_dropdown_trigger' >{category.slice(0,15)+((category.length>15)?\"..\":'')+\" \\u25BC\"}</div>\n          }\n        >\n          {dropdown_inner_html}\n        </Dropdown>\n    );\n    const searchbar_inner_html = (\n      <div className=\"navbar__searchInput_container\">\n        <div className=\"navbar__searchInput\" >\n        {dropdown_html}  \n        <input \n          id=\"searchInput\" \n          type=\"text\"\n          value={searchTerm}\n          onChange={ e=>setSearchTerm(e.target.value) }\n          onKeyDown={ e=>{ if(e.keyCode==13)submitSearch();} }\n        />\n        <i onClick={submitSearch} className=\"material-icons search-icon\">search</i>\n      </div>\n      </div>\n    )\n    const sideNavCategoryLinks_html =  categories?.map( eachcategory=> (<div key={uuid()} className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to={\"/store/\"+eachcategory?.urlid}>{eachcategory?.title}</NavLink></div>) );\n\n    return (\n        <div className=\"Navbar\">\n          <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"link cart-link\" to=\"/cart\"> \n            <span className=\"cart_items_count\">{cartCount}</span>\n          </NavLink>\n          <nav>\n              <div className=\"nav__left valign-wrapper\">\n              <span onClick={()=>{ setMenuOpenState(!menuOpenState) }}>\n                {\n                  (!menuOpenState)?\n                  (<Menu className=\"menu-icon\"/>):\n                  (<Close className=\"menu-icon\" />)\n                }\n              </span>\n                \n              {/* <NavLink onClick={()=>{setMenuOpenState(false)}} exact to=\"/\">\n              <span className=\"navbar__logo\">\n                Digizup    \n              </span>\n              </NavLink> */}\n              <NavLink onClick={()=>{setMenuOpenState(false)}} exact to=\"/\">\n              <span className=\"mini-logo-container\">\n                <img \n                className=\"mini-logo\"\n                src={logo}/>\n              </span>\n              </NavLink>\n              <NavLink onClick={()=>{setMenuOpenState(false)}} exact to=\"/\">\n              <span className=\"navbar__logo\">\n                Store\n              </span>\n              </NavLink>\n              </div>\n              \n                {searchbar_inner_html}\n\n              {\n                (auth?.uid)?(\n                  <ul className=\"hide-on-med-and-down row-flex-center\">\n                    <li><NavLink onClick={()=>{setMenuOpenState(false)}} className=\"link\" to=\"/store\">Store</NavLink></li>\n                    <li><NavLink onClick={()=>{setMenuOpenState(false)}} className=\"nav_user_block_link\" to=\"/account\">\n                    <div className=\"nav_user_block\">\n                      <p className=\"line1\">Hello,</p>\n                      <p className=\"line2\">{profile?.firstName}</p>\n                    </div>\n                    </NavLink></li>\n                  </ul>\n                ):(\n                  <ul className=\"hide-on-med-and-down row-flex-center\">\n                    <li><NavLink onClick={()=>{setMenuOpenState(false)}} className=\"link\" to=\"/store\">Store</NavLink></li>\n                    <li><NavLink onClick={()=>{setMenuOpenState(false)}} className=\"btn login_btn\" to=\"/login\">Login</NavLink></li>\n                    <li><NavLink onClick={()=>{setMenuOpenState(false)}} className=\"btn signup_btn\" to=\"/signup\">Signup</NavLink></li>\n                  </ul>\n                )\n              }\n\n              <ul>\n                <li><NavLink onClick={()=>{setMenuOpenState(false)}} className=\"link cart-link\" to=\"/cart\"> \n                  <Cart style={{ fontSize: 40, marginTop: 12 }} /> \n                </NavLink></li>\n              </ul>\n\n\n          </nav>  \n\n\n          <div className=\"side_menu\">\n            <div className=\"overlay\">\n              <div className=\"side_menu_content\">\n                <div className=\"overlay_top_container\">\n                  \n\n                  <Collapsible accordion>\n                    {(auth?.uid)?(\n                    <CollapsibleItem\n                      expanded={false}\n                      header={`Hello, ${profile.firstName} ${profile.lastName}`}\n                      icon={<Icon>account_box</Icon>}\n                      node=\"div\"\n                    >\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/account\">Dashboard</NavLink></div>\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/account/orders\">My Orders</NavLink></div>\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/account/addresses\">My Addresses</NavLink></div>\n                      {/* <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/account/payments\">Payments</NavLink></div> */}\n                      \n                    </CollapsibleItem>\n                    ):(null)}\n                    <CollapsibleItem\n                      expanded={true}\n                      header=\"Store\"\n                      icon={<Icon>place</Icon>}\n                      node=\"div\"\n                    >\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/store\">Visit Store</NavLink></div>\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/cart\">My Cart</NavLink></div>\n                      {sideNavCategoryLinks_html}\n\n                    </CollapsibleItem>\n                    <CollapsibleItem\n                      expanded={false}\n                      header=\"Explore\"\n                      icon={<Icon>whatshot</Icon>}\n                      node=\"div\"\n                    >\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/\">Home</NavLink></div>\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/about\">About Us</NavLink></div>\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/reviews\">Reviews</NavLink></div>\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/termsconditions\">Terms & Conditions</NavLink></div>\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/privacy\">Privacy Statement</NavLink></div>\n                      \n                    </CollapsibleItem>\n                  </Collapsible>\n\n                </div>\n                  {\n                    (auth?.uid)?(\n                        <div >\n                          Not recognizing this account?\n                          <div onClick={()=>{ setMenuOpenState(false); logout(); }} to=\"/login\" className=\"btn login_btn\" >LogOut</div>\n                        </div>\n                    ):(\n                      <div className=\"overlay_bottom_container\">\n                        <div><NavLink onClick={()=>{setMenuOpenState(false)}} to=\"/login\" className=\"btn login_btn\" >Login</NavLink></div>\n                        <div><NavLink onClick={()=>{setMenuOpenState(false)}} to=\"/signup\" className=\"btn signup_btn\" >Signup</NavLink></div>\n                      </div>\n                    )\n                  }\n              \n              </div>\n              <div onClick={()=>{setMenuOpenState(false)}} className=\"side_right\"></div>\n            </div>\n          </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n  // console.log('state',state);\n  return {\n    categories: state.firestore.ordered.categories,\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n  return {\n    logout: ()=>{ dispatch( logoutAction() ) },\n    search: (searchTerm, category)=>{ dispatch( searchAction(searchTerm,category) ) },\n    searchReset: ()=>{ dispatch( searchResetAction() ) }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect([\n    {collection: 'categories'}\n  ]),\n  withRouter  \n)(Navbar)\n","export const loginAction = (credentials)=>{\n    return (dispatch, getState,{ getFirebase, getFirestore} ) =>{\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        )\n        .then(()=>{\n            dispatch({type: \"LOGIN_SUCCESS\"});\n        })\n        .catch(err=>{\n            dispatch({\n                type: \"LOGIN_ERROR\",\n                err: err.message\n            })\n        })\n    }\n}\n\nexport const logoutAction = ()=>{\n    return (dispatch, getState,{ getFirebase, getFirestore })=>{\n        const firebase = getFirebase();\n        return firebase.auth().signOut()\n        .then(()=>{ dispatch({type:'LOGOUT_SUCCESS'}) })\n        .catch(err=>{\n            dispatch({\n                type: \"LOGOUT_ERROR\",\n                err: err.message\n            })\n        })\n    }\n}\n\nexport const signupAction = (newUser)=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        \n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        return firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password)\n        .then((resp)=>{\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                email: newUser.email,\n                initials: newUser.firstName[0]+newUser.lastName[0]\n            })\n        })\n        .then(()=>{ dispatch({ type:\"SIGNUP_SUCCESS\" }) })\n        .catch((err)=>{ dispatch({ type:\"SIGNUP_ERROR\", err:err.message }) })\n    }\n}\n\nexport const  authMessageResetAction = ()=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        return dispatch({ type:'AUTH_MESSAGE_RESET' })\n    }\n}","import React from 'react'\nimport $ from 'jquery';\nimport M from 'materialize-css';\nimport 'materialize-css';\nimport { Card, CardTitle, Icon } from 'react-materialize';\nimport CurrencyFormat from 'react-currency-format';\nimport { useHistory } from 'react-router-dom';\n\nimport { v1 as uuid } from 'uuid';\n\nfunction ProductCard({product}) {\n    const {productName, id, option, price, defaultImage, rating} = product;\n    \n    const history= useHistory();\n    \n    const numberFormat = (value) =>\n      new Intl.NumberFormat('en-IN', {\n        style: 'currency',\n        currency: 'INR'\n      }).format(value);\n    const priceFormat = (price)=>{\n      var formatted = numberFormat(price);\n      var symbol = formatted[0];\n      var integer = formatted.split('.')[0].slice(1);\n      var decimal = formatted.split('.')[1];\n      return (\n        <h5 className=\"product-price\">\n          {symbol+\" \"+integer+\".\"}<sub>{decimal}</sub>\n        </h5>\n      )\n    }\n\n    const redirectToProductPage = ()=>{\n      var target = '/product/'+id+(option?(\"?productOption=\"+option):(''))\n      history.push(target);\n    }\n\n    return (\n        <div className=\"ProductCard\">\n            <Card \n              className=\"round-card\"\n              onClick={redirectToProductPage}\n              header={<CardTitle image={defaultImage} />}\n              horizontal\n            >\n              <h6 className=\"product-productName\">{productName}</h6>\n              \n              {priceFormat(price)}\n              \n              <div className=\"product-rating\">\n                  {Array(Math.round(rating)).fill().map((_)=>(<span key={uuid()} >🌟</span>))} \n                  {Array(5-Math.round(rating)).fill().map((_)=>(<span  key={uuid()} >★</span>))} \n                  <span className=\"rating-numbers\">{\" \"+rating} rating</span>\n              </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default ProductCard\n","import React, { useEffect, useState } from 'react'\nimport Navbar from '../components/Navbar'\nimport $ from 'jquery'\nimport M from 'materialize-css';\nimport { Dropdown, Button, Divider, Icon } from \"react-materialize\";\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport ProductCard from '../components/ProductCard';\nimport {v1 as uuid } from 'uuid';\nimport queryString from 'query-string'\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { searchAction, searchResetAction } from '../store/actions/searchActions';\nimport InfoCard from '../components/InfoCard';\nimport Loading from '../components/Loading';\n\n\nfunction Store(props) {\n    const history = useHistory();\n    var query = queryString.parse(props?.location?.search)\n    const searchTerm =query?.searchTerm ?? ''; \n    const category =query?.category ?? 'All'; \n    // console.log('seachTerm form store page', searchTerm);\n    const {search, searchAction, searchReset} = props;\n    const {searchError, searchResults, searchMessage} = search;\n    useEffect(()=>{\n      searchReset();\n      if(searchTerm == ''){\n        history.push('/store/all');\n      }else{\n        searchAction(searchTerm,category);\n      }\n    },[searchTerm,category])\n    useEffect(()=>{\n      // console.log(\"searchState=>\",{searchMessage, searchError, searchResults});\n    },[searchMessage,searchError, searchResults])\n    return (\n        <div className=\"Store Page\">\n            <div className=\"products-container container\">\n              \n              {searchResults && searchResults.map(product=>( \n                <ProductCard key={uuid()} product={product} /> \n              ))}\n              {\n                (searchMessage == 'SEARCH_RESULTS_NOT_FOUND')\n                ?( <InfoCard><p className=\"flow-text center\">Nothing Relevant Found</p></InfoCard> ):null\n              }\n              {\n                (searchMessage == 'SEARCH_IN_PROGRESS' )\n                ?( <Loading /> ):null\n              }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n  // console.log(state);\n  return {\n    search: state.search,\n    products: state.firestore.ordered.products,\n    isLoaded: true\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n  return {\n    searchAction: (searchTerm, category)=>{ dispatch( searchAction(searchTerm,category) ) },\n    searchReset: ()=>{ dispatch( searchResetAction() ) }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withRouter  \n)\n(Store)\n\n","import React, { useState, useEffect } from 'react'\nimport $ from 'jquery';\nimport { loginAction, authMessageResetAction } from '../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nfunction Login(props) {\n    \n    const { authMessage, authError, login, authMessageReset} = props;\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [emailBlur, setEmailBlur] = useState(false);\n    const [passwordBlur, setPasswordBlur] = useState(false);\n\n    var [allValid, setAllValid] = useState(false);\n\n    var [authLog,setAuthLog] =  useState('');\n\n    const history = useHistory();\n\n\n    useEffect(()=>{\n        if(!emailBlur){ return;}\n        emailValidation();\n    },[email]);\n\n    useEffect(()=>{\n        if(!passwordBlur){ return;}\n        passwordValidation();\n    },[password]);\n    \n    useEffect(()=>{\n        console.log('authMessage',authMessage, authError);\n        if(authMessage == 'LOGIN_SUCCESS'){ \n            setAuthLog('You are successfully logged in.');\n            setTimeout(()=>{ history.push('/') },3000)\n        }\n        else { setAuthLog(authError) };\n        setTimeout(()=>{\n            authMessageReset();\n        },5000)\n    },[authMessage]);\n\n    \n    var renderLog = (authMessage==\"AUTH_MESSAGE_RESET\" || authMessage == null)?null\n        :(<span className={(authMessage==\"LOGIN_SUCCESS\")?\"success\":\"error\"} >{authLog}</span>);\n\n    const emailValidation = ()=>{\n        if(email.length==0){ setInvalid('email', 'enter your email'); return;}\n        var regexEmail = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\n        if( !regexEmail.test(email) ){ setInvalid('email', 'email not valid'); return;}\n        setValid('email'); return;\n    }\n\n    const passwordValidation = ()=>{\n        if(password.length==0){ setInvalid('password', 'enter your password'); return;}\n        if( password.length<8){ setInvalid('password', 'password length might be greater'); return;}\n        setValid('password'); return;\n    }\n\n    const setInvalid = (field, errorMessage)=>{\n        $(`.${field}-field`).removeClass('valid').addClass('invalid');\n        $(`.${field}-helper-text`).html(errorMessage);\n    }\n    const setValid = (field)=>{\n        $(`.${field}-field`).removeClass('invalid').addClass('valid');\n        $(`.${field}-helper-text`).html('');\n    }\n\n    const formValidation = ()=>{\n        setEmailBlur(true);\n        setPasswordBlur(true);\n        emailValidation();\n        passwordValidation();        \n        if($('.input-field.invalid').length == 0) allValid= true;\n        else allValid = false;\n    }\n\n    const handleSubmit= (e)=>{\n        e.preventDefault();\n        formValidation();\n        console.log('formvalidation', allValid);\n        if(allValid){ \n            console.log(email, password);\n            props.login({email,password});\n        }\n        else console.log('form is invalid');\n    }\n\n    return (\n        <div className=\"Login\">\n            <div className=\"form-container\">\n                <div className=\"card\">\n                <div className=\"card-title\">\n                        <span className=\"light_text\">Log</span>\n                        <span className=\"heavy_text\">In</span>\n                    </div>\n                    <div className=\"card-content\">\n                    <div className=\"log center\">\n                        {renderLog}\n                    </div>\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"input-field email-field\">\n                                <i className=\"material-icons prefix\">email</i>\n                                <label htmlFor=\"email\">Email</label>\n                                <input onChange={(e)=>{setEmail(e.target.value)}}  onBlur={()=>{setEmailBlur(true); emailValidation();}}id=\"email\" type=\"email\" value={email}/>\n                                <span className=\"helper-text email-helper-text\"></span>\n                            </div>\n                            <div className=\"input-field password-field\">\n                                <i className=\"material-icons prefix\">fingerprint</i>\n                                <label htmlFor=\"password\">Password</label>\n                                <input onChange={(e)=>{setPassword(e.target.value)}} onBlur={()=>{setPasswordBlur(true); passwordValidation();}} id=\"password\" type=\"password\" value={password}/>\n                                <span className=\"helper-text password-helper-text\"></span>\n                            </div>\n                            <div className=\"center\">\n                                <button className=\"btn light_btn\">Login</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps =(state)=>{\n    return{\n        authError: state.auth.authError,\n        authMessage: state.auth.authMessage\n    }\n\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        login: (credentials)=>{ dispatch( loginAction(credentials) ) },\n        authMessageReset: ()=>{ dispatch( authMessageResetAction() ) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React, { useState, useEffect } from 'react'\nimport $ from 'jquery';\nimport { authMessageResetAction, signupAction } from '../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nfunction Signup(props) {\n    \n    const { authMessage, authError, signup, authMessageReset} = props;\n\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const [firstNameBlur, setFirstNameBlur] = useState(false);\n    const [lastNameBlur, setLastNameBlur] = useState(false);\n    const [emailBlur, setEmailBlur] = useState(false);\n    const [passwordBlur, setPasswordBlur] = useState(false);\n    const [confirmPasswordBlur, setConfirmPasswordBlur] = useState(false);\n\n    var [allValid, setAllValid] = useState(false);\n\n    var [authLog,setAuthLog] =  useState('');\n\n    const history = useHistory();\n\n    useEffect(()=>{  if(!firstNameBlur){ return;}  firstNameValidation(); },[firstName]);\n    useEffect(()=>{  if(!lastNameBlur){ return;}  lastNameValidation(); },[lastName]);\n    useEffect(()=>{  if(!emailBlur){ return;}  emailValidation(); },[email]);\n    useEffect(()=>{ if(!passwordBlur){ return;} passwordValidation(); },[password]);\n    useEffect(()=>{ if(!confirmPasswordBlur){ return;} confirmPasswordValidation(); },[confirmPassword]);\n    \n    useEffect(()=>{\n        console.log('authMessage',authMessage, authError);\n        if(authMessage == 'SIGNUP_SUCCESS'){ \n            setAuthLog('You are successfully signed up and logged in.');\n            setTimeout(()=>{ history.push('/') },3000)\n        }\n        else { setAuthLog(authError) };\n        setTimeout(()=>{\n            authMessageReset();\n        },5000)\n    },[authMessage]);\n\n    \n    var renderLog = (authMessage==\"AUTH_MESSAGE_RESET\" || authMessage == null)?null\n        :(<span className={(authMessage==\"SIGNUP_SUCCESS\")?\"success\":\"error\"} >{authLog}</span>);\n\n    const firstNameValidation = ()=>{\n        if(firstName.length==0){ setInvalid('firstName', 'enter your firstName'); return;}\n        setValid('firstName'); return;\n    }\n\n    const lastNameValidation = ()=>{\n        if(lastName.length==0){ setInvalid('lastName', 'enter your lastName'); return;}\n        setValid('lastName'); return;\n    }\n\n    const emailValidation = ()=>{\n        if(email.length==0){ setInvalid('email', 'enter your email'); return;}\n        var regexEmail = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\n        if( !regexEmail.test(email) ){ setInvalid('email', 'email not valid'); return;}\n        setValid('email'); return;\n    }\n\n    const passwordValidation = ()=>{\n        if(password.length==0){ setInvalid('password', 'enter your password'); return;}\n        if( password.length<8){ setInvalid('password', 'password should be a minimum of 8 characters'); return;}\n        setValid('password'); return;\n    }\n\n    const confirmPasswordValidation = ()=>{\n        if(confirmPassword.length==0){ setInvalid('confirmPassword', 'confirm your password'); return;}\n        if( confirmPassword!=password){ setInvalid('confirmPassword', 'passwords didnot match'); return;}\n        setValid('confirmPassword'); return;\n    }\n\n    const setInvalid = (field, errorMessage)=>{\n        $(`.${field}-field`).removeClass('valid').addClass('invalid');\n        $(`.${field}-helper-text`).html(errorMessage);\n    }\n    const setValid = (field)=>{\n        $(`.${field}-field`).removeClass('invalid').addClass('valid');\n        $(`.${field}-helper-text`).html('');\n    }\n\n    const formValidation = ()=>{\n        setFirstNameBlur(true);\n        setLastNameBlur(true);\n        setEmailBlur(true);\n        setPasswordBlur(true);\n        setConfirmPasswordBlur(true);\n        firstNameValidation();\n        lastNameValidation();\n        emailValidation();\n        passwordValidation();\n        confirmPasswordValidation();\n        if($('.input-field.invalid').length == 0) allValid= true;\n        else allValid = false;\n    }\n\n    const handleSubmit= (e)=>{\n        e.preventDefault();\n        formValidation();\n        console.log('formvalidation', allValid);\n        if(allValid){ \n            signup({firstName, lastName, email, password, confirmPassword})\n        }\n        else console.log('form is invalid');\n    }\n\n    return (\n        <div className=\"Signup\">\n            <div className=\"form-container\">\n                <div className=\"card\">\n                    <div className=\"card-title\">\n                        <span className=\"light_text\">Sign</span>\n                        <span className=\"heavy_text\">Up</span>\n                    </div>\n                    <div className=\"card-content\">\n                    <div className=\"log center\">\n                        {renderLog}\n                    </div>\n                        <form className=\"row\" onSubmit={handleSubmit}>\n                            \n                            <div className=\"col s6 input-field firstName-field\">\n                                <i className=\"material-icons prefix\">person</i>\n                                <label htmlFor=\"firstName\">First Name</label>\n                                <input onChange={(e)=>{setFirstName(e.target.value)}}  onBlur={()=>{setFirstNameBlur(true); firstNameValidation();}} id=\"firstName\" type=\"text\" value={firstName}/>\n                                <span className=\"helper-text firstName-helper-text\"></span>\n                            </div>\n\n                            <div className=\"col s6 input-field lastName-field\">\n                                <i className=\"material-icons prefix\"></i>\n                                <label htmlFor=\"lastName\">Last Name</label>\n                                <input onChange={(e)=>{setLastName(e.target.value)}}  onBlur={()=>{setLastNameBlur(true); lastNameValidation();}} id=\"lastName\" type=\"text\" value={lastName}/>\n                                <span className=\"helper-text lastName-helper-text\"></span>\n                            </div>\n\n                            <div className=\"col s12 input-field email-field\">\n                                <i className=\"material-icons prefix\">email</i>\n                                <label htmlFor=\"email\">Email</label>\n                                <input onChange={(e)=>{setEmail(e.target.value)}}  onBlur={()=>{setEmailBlur(true); emailValidation();}} id=\"email\" type=\"email\" value={email}/>\n                                <span className=\"helper-text email-helper-text\"></span>\n                            </div>\n\n                            <div className=\"col s12 input-field password-field\">\n                                <i className=\"material-icons prefix\">fingerprint</i>\n                                <label htmlFor=\"password\">Password</label>\n                                <input onChange={(e)=>{setPassword(e.target.value)}} onBlur={()=>{setPasswordBlur(true); passwordValidation();}} id=\"password\" type=\"password\" value={password}/>\n                                <span className=\"helper-text password-helper-text\"></span>\n                            </div>\n                            <div className=\"col s12 input-field confirmPassword-field\">\n                                <i className=\"material-icons prefix\">check_circle</i>\n                                <label htmlFor=\"confirmPassword\">confirmPassword</label>\n                                <input onChange={(e)=>{setConfirmPassword(e.target.value)}} onBlur={()=>{setConfirmPasswordBlur(true); confirmPasswordValidation();}} id=\"confirmPassword\" type=\"password\" value={confirmPassword}/>\n                                <span className=\"helper-text confirmPassword-helper-text\"></span>\n                            </div>\n\n                            <div className=\"center\">\n                                <button className=\"btn signup_btn\">Signup</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps =(state)=>{\n    return{\n        authError: state.auth.authError,\n        authMessage: state.auth.authMessage\n    }\n\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        signup: (newUser)=>{ dispatch( signupAction(newUser) ) },\n        authMessageReset: ()=>{ dispatch( authMessageResetAction() ) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)\n","import React, { useEffect, useState, Fragment } from 'react'\nimport { withRouter, useHistory } from 'react-router-dom'\nimport { compose } from 'redux';\nimport { connect, useSelector } from 'react-redux';\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase';\n\nimport queryString from 'query-string'\nimport { renderIntoDocument } from 'react-dom/test-utils';\n\nimport $ from 'jquery';\n\nimport OwlCarousel from 'react-owl-carousel2';\nimport 'react-owl-carousel2/lib/styles.css'; //Allows for server-side rendering.\nimport 'react-owl-carousel2/src/owl.carousel.css'; //Allows for server-side rendering.\nimport 'react-owl-carousel2/src/owl.theme.green.css'; //Allows for server-side rendering.\n\nimport { v1 as uuid } from \"uuid\";\nimport { addToCartAction, cartMessageReset } from '../store/actions/cartUpdateActions';\nimport Delayed from '../utils/Delayed';\nimport { priceFormat } from '../utils/utils';\nimport { Materialbox } from 'materialize-css';\n\nfunction Product(props) {\n    // console.log(props)\n    const history = useHistory();\n    // console.log(history,props);\n    const {productid} = props.match.params;\n    var  query = queryString.parse(history.location.search)\n    const [productOption,setProductOption] = useState( query.productOption ?? null);\n    useFirestoreConnect([{\n        collection: 'products',\n        doc: productid ?? 'default',\n        storeAs: `product-${productid}`\n    }])\n    const productFromCollection = useSelector(state=> state.firestore.ordered[`product-${productid}`]) \n    const [product, setProduct] = useState({});\n    useEffect(()=>{\n        if(!productFromCollection || !productFromCollection[0] ) return;\n        setProduct(productFromCollection[0]);\n    },[productFromCollection])\n    useEffect(()=>{\n        if(!product || !product.productName) return ;\n        // console.log('product =>',product);\n        // console.log('product =>',product.productOptions);\n        getRenderedProduct();\n    },[product])\n\n    const getOptionIndicesArray = (optionString)=> optionString.split('_').splice(1);\n    const getOptionString = (optionIndicesArray) => ('option_'+optionIndicesArray.join('_'));\n\n    const [renderedProduct, setRenderedProduct] = useState({});\n    const getRenderedProduct = ()=>{\n        if(productid == 'default') return;\n        if(product.hasOptions == false){ setRenderedProduct(product); return; }        \n        if(product.productOptions[productOption].isActive == false){ console.log('this option is not Active'); return;}\n        setRenderedProduct({\n            productName: product.productOptions[productOption].productFullName,\n            price: product.productOptions[productOption].price,\n            images: product.productOptions[productOption].images,\n            inStock: product.productOptions[productOption].inStock,\n            features: [...product.features, ...getOptionIndicesArray(productOption).map((eaOp,eaOpIndex)=>( product.optionCategoriesObject[product.optionCategories[eaOpIndex]][eaOp].optionFeatures )).reduce((ac,eaAr)=>[...ac,...eaAr],[]) ],\n            specs: [...product.specs, ...getOptionIndicesArray(productOption).map((eaOp,eaOpIndex)=>( product.optionCategoriesObject[product.optionCategories[eaOpIndex]][eaOp].optionSpecs )).reduce((ac,eaAr)=>[...ac,...eaAr],[]) ]\n        });\n    }\n    const selectProductOption = (option)=>{\n        console.log('request to select', option);\n        setProductOption(option);\n    }\n    const setHistoryToProductOption=(option)=>{ history.push(`/product/${productid}?productOption=${option}`) }\n    useEffect(()=>{\n        if(!product || product.hasOptions == false || !product?.productOptions || product.productOptions[productOption].isActive == false) return;\n        \n        getRenderedProduct();\n    },[productOption])\n    useEffect(()=>{\n        return history.listen(()=>{\n            query = queryString.parse(history.location.search);\n            var localProductOption = query?.productOption || 'default';\n            return selectProductOption(localProductOption);\n        });\n    },[history])\n\n    const authuid = useSelector((state)=>state.firebase.auth.uid) ?? 'default';\n    const [cartQuantity, setCartQuantity] = useState(1);\n    const handleCartUpdate = (val)=>{\n        if(val>=0) setCartQuantity(val)\n        else{ setCartQuantity(1) }\n    }\n    const {addToCart} = props;\n    const addingToCart = ()=>{\n        if(cartQuantity == 0){ handleCartUpdate(1); return; }\n        console.log('adding to cart');\n        var newProduct = {\n            cartQty      : cartQuantity,\n            defaultImage : renderedProduct.images[0] ?? '',\n            option       : productOption ?? false,\n            productName  : renderedProduct.productName,\n            productPrice : renderedProduct.price,\n            productid    : productid ?? null ,\n            createdAt    : new Date()\n        }\n        if(!authuid || authuid =='default'){\n            alert('Please Login to add this item to cart');\n            history.push('/login');\n        }else{\n            addToCart(newProduct);\n            history.push('/cart');\n        }\n    }\n    \n    const categoryOptionsSelectionBtns = (product && product.hasOptions && product.optionCategories && product.optionCategoriesObject)?(\n        <div className=\"categoryOptionsSelectionBtnsSection\">\n            {product.optionCategories.map((eachCat, eachCatIndex)=>(\n            <Fragment key={uuid()}>\n                <p key={uuid()} className=\"flow-text head heavy_text\">{eachCat} :</p>\n                <div className=\"row-flex-center flex-wrap\">\n                {product.optionCategoriesObject[eachCat].map((eachCatObj,eachCatObjIndex)=>{\n                    var opAr = getOptionIndicesArray(productOption);\n                    var isSelected = (getOptionIndicesArray(productOption)[eachCatIndex] == eachCatObjIndex);\n                    opAr[eachCatIndex] = eachCatObjIndex;\n                    var op = getOptionString(opAr);\n                    // console.log(opAr,op);\n                    var isAvailable  = product.productOptions[op].isActive;\n                    var bestMatch = op;\n                    if(!isAvailable){\n                        var allOpAr = Object.keys(product.productOptions).sort().map((ea)=> getOptionIndicesArray(ea) );\n                        bestMatch = getOptionString(allOpAr.find(eaAr=> (eaAr[eachCatIndex]==eachCatObjIndex && product.productOptions[getOptionString(eaAr)].isActive)))\n                    }\n                    if(isAvailable && isSelected){\n                        return ( <div key={uuid()}  className=\"category_chip selected\">{eachCatObj.optionName}</div> )\n                    }else if(isAvailable){\n                        return ( <div key={uuid()} onClick={()=>{setHistoryToProductOption(op)}} className=\"category_chip available\">{eachCatObj.optionName}</div> )\n                    }else{\n                        return ( <div key={uuid()} onClick={()=>{setHistoryToProductOption(bestMatch)}} className=\"category_chip unavailable\">{eachCatObj.optionName}</div> )\n                    }\n                })}\n                </div>\n            </Fragment>\n            ))}\n        </div>\n    ):(null);\n\n    const ImageSectionJSX = (renderedProduct && renderedProduct.images)?(\n        <div className=\"image-section\">\n            <div className=\"card round-card\">\n                <div className=\"card-content\">\n                <OwlCarousel  options={{\n                items: 1,\n                nav: false,\n                dots: true,\n                dotsEach:true,\n                rewind: true,\n                autoplay: true,\n                loop: true,\n                }} \n                events={{}} \n            >\n                { renderedProduct.images.map((eachImage,index)=> (<div key={uuid()}><img src={eachImage} alt={renderedProduct.productName+\"-img\"+index}/></div>) ) }\n            </OwlCarousel>\n                </div>\n            </div>\n        </div>\n    ):(null)\n\n    const InStockJSX = (renderedProduct && renderedProduct.inStock)?(\n        <div>\n            <hr/>\n            <h5 className=\"green-text heavy_text\">In Stock</h5>\n            From: <span className=\"primary-green-light-text\">Digizup Exclusive Seller</span>\n            <div className=\"row\">\n                <div className=\"col s6 m12 l6 center\">\n                <div className=\"quantity-selection-container\">\n                    <div onClick={()=>{handleCartUpdate(cartQuantity-1)}} className=\"btn-floating quantity-adjustment-btn\"> <i className=\"material-icons\">remove_circle</i> </div>\n                    <input value={cartQuantity} onChange={(e)=>{handleCartUpdate(e.target.value)}} className=\"cart-quantity-input\" type=\"number\"/>\n                    <div onClick={()=>{handleCartUpdate(cartQuantity+1)}} className=\"btn-floating quantity-adjustment-btn\"> <i className=\"material-icons\">add_circle</i> </div>\n                </div>\n                </div>\n                <div className=\"col s6 m12 l6 center\">\n                <div \n                    onClick={()=>{ addingToCart() }}\n                    className=\"btn btn add-to-cart-btn\"\n                > <i className=\"material-icons\">add_shopping_cart</i> Add to Cart</div>\n                </div>\n            </div>\n            <hr/>\n        </div>\n    ):(\n        <h5 className=\"primary-red-text heavy_text\">Out of Stock</h5>\n    )\n\n    const FeaturesJSX = (renderedProduct && renderedProduct.features?(\n        <Fragment>\n            <h5 className=\"left-align head regular_text\">Features</h5>\n            <p className=\"line-break\" key={uuid()}>\n            {renderedProduct.features.map((feature,index)=>(\n                <Fragment key={uuid()}><span className=\"head\">‣ </span>{feature}{\"\\n\\n\"}</Fragment>\n            ))}\n            </p>\n        </Fragment>\n    ):(null))\n\n    const SpecsJSX= (renderedProduct && renderedProduct.specs?(\n        <Fragment>\n            <h5 className=\"left-align head regular_text\">Specs</h5>\n            <table>\n            <tbody>\n            {renderedProduct.specs.map((spec,index)=>(\n                <tr key={uuid()}>\n                    <td className=\"primary-green-dark-bg white-text\" >{spec.specKey}</td>\n                    <td className=\"white head\" >{spec.specValue}</td>\n                </tr>\n            ))}\n            </tbody>\n            </table>\n        </Fragment>\n    ):(null))\n\n    const DescriptionJSX= (renderedProduct && renderedProduct.description?(\n        <Fragment>\n            <h5 className=\"left-align head regular_text\">Description</h5>\n            <div className=\"container\">\n                <p className=\"line-break\">{renderedProduct.description}</p>\n            </div>\n        </Fragment>\n    ):(null))\n\n    return (\n        <div className=\"Product Page\">\n            {(renderedProduct && renderedProduct.productName)\n            ?(\n            <div className=\"container\">\n                <div className=\"top-row\">\n                    {ImageSectionJSX}\n                    <div className=\"product-section\">\n                        <h4 className=\"center head light_text\">{renderedProduct.productName}</h4>\n                        <h4 className=\"right-align head heavy_text\">{priceFormat(renderedProduct.price)}</h4>\n                        {categoryOptionsSelectionBtns}\n                        {InStockJSX}\n                        {FeaturesJSX}\n                    </div>\n                </div>\n                {DescriptionJSX}\n                {SpecsJSX}\n            </div>\n            )\n            :(null)}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        cartUpdate: state.cartUpdate\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        addToCart: (newProduct)=>{ dispatch( addToCartAction(newProduct) ) },\n        cartMessageReset: ()=>{ dispatch( cartMessageReset() ) }\n    }\n}\n\nexport default \ncompose(\n    connect(mapStateToProps,mapDispatchToProps),\n    withRouter\n)(Product)\n","import React, { useEffect, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction ScrollToTop({ history, children }) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    }\n  }, []);\n\n  return <Fragment>{children}</Fragment>;\n}\n\nexport default withRouter(ScrollToTop);","import React,{useState, useEffect} from 'react'\nimport 'materialize-css';\nimport { Card, CardTitle, Icon, Chip } from 'react-materialize';\nimport { priceFormat } from '../utils/utils';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment';\n\nfunction OrderCard(props) {\n    const history = useHistory();\n    var {order} = props;\n    var {defaultImage, id, cartCount, total ,createdAt, status} = order;\n    var redirectToOrderSummaryPage = ()=>{\n        console.log('redirect to order summary page');\n        history.push('/account/order/'+id);\n    }\n    return (\n        <div className=\"OrderCard\">\n            <Card\n              className=\"round-card\"\n              closeIcon={<Icon>close</Icon>}\n              header={<CardTitle onClick={redirectToOrderSummaryPage} image={defaultImage} />}\n              horizontal\n              revealIcon={<Icon>more_vert</Icon>}\n            >\n                <Chip\n                  className=\"green-chip\"\n                  close={false}\n                  closeIcon={<Icon className=\"close\">close</Icon>}\n                  options={null}\n                >\n                  <span className=\"flow-text\">{cartCount}</span> {(cartCount>1)?'items':'item'}\n                </Chip>\n                <div className=\"row\">\n                  <div className=\"col s12 l7\">\n                    <table>\n                      <tbody>\n                        <tr><td>Order Placed: </td><th>{moment(createdAt.toDate()).format('MMM Do YY, h:mm a')}</th></tr>\n                        <tr><td>Total: </td><th>{priceFormat(total)}</th></tr>\n                        <tr><td>Status: </td><th>{status}</th></tr>\n                      </tbody>\n                    </table>\n                  </div>\n                  <div className=\"col s12 l5\">\n                    <div className=\"row\">\n                        <div onClick={redirectToOrderSummaryPage} className=\"col s12 l12 center\"> <div className=\"btn light_btn\">View Order</div> </div>\n                        <div onClick={redirectToOrderSummaryPage} className=\"col s12 l12 center\"> <div className=\"btn dark_btn\">Track Order</div> </div>\n                    </div>\n                  </div>\n                </div>\n            </Card> \n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n  return {\n  }\n}\n\nexport default connect(mapStateToProps,null)(OrderCard);","import React, { useState, useEffect, Fragment } from 'react'\nimport { compose } from 'redux'\nimport { withRouter, NavLink } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { useFirestoreConnect } from 'react-redux-firebase';\nimport Delayed from '../utils/Delayed';\nimport OrderCard from '../components/OrderCard';\nimport _ from 'lodash';\nimport { v1 as uuid } from 'uuid'\n\nfunction Orders() {\n    \n    const authuid = useSelector(state=>state.firebase.auth.uid) ?? 'default';\n    // useFirestoreConnect([{\n        // collection: 'users',\n        // doc: authuid,\n        // subcollections: [{collection: 'orders'}],\n        // storeAs: 'orders'\n    // }]);\n    const ordersCollection =  useSelector(state=>state.firestore.ordered.orders) ?? [];\n    const [orders, setOrders] = useState([]);\n    useEffect(()=>{\n        var local = ordersCollection;\n        local = _.orderBy(local,['createdAt'],['desc'])\n        setOrders(local);\n    },[ordersCollection])\n    \n    const ordersJSX = (\n        <div className=\"orders\">\n            {(!orders || orders.length == 0)?(\n                <div className=\"center\">\n                <div className=\"row\">\n                <div className=\"col s8 m6 l6 offset-s2 offset-m3 offset-l3\">\n                <div className=\"card round-card\">\n                <div className=\"card-content\">\n                    <p className=\"flow-text\">\n                        No Orders placed yet\n                    </p>\n                    <NavLink to='/store/all'><div className=\"btn dark_btn\">Shop Now</div></NavLink>\n                </div>    \n                </div>    \n                </div>\n                </div>\n                </div>\n            ):(\n                <div className=\"row\">\n                    { orders.map((order)=>( \n                        <div key={uuid()} className=\"col s12 m8 l8 offset-m2 offset-l2\">\n                            <OrderCard order={order} />\n                        </div>\n                     )) }\n                </div>\n            )}\n        </div>\n    )\n\n    return (\n        <div className=\"Orders Page\">\n            <h3 className=\"center primary-green-dark-text\">Your <span className=\"heavy_text\">Orders</span></h3>\n            {(!authuid || authuid == 'default')?(\n                <div className=\"center\">\n                <div className=\"row\">\n                <div className=\"col s8 m6 l6 offset-s2 offset-m3 offset-l3\">\n                <div className=\"card round-card\">\n                <div className=\"card-content\">\n                    <p className=\"flow-text\">\n                        Please <span className=\"heavy_text primary-green-dark-text\">SignIn</span> To Continue\n                    </p>\n                </div>    \n                </div>    \n                </div>\n                </div>\n                </div>\n            ):(\n                <Delayed waitBeforeShow={3000}>\n                    {ordersJSX}\n                </Delayed>\n            )}\n        </div>\n    )\n}\n\nexport default compose(\n    withRouter\n)(Orders)","import React, { useState, useEffect, Fragment } from 'react'\nimport { withRouter, useHistory, NavLink } from 'react-router-dom'\nimport { compose } from 'redux'\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase';\nimport { useSelector, connect } from 'react-redux';\nimport moment from 'moment';\nimport { v1 as uuid } from 'uuid';\nimport { priceFormat } from '../utils/utils';\nimport Delayed from '../utils/Delayed';\nimport _ from 'lodash';\nimport 'materialize-css';\nimport { Modal, Button } from 'react-materialize';\nimport { requestCancellationAction } from '../store/actions/orderActions';\nimport axios from '../axios/axios'\nimport Loading from '../components/Loading';\nimport InfoCard from '../components/InfoCard';\n\nfunction Order(props) {\n    // console.log(props)\n    const history = useHistory();\n    const {orderid} = props.match.params ?? null;\n    const authuid = useSelector(state=> state.firebase.auth.uid)??'default';\n    const orders = useSelector(state=>state.firestore.ordered.orders)??[];\n    const order = orders.find(each => orderid == each.id);\n    useEffect(()=>{\n        if(!order) return;\n    },[order])\n    const productRedirect = (item)=>{\n        var target = '/product/'+item.productid+((item.option != false)?('?productOption='+item.option):(''));\n        history.push(target);\n    }\n\n    const {requestCancellationAction} = props;\n    const [cancellationMessage,setCancellationMessage] = useState('');\n    const requestCancellation = async ()=>{\n        console.log('requesting cancellation', orderid,cancellationMessage);\n        return await axios({\n            method: 'post',\n            url: `/requestCancellation?userid=${authuid}&&orderid=${orderid}&&cancellationMessage=${cancellationMessage.split(' ').join('+')}`\n        }).catch(()=>{})\n    }\n    const cancelButton = (order && order.id) ?(\n            <Modal\n              actions={[\n                  <Fragment>\n                    <Button flat modal=\"close\" node=\"button\" waves=\"green\">Close</Button>\n                    <Button flat modal=\"close\" node=\"button\" waves=\"red\" onClick={()=>{requestCancellation()}} >Request Cancellation</Button>\n                </Fragment>\n              ]}\n              bottomSheet={false}\n              fixedFooter={false}\n              header=\"Cancel Order\"\n              id=\"Modal-0\"\n              open={false}\n              options={{\n                dismissible: true,\n                endingTop: '40%',\n                inDuration: 250,\n                onCloseEnd: null,\n                onCloseStart: null,\n                onOpenEnd: null,\n                onOpenStart: null,\n                opacity: 0.5,\n                outDuration: 250,\n                preventScrolling: true,\n                startingTop: '20%'\n              }}\n              trigger={<div className=\"btn red_btn\">Cancel Order</div>}\n            >   \n                <input onChange={(e)=>{setCancellationMessage(e.target.value)}} type=\"text\" placeholder=\"Reason for cancellation\" value={cancellationMessage}/>\n            </Modal>\n        ):(null);\n\n    const orderCreds = (order && order.id && order.cart)?\n    (<div className=\"card round-card\">\n        <div className=\"card-content\">\n            <h6 className=\"center\">Order</h6>\n            <table>\n                <tbody>\n                    <tr><th>Order ID :</th><th>{order.id}</th></tr>\n                    <tr><th>Cart Count :</th><th>{order.cartCount}</th></tr>\n                    <tr><th>Order Placed :</th><th>{moment(order.createdAt.toDate()).format('MMM Do YY, h:mm a')}</th></tr>\n                </tbody>\n            </table>\n        </div>\n    </div>):(null);\n\n    const orderPayment = (order && order.id && order.cart)?\n    (<div className=\"card round-card\">\n        <div className=\"card-content\">\n            <h6 className=\"center\">Payment Mode: <span className=\"heavy_text\">{order.paymentType}</span></h6>\n            <table>\n                <tbody>\n                {(order.paymentType == 'card' && order.card) ? (\n                    <Fragment>\n                    <tr><td>Card Holder :</td><th>{order.card.cardHolderName}</th></tr>\n                    <tr><td>Card Number :</td><th>{order.card.cardNo}</th></tr>\n                    </Fragment>\n                ) : (null)}\n                </tbody>\n            </table>\n        </div>\n    </div>):(null);\n\n    const orderAddress = (order && order.id && order.cart)?\n    (<div className=\"card round-card\">\n        <div className=\"card-content\">\n            <h6 className=\"center\">Address: </h6>\n            {(order.address) ? (<table>\n                <tbody>\n                    <tr><td className=\"no-wrap\">Name :</td><th>{order.address.fullName}</th></tr>\n                    <tr><td className=\"no-wrap\">Address :</td><th className=\"line-break\">{order.address.addressLine + \"\\n\" + order.address.city + \", \" + order.address.state}</th></tr>\n                    <tr><td className=\"no-wrap\">Pincode :</td><th>{order.address.pincode}</th></tr>\n                    <tr><td className=\"no-wrap\">Phone No. :</td><th>{order.address.phoneNo + ' - ' + order.address.country}</th></tr>\n                </tbody>\n            </table>) : (null)}\n        </div>\n    </div>):(null);\n\n    const orderTracking = (order && order.id && order.cart)?\n    (<div className=\"card round-card\">\n        <div className=\"card-content\">\n            <h6 className=\"center\">Order Status: <span className=\"heavy_text\">{order.status}</span></h6>\n            {(order.tracking) ? (<table>\n                <tbody>\n                    {order.tracking.map(each => (<tr key={uuid()}><td className=\"line-break\">{each.title}</td><td className=\"no-wrap\">{moment(each.updateTime.toDate()).format('MMM Do YY, h:mm a')}</td></tr>))}\n                </tbody>\n            </table>) : (null)}\n            {['Out for Delivery', 'Delivered', 'Cancelled'].includes(order.status)?(null):(\n                <Fragment>\n                    {(['Cancellation Requested'].includes(order.status))\n                    ?( <div className=\"btn red_btn disabled\">Request Cancellation</div> )\n                    :(<Fragment>{cancelButton}</Fragment>)}\n                </Fragment>\n            )}\n            \n        </div>\n    </div>):(null);\n\n    const orderCart = (order && order.id && order.cart)?\n    (<div className=\"card round-card\">\n        <div className=\"card-content\">\n            <h6 className=\"center\">Cart Details:</h6>\n            {(order.cart) ? (<table>\n                <tbody>\n                    <tr>\n                        <td className=\"no-wrap heavy_text\">Product Name</td>\n                        <td className=\"no-wrap heavy_text\">Price</td>\n                        <td className=\"no-wrap heavy_text\">Cart Qty</td>\n                        <td className=\"no-wrap heavy_text\">SubTotal</td>\n                    </tr>\n                    {(order.cart.map(item => (<tr key={uuid()} >\n                        <td className=\"text-link\" onClick={() => { productRedirect(item); } }>{item.productName}</td>\n                        <td className=\"no-wrap\">{priceFormat(item.productPrice)}</td>\n                        <td className=\"no-wrap\">{item.cartQty}</td>\n                        <td className=\"no-wrap\">{priceFormat(item.productPrice * item.cartQty)}</td>\n                    </tr>)))}\n                    <tr>\n                        <td></td>\n                        <td className=\"no-wrap\"></td>\n                        <td className=\"no-wrap heavy_text\">Total: </td>\n                        <td className=\"no-wrap heavy_text\">{priceFormat(order.total)}</td>\n                    </tr>\n                </tbody>\n            </table>) : (<p>no table</p>)}\n        </div>\n    </div>):(null);\n    const OrderPageJSX =  (order && order.id)?(\n        \n        <div className=\"row\">\n            <div className=\"col s12 m6\">{orderCreds}</div>\n            <div className=\"col s12 m6\">{orderPayment}</div>\n            <div className=\"col s12\"></div>\n            <div className=\"col s12 m6\">{orderAddress}</div>\n            <div className=\"col s12 m6\">{orderTracking}</div>\n            <div className=\"col s12\"></div>\n            <div className=\"col s12 m12\">{orderCart}</div>\n        </div>\n    ):(null)\n    return (\n        <div className=\"Order Page\">\n        <div className=\"container\">\n            {(order)?(\n                OrderPageJSX\n            ):(\n            <Delayed waitBeforeShow={3000}>\n            <InfoCard>\n                <p className=\"flow-text\">\n                    Please verify your order id\n                </p>\n                <NavLink to=\"/account/orders\" className=\"btn dark_btn\">Check Orders</NavLink>\n            </InfoCard>\n            </Delayed>\n            )}\n        </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    // console.log(state);\n    return {\n        \n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        requestCancellationAction: (orderID, cancellationMessage)=>{dispatch(requestCancellationAction(orderID, cancellationMessage))},\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withRouter\n)(Order)\n","export const requestCancellationAction = (orderId, cancellationMessage)=>{\n    console.log('rqCan dispatch', orderId, cancellationMessage);\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        console.log('in in dispatch', orderId, cancellationMessage);\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        console.log('authuid', authuid);\n        firestore.collection('users').doc(authuid).collection('orders').doc(orderId).get()\n        .then(snap=>{\n            console.log('got snap',snap);\n            var {tracking} = snap.data();\n            tracking.unshift({ title: 'Cancellation Requested', updateTime: new Date() });\n            console.log('tracking',tracking);\n            console.log(orderId, cancellationMessage);\n            return firestore.collection('users').doc(authuid).collection('orders').doc(orderId).update({\n                tracking,\n                status: \"Cancellation Requested\",\n                cancellationMessage\n            })\n        })\n        .then(()=>{\n            console.log('success added');\n        })\n        .catch((err)=>{console.log('err=>',err.message)});\n\n    }\n    // return (dispatch, getState, {getFirestore, getFirebase})=>{\n        // console.log('in in dispatch', orderId, cancellationMessage);\n        // return dispatch({type:'akjsdf'});\n    // }\n}","export const addAddressAction = (newAddress)=>{\n    console.log('addAddressAction')\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('users').doc(authuid).collection('addresses').add({...newAddress, createdAt: new Date()})\n        .then(()=>{\n            console.log('newAddress added');\n        })\n        .catch((err)=>{console.log('err=>',err.message)});\n\n    }\n}\n\nexport const removeAddressAction = (addressid)=>{\n    console.log('addAddressAction')\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('users').doc(authuid).collection('addresses').doc(addressid).delete()\n        .then(()=>{\n            console.log('address removed');\n        })\n        .catch((err)=>{console.log('err=>',err.message)});\n\n    }\n}\n\nexport const addCardAction = (newCard)=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('users').doc(authuid).collection('cards').add({...newCard, createdAt: new Date()})\n        .then(()=>{ console.log('new card added') })\n        .catch((err)=>{ console.log('err=>', err.message) })\n    }\n}\n\nexport const removeCardAction = (cardid)=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('users').doc(authuid).collection('cards').doc(cardid).delete()\n        .then(()=>{ console.log('card removed') })\n        .catch((err)=>{ console.log('err=>', err.message) })\n    }\n}","import React, { useEffect, Fragment } from 'react'\nimport { compose } from 'redux'\nimport { connect, useSelector } from 'react-redux'\nimport { withRouter, useHistory, NavLink } from 'react-router-dom'\nimport { addCardAction, removeCardAction, addAddressAction, removeAddressAction } from '../store/actions/accountActions'\nimport { useFirestoreConnect } from 'react-redux-firebase'\nimport Delayed from '../utils/Delayed'\n\nfunction Account(props){\n    const { addCard, removeCard, addAddress, removeAddress } = props;\n    const authuid = useSelector(state=>state.firebase.auth.uid) || 'default';\n    const profile = useSelector(state=>state.firebase.profile) || {};\n    const history = useHistory();\n    useEffect(()=>{\n        if(!authuid || authuid == 'default'){\n            setTimeout(()=>{\n                history.push('/login');\n            },2000);\n        }\n    },[authuid])\n\n    const AccountPageJSX = (authuid && authuid!='default')?(\n        <Fragment>\n            <div className=\"row\">\n                <div className=\"col s12 m8 l6 offset-m2 offset-l3\">\n                    <div className=\"card round-card\">\n                    <div className=\"cart-title\"> <h6 className=\"center primary-green-dark-text\"><span className=\"heavy_text\">Account</span> Details:</h6> </div>\n                    <div className=\"card-content\">\n                    <table> \n                        <tbody>\n                            <tr><td>First Name:</td><th>{profile.firstName}</th></tr>\n                            <tr><td>Last Name:</td><th>{profile.lastName}</th></tr>\n                        </tbody>\n                    </table>\n                    </div>\n                    </div>\n                </div>\n                <div className=\"col s12 m6 l6\">\n                    <div className=\"card round-card\">\n                    <div className=\"cart-title\"> <h6 className=\"center primary-green-dark-text\">Manage <span className=\"heavy_text\">Addresses</span> :</h6> </div>\n                    <div className=\"card-content center\">\n                        <NavLink to=\"/account/addresses\">\n                            <div className=\"btn dark_btn\">Manage Addresses</div>\n                        </NavLink>\n                    </div>\n                    </div>\n                </div>\n                {/* <div className=\"col s12 m6 l6\">\n                    <div className=\"card round-card\">\n                    <div className=\"cart-title\"> <h6 className=\"center primary-green-dark-text\">Manage <span className=\"heavy_text\">Payments</span> :</h6> </div>\n                    <div className=\"card-content center\">\n                        <NavLink to=\"/account/payments\">\n                            <div className=\"btn dark_btn\">Manage Payments</div>\n                        </NavLink>\n                    </div>\n                    </div>\n                </div> */}\n                <div className=\"col s12 m6 l6\">\n                    <div className=\"card round-card\">\n                    <div className=\"cart-title\"> <h6 className=\"center primary-green-dark-text\">Manage <span className=\"heavy_text\">Orders</span> :</h6> </div>\n                    <div className=\"card-content center\">\n                        <NavLink to=\"/account/orders\">\n                            <div className=\"btn dark_btn\">Manage Orders</div>\n                        </NavLink>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    ):(null)\n\n    return (\n        <div className=\"Account Page\" >\n            <div className=\"container\">\n                {(!authuid||authuid=='default')?(\n                    <div className=\"row\">\n                    <div className=\"col s12 m6 l6 offset-m2 offset-l2\">\n                    <div className=\"card round-card\">\n                    <div className=\"card-content center\">\n                    <h6>Please <span className=\"heavy_text primary-green-dark-text\">SignIn</span> to Continue</h6>\n                    </div>\n                    </div>\n                    </div>\n                    </div>\n                ):(\n                    <Delayed waitBeforeShow={3000}>\n                        <Fragment>{AccountPageJSX}</Fragment>\n                    </Delayed>\n                )}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    // console.log(state);\n    return { \n\n    }\n}\n\nconst mapStateToDispatch = (dispatch) =>{\n    return {\n        addCard: (newCard)=>{dispatch( addCardAction(newCard) )},\n        removeCard: (cardid)=>{dispatch( removeCardAction(cardid) )},\n        addAddress: (newAddress)=>{dispatch( addAddressAction(newAddress) )},\n        removeAddress: (cardid)=>{dispatch( removeAddressAction(cardid) )}\n        \n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapStateToDispatch),\n    withRouter\n)(Account)","import React, { useEffect, Fragment, useState } from 'react'\nimport { compose } from 'redux'\nimport { connect, useSelector } from 'react-redux'\nimport { withRouter, useHistory, NavLink } from 'react-router-dom'\nimport { addCardAction, removeCardAction, addAddressAction, removeAddressAction } from '../store/actions/accountActions'\nimport { useFirestoreConnect } from 'react-redux-firebase'\nimport Delayed from '../utils/Delayed'\nimport 'materialize-css';\nimport { Collapsible, CollapsibleItem, Icon, Modal, Button } from 'react-materialize';\nimport { v1 as uuid } from 'uuid';\n\nfunction AccountAddresses(props){\n    const { addCard, removeCard, addAddress, removeAddress } = props;\n    const authuid = useSelector(state=>state.firebase.auth.uid) || 'default';\n    const profile = useSelector(state=>state.firebase.profile) || {};\n    const history = useHistory();\n    useEffect(()=>{\n        if(!authuid || authuid == 'default'){\n            setTimeout(()=>{\n                history.push('/login');\n            },2000);\n        }\n    },[authuid])\n\n    useFirestoreConnect([{\n        collection: 'users',\n        doc: authuid,\n        subcollections: [{ collection: 'addresses' }],\n        storeAs: 'addresses'\n    }])\n\n    const addresses = useSelector( state => state.firestore.ordered.addresses)??[];\n    const initAddress = { fullName    :'', addressLine :'', city    :'', state   :'', country :'', pincode :'', phoneNo :'' };\n    const [newAddress, setNewAddress] = useState(initAddress);\n    const submitNewAddress = ()=>{\n        addAddress(newAddress);\n        setNewAddress(initAddress);\n    }\n    const submitRemoveAddress = (addressid)=>{\n        removeAddress(addressid);\n    }\n    \n    const addAddressBtn = (\n            <Modal\n              actions={[\n                (<Button flat modal=\"close\" node=\"button\" waves=\"red\">Close</Button>),\n                (<Button onClick={()=>{submitNewAddress(newAddress)}} flat modal=\"close\" node=\"button\" waves=\"green\">Add Address</Button>)\n              ]}\n              bottomSheet={false}\n              fixedFooter={true}\n              header=\"Add a new Address\"\n              id=\"addAddressModal\"\n              open={false}\n              options={{\n                dismissible: true,\n                endingTop: '16%',\n                inDuration: 250,\n                onCloseEnd: null,\n                onCloseStart: null,\n                onOpenEnd: null,\n                onOpenStart: null,\n                opacity: 0.5,\n                outDuration: 250,\n                preventScrolling: true,\n                startingTop: '55%'\n              }}\n            //   root={[object HTMLBodyElement]}\n              trigger={<div className=\"btn light_btn\"> <i className=\"material-icons\">add</i> <span>Add Address</span> </div>}\n            >\n                <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                        <i className=\"material-icons prefix\">account_circle</i>\n                        <input onChange={(e)=>{setNewAddress({...newAddress, fullName:e.target.value})}} value={newAddress.fullName} id=\"fullName-addAddress\" type=\"text\" required />\n                        <label  htmlFor=\"fullName-addAddress\">Full Name</label>\n                    </div>\n                    <div className=\"input-field col s12\">\n                        <i className=\"material-icons prefix\">location_city</i>\n                        <input onChange={(e)=>{setNewAddress({...newAddress, addressLine:e.target.value})}} value={newAddress.addressLine} id=\"addressLine-addAddress\" type=\"text\" required />\n                        <label htmlFor=\"addressLine-addAddress\">Address Line</label>\n                    </div>\n                    <div className=\"input-field col s6\">\n                        <i className=\"material-icons prefix\">location_on</i>\n                        <input onChange={(e)=>{setNewAddress({...newAddress, city:e.target.value})}} value={newAddress.city} id=\"city-addAddress\" type=\"text\" required />\n                        <label htmlFor=\"city-addAddress\">City</label>\n                    </div>\n                    <div className=\"input-field col s6\">\n                        <input onChange={(e)=>{setNewAddress({...newAddress, state:e.target.value})}} value={newAddress.state} id=\"state-addAddress\" type=\"text\" required />\n                        <label htmlFor=\"state-addAddress\">State</label>\n                    </div>\n                    <div className=\"input-field col s6\">\n                        <input onChange={(e)=>{setNewAddress({...newAddress, country:e.target.value})}} value={newAddress.country} id=\"country-addAddress\" type=\"text\" required />\n                        <label htmlFor=\"country-addAddress\">Country</label>\n                    </div>\n                    <div className=\"input-field col s6\">\n                        <input onChange={(e)=>{setNewAddress({...newAddress, pincode:e.target.value})}} value={newAddress.pincode} id=\"pincode-addAddress\" type=\"text\" required />\n                        <label htmlFor=\"pincode-addAddress\">Pincode</label>\n                    </div>\n                    <div className=\"input-field col s12\">\n                        <i className=\"material-icons prefix\">local_phone</i>\n                        <input onChange={(e)=>{setNewAddress({...newAddress, phoneNo:e.target.value})}} value={newAddress.phoneNo} id=\"phoneNo-addAddress\" type=\"text\" required />\n                        <label htmlFor=\"phoneNo-addAddress\">Phone Number</label>\n                    </div>\n                </div>\n            </Modal>\n    );\n\n    const AccountAddressesPageJSX = (authuid && authuid!='default')?(\n        <Fragment>\n            <div className=\"row\">\n                <div className=\"col s12 m8 offset-m2\">\n                    <div className=\"card round-card\">\n                        <div className=\"card-content\">\n                            <h6 className=\"center\">Wanna add <span className=\"heavy_text primary-green-dark-text\">more addresses ?</span></h6>\n                            <div className=\"center\"> {addAddressBtn} </div>\n                        </div>\n                    </div>\n                </div>\n                {(addresses && addresses.length>0)?(\n                    <Fragment>\n                        {addresses.map((each,index)=>(\n                        <Fragment key={uuid()} >\n                        <div className=\"col s12 m12 l6\">\n                            <div className=\"card round-card\">\n                                <div className=\"card-content\">\n                                    <table>\n                                        <tbody>\n                                            <tr><td className=\"no-wrap\">Name :</td><th>{each.fullName}</th></tr>\n                                            <tr><td className=\"no-wrap\">AddressLine :</td><th>{each.addressLine}</th></tr>\n                                            <tr><td className=\"no-wrap\">City :</td><th>{each.city}</th></tr>\n                                            <tr><td className=\"no-wrap\">State :</td><th>{each.state}</th></tr>\n                                            <tr><td className=\"no-wrap\">Country :</td><th>{each.country}</th></tr>\n                                            <tr><td className=\"no-wrap\">Pincode :</td><th>{each.pincode}</th></tr>\n                                        </tbody>\n                                    </table>\n                                    <div>\n                                        <div className=\"right\">\n                                        <Button\n                                          className=\"red\"\n                                          floating\n                                          icon={<Icon>delete</Icon>}\n                                          large\n                                          node=\"button\"\n                                          waves=\"light\"\n                                          onClick={()=>{submitRemoveAddress(each.id)}}\n                                        />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div> \n                        {((index+1)%2==0)?(<div className=\"col s12\"></div>):(null)}\n                        </Fragment>\n                        ))}\n                    </Fragment>\n                ):(\n                    <div className=\"col s12 m8 l6 offset-m2 offset-l4\">\n                    <div className=\"card round-card\">\n                        <div className=\"card-content\">\n                            <h6 className=\"center\" >No Addresses found</h6>\n                            <div className=\"center\">\n                                {addAddressBtn}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                )}\n            </div>\n        </Fragment>\n    ):(null)\n\n    return (\n        <div className=\"AccountAddresses Page\" >\n            <div className=\"container\">\n                {(!authuid||authuid=='default')?(\n                    <div className=\"row\">\n                    <div className=\"col s12 m6 l6 offset-m2 offset-l2\">\n                    <div className=\"card round-card\">\n                    <div className=\"card-content center\">\n                    <h6>Please <span className=\"heavy_text primary-green-dark-text\">SignIn</span> to Continue</h6>\n                    </div>\n                    </div>\n                    </div>\n                    </div>\n                ):(\n                    <Delayed waitBeforeShow={3000}>\n                        <Fragment>{AccountAddressesPageJSX}</Fragment>\n                    </Delayed>\n                )}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    // console.log(state);\n    return { \n\n    }\n}\n\nconst mapStateToDispatch = (dispatch) =>{\n    return {\n        addCard: (newCard)=>{dispatch( addCardAction(newCard) )},\n        removeCard: (cardid)=>{dispatch( removeCardAction(cardid) )},\n        addAddress: (newAddress)=>{dispatch( addAddressAction(newAddress) )},\n        removeAddress: (cardid)=>{dispatch( removeAddressAction(cardid) )}\n        \n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapStateToDispatch),\n    withRouter\n)(AccountAddresses)\n","import React, { useEffect, Fragment, useState } from 'react'\nimport { compose } from 'redux'\nimport { connect, useSelector } from 'react-redux'\nimport { withRouter, useHistory, NavLink } from 'react-router-dom'\nimport { addCardAction, removeCardAction, addAddressAction, removeAddressAction } from '../store/actions/accountActions'\nimport { useFirestoreConnect } from 'react-redux-firebase'\nimport Delayed from '../utils/Delayed'\nimport 'materialize-css';\nimport { Collapsible, CollapsibleItem, Icon, Modal, Button } from 'react-materialize';\nimport { v1 as uuid } from 'uuid';\n\nfunction AccountPayments(props){\n    const { addCard, removeCard, addAddress, removeAddress } = props;\n    const authuid = useSelector(state=>state.firebase.auth.uid) || 'default';\n    const profile = useSelector(state=>state.firebase.profile) || {};\n    const history = useHistory();\n    useEffect(()=>{\n        if(!authuid || authuid == 'default'){\n            setTimeout(()=>{\n                history.push('/login');\n            },2000);\n        }\n    },[authuid])\n\n    useFirestoreConnect([{\n        collection: 'users',\n        doc: authuid,\n        subcollections: [{ collection: 'cards' }],\n        storeAs: 'cards'\n    }])\n\n    const cards = useSelector( state => state.firestore.ordered.cards)??[];\n    var initCard = { cardHolderName: '', cardNo: '', cardExpMM: '', cardExpYY: '' };\n    const [newCard, setNewCard] = useState(initCard);\n    const submitNewCard = (newCard)=>{\n        addCard(newCard);\n        setNewCard(initCard);\n    } \n    const submitRemoveCard = (cardid)=>{\n        removeCard(cardid);\n    }\n    \n    const addCardBtn = (\n        <Modal\n        actions={[\n          (<Button flat modal=\"close\" node=\"button\" waves=\"red\">Close</Button>),\n          (<Button onClick={()=>{ submitNewCard(newCard) }} flat modal=\"close\" node=\"button\" waves=\"green\">Add Card</Button>)\n        ]}\n        bottomSheet={false}\n        fixedFooter={true}\n        header=\"Add a new Card\"\n        id=\"addAddressModal\"\n        open={false}\n        options={{\n          dismissible: true,\n          endingTop: '16%',\n          inDuration: 250,\n          onCloseEnd: null,\n          onCloseStart: null,\n          onOpenEnd: null,\n          onOpenStart: null,\n          opacity: 0.5,\n          outDuration: 250,\n          preventScrolling: true,\n          startingTop: '55%'\n        }}\n      //   root={[object HTMLBodyElement]}\n        trigger={<div className=\"btn light_btn\"> <i className=\"material-icons\">add</i> <span>Add Card</span> </div>}\n      >\n          <div className=\"row\">\n              <div className=\"input-field col s12\">\n                  <i className=\"material-icons prefix\">account_circle</i>\n                  <input onChange={(e)=>{setNewCard({...newCard, cardHolderName:e.target.value})}} value={newCard.cardHolderName} id=\"cardHolderName-addCard\" type=\"text\" required />\n                  <label  htmlFor=\"cardHolder-addCard\">Full Name</label>\n              </div>\n              <div className=\"input-field col s8\">\n                  <i className=\"material-icons prefix\">payment</i>\n                  <input onChange={(e)=>{setNewCard({...newCard, cardNo:e.target.value})}} value={newCard.cardNo} id=\"cardNo-addCard\" type=\"text\" required />\n                  <label htmlFor=\"cardNo-addCard\">Card Line</label>\n                  {/* <NumberFormat customInput={TextField} format=\"#### #### #### ####\"/> */}\n              </div>\n              <div className=\"input-field col s2\">\n                  <input onChange={(e)=>{setNewCard({...newCard, cardExpMM:e.target.value})}} value={newCard.cardExpMM} id=\"cardExpMM-addCard\" type=\"text\" required />\n                  <label htmlFor=\"cardExpMM-addCard\">MM</label>\n              </div>\n              <div className=\"input-field col s2\">\n                  <input onChange={(e)=>{setNewCard({...newCard, cardExpYY:e.target.value})}} value={newCard.cardExpYY} id=\"cardExpYY-addCard\" type=\"text\" required />\n                  <label htmlFor=\"cardExpYY-addCard\">YY</label>\n              </div>\n          </div>\n      </Modal>\n    );\n    const DebitCreditCardsJSX = (authuid && authuid !='default')?(\n        <div className=\"row\">\n                <div className=\"s12\">\n                    <h5 className=\"center heavy_text primary-green-dark-text\"> <Icon>payments</Icon> Credit/Debit Cards</h5>\n                </div>\n                <div className=\"col s12 m8 offset-m2\">\n                    <div className=\"card round-card\">\n                        <div className=\"card-content\">\n                            <h6 className=\"center\">Wanna add <span className=\"heavy_text primary-green-dark-text\">more cards ?</span></h6>\n                            <div className=\"center\"> {addCardBtn} </div>\n                        </div>\n                    </div>\n                </div>\n                {(cards && cards.length>0)?(\n                    <Fragment>\n                        {cards.map((each,index)=>(\n                        <Fragment key={uuid()} >\n                        <div className=\"col s12 m12 l6\">\n                            <div className=\"card round-card\">\n                                <div className=\"card-content\">\n                                    <table>\n                                        <tbody>\n                                            <tr><td className=\"no-wrap\">Card Holder :</td><th>{each.cardHolderName}</th></tr>\n                                            <tr><td className=\"no-wrap\">Card Number :</td><th>{'XXXX XXXX XXXX '+each.cardNo.slice(12)}</th></tr>\n                                            <tr><td className=\"no-wrap\">Card Expiry :</td><th>{each.cardExpMM+'/'+each.cardExpYY}</th></tr>\n                                        </tbody>\n                                    </table>\n                                    <div>\n                                        <div className=\"right\">\n                                        <Button\n                                          className=\"red\"\n                                          floating\n                                          icon={<Icon>delete</Icon>}\n                                          large\n                                          node=\"button\"\n                                          waves=\"light\"\n                                          onClick={()=>{submitRemoveCard(each.id)}}\n                                        />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div> \n                        {((index+1)%2==0)?(<div className=\"col s12\"></div>):(null)}\n                        </Fragment>\n                        ))}\n                    </Fragment>\n                ):(\n                    <div className=\"col s12 m8 l6 offset-m2 offset-l4\">\n                    <div className=\"card round-card\">\n                        <div className=\"card-content\">\n                            <h6 className=\"center\" >No Cards found</h6>\n                            <div className=\"center\">\n                                {addCardBtn}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                )}\n            </div>\n    ):(null)\n    const AccountPaymentsPageJSX = (authuid && authuid!='default')?(\n        <Fragment>\n            <Collapsible accordion>\n              <CollapsibleItem\n                expanded={false}\n                header=\"Debit/Credit Cards\"\n                icon={<Icon>payments</Icon>}\n                node=\"div\"\n              >\n                {DebitCreditCardsJSX}\n              </CollapsibleItem>\n              <CollapsibleItem\n                expanded={false}\n                header=\"PayPal\"\n                icon={<Icon>place</Icon>}\n                node=\"div\"\n              >\n                Paypal!!! COMING SOON!\n              </CollapsibleItem>\n              <CollapsibleItem\n                expanded={false}\n                header=\"Paytm\"\n                icon={<Icon>place</Icon>}\n                node=\"div\"\n              >\n                Paytm!!! COMING SOON!\n              </CollapsibleItem>\n              <CollapsibleItem\n                expanded={false}\n                header=\"CryptoCurrencies\"\n                icon={<Icon>whatshot</Icon>}\n                node=\"div\"\n              >\n                CryptoCurrencies!! Comming Soon !!\n              </CollapsibleItem>\n            </Collapsible>\n        </Fragment>\n    ):(null)\n\n    return (\n        <div className=\"AccountPayments Page\" >\n            <div className=\"container\">\n                {(!authuid||authuid=='default')?(\n                    <div className=\"row\">\n                    <div className=\"col s12 m6 l6 offset-m2 offset-l2\">\n                    <div className=\"card round-card\">\n                    <div className=\"card-content center\">\n                    <h6>Please <span className=\"heavy_text primary-green-dark-text\">SignIn</span> to Continue</h6>\n                    </div>\n                    </div>\n                    </div>\n                    </div>\n                ):(\n                    <Delayed waitBeforeShow={3000}>\n                        <Fragment>{AccountPaymentsPageJSX}</Fragment>\n                    </Delayed>\n                )}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    // console.log(state);\n    return { \n\n    }\n}\n\nconst mapStateToDispatch = (dispatch) =>{\n    return {\n        addCard: (newCard)=>{dispatch( addCardAction(newCard) )},\n        removeCard: (cardid)=>{dispatch( removeCardAction(cardid) )},\n        addAddress: (newAddress)=>{dispatch( addAddressAction(newAddress) )},\n        removeAddress: (cardid)=>{dispatch( removeAddressAction(cardid) )}\n        \n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapStateToDispatch),\n    withRouter\n)(AccountPayments)\n","import React from 'react'\nimport notFoundImg from '../assets/img/page_not_found.png'\n\nfunction Err404() {\n    return (\n        <div className=\"Err404 Page\">\n        <div className=\"row\">\n        <div className=\"col s12 m8 l6 offset-m2 offset-l3\">\n        <div className=\"card round-card\">\n        <div className=\"card-content\">\n        <div className=\"center\">\n            <div className=\"image-container\">\n            <img src={notFoundImg} alt=\"\" />\n            </div>\n            <h4 className=\"center head\">Err!! Page Not Found</h4>\n        </div>\n        </div>\n        </div>\n        </div>\n        </div>\n        </div>\n    )\n}\n\nexport default Err404\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { compose } from 'redux';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport _ from 'lodash';\nimport { v1 as uuid } from 'uuid';\nimport logo from '../assets/img/digi-logo.jpg'\n\nfunction AppFooter(props) {\n    const categories = useSelector(state=>state.firestore.ordered.categories ?? []);\n    const link= (to,text) => \n    <div key={uuid()} className=\"footer-btn-container\">\n        <NavLink className=\"btn\" exact to={to}>{text}</NavLink>\n    </div>\n\n    return (\n        <div className=\"AppFooter\" >\n            <div className=\"footer-top primary-green-light-bg\">\n                <div className=\"logo-container\">\n                    <img src={logo} />\n                </div>\n                <div className=\"row-flex-center flex-wrap\">\n                    {link('/','Home')}\n                    {link('/store','Store')}\n                    {link('/cart','Cart')}\n                </div>\n                <div className=\"row-flex-center flex-wrap\">\n                    {categories && _.orderBy(categories,['title'],['asc']).map(each=>link(`/store/${each.urlid}`,each.title))}\n                </div>\n            </div>\n            <div className=\"footer-bottom primary-green-dark-bg\">\n                <h4 className=\"center white-text\">\n                    <span className=\"light_text\">Powered By</span> <a target=\"_blank\" href=\"https://digizup.com\" className=\"white-text\">Digizup</a><sup><span className=\"light_text\">&copy; 2020</span></sup>\n                </h4>\n            </div>\n        </div>\n    )\n}\n\nexport default compose(\n    withRouter\n)(AppFooter)\n","import React, { useState, useEffect } from 'react'\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js'\nimport { CardContent } from '@material-ui/core';\nimport { compose } from 'redux';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport axios from '../axios/axios'\n\nfunction Payment() {\n\n    const history = useHistory();    \n    const stripe = useStripe();\n    const elements = useElements();\n\n    const total = 0;\n\n    const [error, setError] = useState(null);\n    const [disabled, setDisabled] = useState(null);\n    const [processing, setProcessing] = useState(null);\n    const [succeeded, setSucceeded] = useState(null);\n    const [clientSecret, setClientSecret] = useState(true);\n    useEffect(()=>{\n       const getClientSecret = async ()=>{\n           const response = await axios({\n               method: 'post',\n               url: `/payments/create?total=${total*100}`\n           })\n           setClientSecret(response.data.clientSecret)\n       }\n       getClientSecret();\n    },[total])\n\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        console.log('submit');\n        setProcessing(true);\n        const payload = await stripe.confirmCardPayment(clientSecret,{\n            payment_method: {\n                card: elements.getElement(CardElement),\n                billing_details: {\n                    name: 'Danish Ansari',\n                  }\n            }\n        }).then(({paymentIntent})=>{\n            setSucceeded(true);\n            setError(null);\n            setProcessing(false);\n            history.replace('/account/orders')\n        })\n    }\n\n    const handleChange = (event)=>{\n        setDisabled(event.empty);\n        setError(event.error ? event.error.message : \"\");\n    }\n\n    return (\n        <div className=\"Payment Page\">\n            <div className=\"container\">\n            <h4 className=\"center head\">Payment</h4>\n            <div className=\"card round-card\">\n            <div className=\"card-content center\">\n                <form onSubmit={handleSubmit}>\n                    <CardElement onChange={handleChange} />\n                    <button  className=\"btn dark_btn\" disabled={processing || disabled || succeeded} >\n                        <span>\n                            {(processing ? \"Procesing\" : \"Pay Now\")}\n                        </span>\n                    </button>\n                </form>\n            </div>\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default compose(\n    withRouter\n)(Payment)\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './views/Home';\nimport About from './views/About';\nimport Cart from './views/Cart';\nimport Checkout from './views/Checkout';\nimport Store from './views/Store';\nimport Navbar from './components/Navbar';\nimport Login from './views/Login';\nimport Signup from './views/Signup';\nimport Product from './views/Product';\nimport Test from './views/Test';\nimport ScrollToTop from './utils/ScrollToTop';\nimport Category from './views/Category';\nimport Orders from './views/Orders';\nimport Order from './views/Order';\nimport Account from './views/Account';\nimport AccountAddresses from './views/AccountAddresses';\nimport AccountPayments from './views/AccountPayments';\nimport Err404 from './views/Err404';\nimport Loading from './components/Loading';\nimport LoadingFullScreen from './components/LoadingFullScreen';\nimport AppFooter from './components/AppFooter';\n\nimport { loadStripe } from '@stripe/stripe-js'\nimport { Elements } from '@stripe/react-stripe-js'\nimport Payment from './views/Payment';\n\nconst promise = loadStripe('pk_test_51HR0lzK03SbZNRhEPy0jM1O5DL7iDBBkTQko9PQFwOFn9sdhKeZ2KYEGy1gtfLnGKZ6nDN4htp0rhaSTLBe3BDQv00MKU66mjj');\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <ScrollToTop >\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/about\"> <About /> </Route>\n            <Route exact path=\"/store\"> <Store /> </Route>\n            <Route exact path=\"/store/:category\"> <Category /> </Route>\n            <Route exact path=\"/cart\"> <Cart /> </Route>\n            <Route exact path=\"/checkout\"> \n              <Elements stripe={promise}>\n                <Checkout />\n              </Elements>\n            </Route>\n            {/* <Route exact path=\"/payment\"> \n              <Elements stripe={promise}>\n                <Payment />\n              </Elements>\n            </Route> */}\n            <Route exact path=\"/login\"> <Login /> </Route>\n            <Route exact path=\"/signup\"> <Signup /> </Route>\n            <Route exact path=\"/product/:productid\"> <Product /> </Route>\n            <Route exact path=\"/account\"> <Account /> </Route>          \n            <Route exact path=\"/account/orders\"> <Orders /> </Route>          \n            <Route exact path=\"/account/order/:orderid\"> <Order /> </Route>          \n            <Route exact path=\"/account/addresses\"> <AccountAddresses /> </Route>          \n            {/* <Route exact path=\"/account/payments\"> <AccountPayments /> </Route>           */}\n            {/* <Route exact path=\"/loading\"> <Loading /> </Route>           */}\n            {/* <Route exact path=\"/loadingfull\"> <LoadingFullScreen /> </Route>           */}\n            {/* <Route exact path=\"/err404\"> <Err404 /> </Route>           */}\n            <Route exact path=\"/\"> <Home /> </Route>\n            <Route component={Err404} />\n          </Switch>\n          <AppFooter />\n        </ScrollToTop>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App; ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authMessage: null,\n    authError: null\n}\n\nexport const authReducer = (state=initState, action)=>{\n    // console.log(action?.type);\n    switch(action.type){\n        case 'LOGIN_SUCCESS': return {authMessage: action.type, authError: null};\n        case 'LOGIN_ERROR': return {authMessage: action.type, authError: action.err};\n        case 'LOGOUT_SUCCESS': return {authMessage: action.type, authError: null};\n        case 'LOGOUT_ERROR': return {authMessage: action.type, authError: action.err};\n        case 'SIGNUP_SUCCESS': return {authMessage: action.type, authError: null};\n        case 'SIGNUP_ERROR': return {authMessage: action.type, authError: action.err};\n        case 'AUTH_MESSAGE_RESET': return initState;\n        default: return state;\n    }\n}","const initState={\n    searchTerm: null,\n    searchResults: null,\n    searchError: null,\n    searchMessage: null\n}\n\nexport const searchReducer = (state = initState, action)=>{\n    // console.log(action?.type);\n    switch(action.type){\n        case 'SEARCH_IN_PROGRESS': \n            return {searchTerm: action.searchTerm, searchResults: null, searchError:null, searchMessage: action.type };\n        case 'SEARCH_RESULTS_FETCHED': \n            return {searchTerm: action.searchTerm, searchResults: action.searchResults, searchError:null, searchMessage: action.type };\n        case 'SEARCH_RESULTS_NOT_FOUND': \n            return {searchTerm: action.searchTerm, searchResults: null, searchError:action.err, searchMessage: action.type };\n        case 'SEARCH_RESET' :\n            return {...initState, searchMessage:action.type};\n        default: return state;\n    }\n}","const initState ={\n    cartCount:0,\n    cartMessage: null\n}\n\nexport const cartUpdateReducer = (state = initState, action)=>{\n    // console.log(action.type);\n    switch(action.type){\n        case 'CART_UPDATING': return {...state, cartMessage:action.type};\n        case 'CART_UPDATED': return {...state, cartMessage:action.type};\n        case 'CART_ADDED': return {...state, cartMessage:action.type};\n        case 'CART_MESSAGE_RESET': return {...state,cartMessage:null};\n        default: return state;\n    }\n}\n\n","import { combineReducers } from \"redux\"\nimport { firebaseReducer } from \"react-redux-firebase\"\nimport { firestoreReducer } from \"redux-firestore\"\nimport { authReducer } from \"./authReducer\"\nimport { searchReducer } from \"./searchReducer\"\nimport { cartUpdateReducer } from \"./cartUpdateReducer\"\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    search: searchReducer,\n    cartUpdate: cartUpdateReducer,\n    firebase: firebaseReducer,\n    firestore: firestoreReducer\n})\n\nexport default rootReducer","//importing defaults\n//----------------------------------------------------------\nimport React, { Children } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//importing 'redux': Redux Store\n//createStore: create our redux store\n//applyMiddleware: extend Redux with custom functionality\nimport { createStore, applyMiddleware, compose } from 'redux';\n \n//importing 'react-redux': binding layer between the store and the dom\n//Provider: makes our store available to be used in our components\nimport { Provider, useSelector } from \"react-redux\";\n// import { Provider } from \"react-redux\";\n//----------------------------------------------------------\n\n\n//Reducers: handles the store opertations and data mutations\n//import rootReducer \nimport  rootReducer from './store/reducers/rootReducer';\n\n//import thunk\n//thunk: is a middleware that allows us to return a function instead of an action-creator\n//these asynchronous funcitons send a call do the processing and then dispatch a synchronous action \nimport thunk from 'redux-thunk';\n\n\n//firebase\n//----------------------------------------------------------\n//importing Firebase \n\n\n//importing react-redux-firebase\n//ReactReduxFirebaseProvider: lets rrfProps(store content from firebase) be available to our redux store\n//getFirebase: used to manipulate data in firebase\n//isLoaded: hepler funciton, detects if data from redux state has been loaded or not\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded, firebaseConnect  } from \"react-redux-firebase\";\n\n//importing redux-firestore\n//createFirestoreInstance: in v3.0.0 version this is introduced that is passed in rrfProps\n//getFirestore: used to manipulate data in firestore\n//reduxFirestore: v2.0.0 way to firebase-store-enhancer\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\n\nimport firebase from \"./config/FirebaseConfig\";\nimport LoadingFullScreen from './components/LoadingFullScreen';\n//----------------------------------------------------------\n\n//store\n//----------------------------------------------------------\n//create store\n//createStore( reducer, store-enhancer ) \n//[OR]  createStore( reducer, compose(...multiple-store-enhancers) ) \n//compose: use to apply multiple store enhancer. (programmatic utility)\n//thunk.withExtraArgument(object of store-enhacer): adds these encapsulated  store-enhancers as an extra-argument to the reducer\n//reduxFirestore(firebase): adds store-enhancer of Firestore \n\nconst store = createStore(\n  rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(firebase)\n  )\n);\n\n//react-redux-firebase-configuration of store\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true\n}\n//react-redux-firebase-props the actual contents of the store from firebase\nconst rrfProps = {\n  firebase,\n  config:   rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n//----------------------------------------------------------\n\n//wait to load\n//----------------------------------------------------------\nconst AuthIsLoaded = ( {children} )=>{\n  const auth = useSelector( state=>state.firebase.auth );\n  if(!isLoaded(auth)) return (<LoadingFullScreen /> );\n  return children;\n}\n//----------------------------------------------------------\n\n//we are rendering our web app accordingly to the dom\n//----------------------------------------------------------\nReactDOM.render(\n  \n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>\n\n  ,document.getElementById('root')\n);\n//----------------------------------------------------------\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();","module.exports = __webpack_public_path__ + \"static/media/digi-logo-small.9515b42b.png\";","module.exports = __webpack_public_path__ + \"static/media/page_not_found.bdc71293.png\";","module.exports = __webpack_public_path__ + \"static/media/digi-logo.9f0db891.jpg\";"],"sourceRoot":""}