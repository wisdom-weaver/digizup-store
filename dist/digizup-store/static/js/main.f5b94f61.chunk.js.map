{"version":3,"sources":["config/FirebaseConfig.js","utils/utils.js","components/CatProductCard.js","components/Loading.js","utils/Delayed.js","views/Category.js","views/Home.js","views/About.js","components/CartCard.js","components/InfoCard.js","views/Cart.js","store/actions/cartUpdateActions.js","views/Checkout.js","store/actions/checkoutActions.js","store/actions/searchActions.js","components/Navbar.js","store/actions/authActions.js","components/ProductCard.js","views/Store.js","views/Login.js","views/Signup.js","views/Product.js","utils/ScrollToTop.js","components/OrderCard.js","views/Orders.js","views/Order.js","store/actions/orderActions.js","store/actions/accountActions.js","views/Account.js","views/AccountAddresses.js","views/AccountPayments.js","views/Err404.js","components/LoadingFullScreen.js","components/AppFooter.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/searchReducer.js","store/reducers/cartUpdateReducer.js","store/reducers/rootReducer.js","index.js","assets/img/digi-logo-small.png","assets/img/page_not_found.png","assets/img/digi-logo.jpg"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","priceFormat","price","value","formatted","Intl","NumberFormat","style","currency","format","symbol","integer","split","slice","decimal","className","compose","withRouter","props","product","productName","defaultImage","productid","productOption","closeIcon","header","image","reveal","waves","revealIcon","to","Loading","src","logo","alt","srcset","Delayed","state","hidden","setTimeout","setState","this","waitBeforeShow","children","React","Component","connect","firestoreConnect","collection","category","match","params","categoriesCollection","useSelector","ordered","categories","useState","cat","setCat","categoryProducts","setCategoryProducts","useEffect","find","each","title","urlid","getProductsCollection","a","keywords","where","get","snaps","empty","console","log","localProducts","forEach","doc","data","pro","hasOptions","options","Object","keys","productOptions","sort","filter","isActive","randOption","Math","floor","random","length","productFullName","images","id","push","CategoryBannerJSX","banner","items","nav","dots","dotsEach","rewind","autoplay","loop","events","map","index","key","uuid","CategoryProductsJSX","CategoryPageJSX","Home","About","cartUpdate","cartItem","productPrice","cartQty","option","cartid","locCartQty","setLocCartQty","cartFunc","updateCart","removeFromCart","cartMessage","cartCount","history","useHistory","redirectToProductPage","target","onClick","horizontal","onKeyDown","e","keyCode","onBlur","onChange","type","InfoCard","authuid","auth","uid","dispatch","updateCartAction","getState","getFirebase","getFirestore","parseInt","update","then","delete","removeFromCartAction","cartMessageReset","deleteNotification","docid","total","setTotal","useFirestoreConnect","subcollections","storeAs","cartCollection","cart","setCart","setLog","isLoaded","newTotal","reduce","tot","cartNotifications","_","orderBy","qty","newcart","cartTotalSectionJSX","cartItemsJSX","cartNotificationsJSX","notificationMessage","CartPageMarkUpJSX","addAddress","newAddress","add","createdAt","Date","catch","err","message","addAddressAction","addCard","newCard","addCardAction","placeOrder","newOrder","status","isOpen","tracking","updateTime","snap","docs","placeOrderAction","stage","setStage","window","scrollTo","localTotal","acc","addresses","addressIndex","setAddressIndex","cards","cardIndex","setCardIndex","initAddress","fullName","addressLine","city","country","pincode","phoneNo","setNewAddress","paymentModeIndex","setPaymentModeIndex","initCard","cardHolderName","cardNo","cardExpMM","cardExpYY","setNewCard","deliverySectionJSX","eachLoc","name","checked","actions","flat","modal","node","bottomSheet","fixedFooter","open","dismissible","endingTop","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","opacity","outDuration","preventScrolling","startingTop","trigger","required","htmlFor","paymentModes","paymentType","paymentModeHead","paymentModeIcon","paymentModeInner","card","submitNewCard","checkout","mode","expanded","icon","item","order","address","consumeruid","payNow","searchAction","searchTerm","toLowerCase","snapWithoutOptions","snapWithOptions","out","includes","matches","tags","tag","rating","optionTags","searchResults","profile","logout","signOut","search","searchReset","setCategories","setCartCount","sortedCategories","allCategory","concat","localCartCount","menuOpenState","setMenuOpenState","setCategory","setSearchTerm","query","queryString","parse","location","innerWidth","setWidth","innerHeight","setHeight","updateWidthAndHeight","$","css","click","addEventListener","removeEventListener","submitSearch","dropdown_inner_html","eachcategory","dropdown_html","alignment","autoTrigger","closeOnClick","constrainWidth","container","coverTrigger","hover","searchbar_inner_html","sideNavCategoryLinks_html","exact","firstName","fontSize","marginTop","accordion","lastName","ProductCard","Array","round","fill","products","searchError","searchMessage","authError","authMessage","login","credentials","signInWithEmailAndPassword","email","password","loginAction","authMessageReset","setEmail","setPassword","emailBlur","setEmailBlur","passwordBlur","setPasswordBlur","allValid","authLog","setAuthLog","emailValidation","passwordValidation","renderLog","test","setValid","setInvalid","field","errorMessage","removeClass","addClass","html","onSubmit","preventDefault","signup","newUser","createUserWithEmailAndPassword","resp","user","set","initials","signupAction","setFirstName","setLastName","confirmPassword","setConfirmPassword","firstNameBlur","setFirstNameBlur","lastNameBlur","setLastNameBlur","confirmPasswordBlur","setConfirmPasswordBlur","firstNameValidation","lastNameValidation","confirmPasswordValidation","addToCart","newProduct","addToCartAction","setProductOption","productFromCollection","setProduct","getRenderedProduct","getOptionIndicesArray","optionString","splice","getOptionString","optionIndicesArray","join","renderedProduct","setRenderedProduct","inStock","features","eaOp","eaOpIndex","optionCategoriesObject","optionCategories","optionFeatures","ac","eaAr","specs","optionSpecs","setHistoryToProductOption","listen","localProductOption","cartQuantity","setCartQuantity","handleCartUpdate","val","categoryOptionsSelectionBtns","eachCat","eachCatIndex","eachCatObj","eachCatObjIndex","opAr","isSelected","op","isAvailable","bestMatch","allOpAr","ea","optionName","ImageSectionJSX","eachImage","InStockJSX","alert","addingToCart","FeaturesJSX","feature","SpecsJSX","spec","specKey","specValue","DescriptionJSX","description","unlisten","redirectToOrderSummaryPage","close","moment","toDate","ordersCollection","orders","setOrders","local","ordersJSX","requestCancellationAction","orderID","cancellationMessage","orderId","unshift","orderid","setCancellationMessage","cancelButton","placeholder","orderCreds","orderPayment","orderAddress","orderTracking","orderCart","productRedirect","OrderPageJSX","removeAddressAction","addressid","removeCardAction","cardid","removeCard","removeAddress","AccountPageJSX","addAddressBtn","AccountAddressesPageJSX","floating","large","addCardBtn","DebitCreditCardsJSX","AccountPaymentsPageJSX","Err404","notFoundImg","link","text","href","App","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initState","rootReducer","combineReducers","action","firebaseReducer","firestoreReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","LoadingFullScreen","ReactDOM","render","document","getElementById","URL","process","origin","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.f5b94f61.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport 'firebase/auth';      //firebase authentication\nimport 'firebase/firestore'; //firebase firestore\nimport 'firebase/analytics'; //firebase analytics\n\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyBHW5GkbAYKKiS-0O7V9yE6I_rhqdm5dmI\",\n    authDomain: \"digizup-store-test1.firebaseapp.com\",\n    databaseURL: \"https://digizup-store-test1.firebaseio.com\",\n    projectId: \"digizup-store-test1\",\n    storageBucket: \"digizup-store-test1.appspot.com\",\n    messagingSenderId: \"629806898681\",\n    appId: \"1:629806898681:web:405b49966fdd13c86b7128\",\n    measurementId: \"G-DCTWT63X8B\"\n  };\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport const db = firebase.firestore();\n\nexport default firebase;","import React from 'react'\n\nexport const numberFormat = (value) =>\nnew Intl.NumberFormat('en-IN', {\n  style: 'currency',\n  currency: 'INR'\n}).format(value);\n\nexport const priceFormat = (price)=>{\n    var formatted = numberFormat(price);\n    var symbol = formatted[0];\n    var integer = formatted.split('.')[0].slice(1);\n    var decimal = formatted.split('.')[1];\n    return (\n      <span className=\"product-price\">\n        {symbol+\" \"+integer+\".\"}<sub>{decimal}</sub>\n      </span>\n    )\n}","import React from 'react'\nimport 'materialize-css';\nimport { Card, CardTitle, Icon, Modal, Button } from 'react-materialize';\nimport { compose } from 'redux';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport { priceFormat } from '../utils/utils';\n\nfunction CatProductCard(props) {\n    // console.log(props);\n    const { productName, defaultImage, price, productid, productOption } = props.product;\n    // console.log(defaultImage);\n    return (\n        <div className=\"CatProductCard\">\n            <Card\n              className=\"round-card\"\n              closeIcon={<Icon>close</Icon>}\n              header={<CardTitle image={defaultImage} className=\"card-title-img\" reveal waves=\"light\" />}\n              revealIcon={<Icon>more_vert</Icon>}\n            >\n              <div className=\"card-content-area\">\n                <NavLink to={ '/product/'+productid+(productOption?('?productOption='+productOption):('')) } >\n                    <p className=\"text-link\">{productName}</p>\n                </NavLink>\n                <p className=\"right-align heavy_text\">{ priceFormat(price) }</p>\n              </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default  compose(\n    withRouter\n)(CatProductCard)\n","import React from 'react'\nimport logo from '../assets/img/digi-logo.jpg'\n\nfunction Loading() {\n    return (\n        <div className=\"Loading Page\">\n        <div className=\"row\">\n        <div className=\"col s12 m8 l6 offset-m2 offset-l3\">\n        <div className=\"card round-card\">\n        <div className=\"card-content\">\n        <div className=\"center\">\n            <div className=\"logo-container\">\n            <img src={logo} alt=\"\" srcset=\"\"/>\n            </div>\n            <h4 className=\"center\">Loading....</h4>\n        </div>\n        </div>\n        </div>\n        </div>\n        </div>\n        </div>\n    )\n}\n\nexport default Loading\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loading from '../components/Loading';\n\nclass Delayed extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {hidden : true};\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({hidden: false});\n        }, this.props.waitBeforeShow);\n    }\n\n    render() {\n        return this.state.hidden ? ( <Loading /> ) : this.props.children;\n    }\n}\n\nDelayed.propTypes = {\n  waitBeforeShow: PropTypes.number.isRequired\n};\n\nexport default Delayed;","import React, { useEffect, useState, Fragment } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { withRouter, NavLink } from 'react-router-dom'\nimport { compose } from 'redux'\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { db } from '../config/FirebaseConfig';\nimport 'materialize-css';\nimport { Carousel, Icon, Modal, Button } from 'react-materialize';\nimport CatProductCard from '../components/CatProductCard';\nimport { v1 as uuid } from 'uuid';\nimport OwlCarousel from 'react-owl-carousel2';\nimport 'react-owl-carousel2/lib/styles.css'; //Allows for server-side rendering.\nimport 'react-owl-carousel2/src/owl.carousel.css'; //Allows for server-side rendering.\nimport 'react-owl-carousel2/src/owl.theme.green.css'; //Allows for server-side rendering.\nimport Delayed from '../utils/Delayed';\n\nfunction Category(props) {\n    const category = props.match.params.category ?? 'all';\n    const categoriesCollection = useSelector(state=>state.firestore.ordered.categories);\n    const [cat , setCat] = useState(null);\n    const productsCollection = [];\n    var [categoryProducts,setCategoryProducts] = useState(null??[]);\n    useEffect(()=>{\n        // console.log('category=>', category);\n        if(!categoriesCollection) return;\n        setCat( categoriesCollection.find(each=>(category==each.title || category==each.urlid)) );\n        setCategoryProducts([]);\n    },[category]);\n    useEffect(()=>{\n        if(!categoriesCollection) return;\n        setCat( categoriesCollection.find(each=>(category==each.title || category==each.urlid)) );\n    },[categoriesCollection])\n    useEffect(()=>{\n        if(!category || !cat || !categoriesCollection) return;\n        getProductsCollection();\n    },[cat])\n\n    const getProductsCollection = async ()=>{\n        var keywords = [category,cat?.title];\n        // console.log({keywords});\n        const snaps = await db.collection('products').where('categories','array-contains-any',keywords).get();\n        if(snaps.empty){console.log('empty');return; }\n        var localProducts = [];\n        snaps.forEach(doc=>{\n            var data = doc.data();\n            var pro = {};\n            if(data.hasOptions == true){\n                var options = Object.keys(data.productOptions).sort().filter(each=>data.productOptions[each].isActive);\n                var randOption = options[ Math.floor(Math.random()*options.length) ];\n                pro={\n                    productName: data.productOptions[randOption].productFullName,\n                    defaultImage: data.productOptions[randOption].images[0],\n                    price: data.productOptions[randOption].price,\n                    productid: doc.id,\n                    productOption: randOption,\n                    hasOptions: true\n                }\n            }else{\n                pro={\n                    productName: data.productName,\n                    defaultImage: data.images[0],\n                    price: data.price,\n                    productid: doc.id,\n                    productOption: false,\n                    hasOptions: false\n                }\n            }\n            localProducts.push(pro);\n        })\n        // console.log('localProducts',localProducts);\n        setCategoryProducts(localProducts);\n    }\n    \n    const CategoryBannerJSX = (cat&& cat?.banner && cat.banner.length>0)?(\n        <div className=\"banner-carousel\">\n            <OwlCarousel  options={{\n                items: 1,\n                nav: false,\n                dots: false,\n                dotsEach:false,\n                rewind: true,\n                autoplay: true,\n                loop: true,\n                }} \n                events={{}} \n            >\n                { cat.banner.map((each,index)=> (<div key={uuid()}><img src={each.image}/></div>) ) }\n            </OwlCarousel>\n        </div>\n    ):(null)\n\n    const CategoryProductsJSX = (cat && categoryProducts)?(\n        <div className=\"container\">\n        <div className={(cat.banner && cat.banner.length>0)?('categoriesProductsSection flyover-banner'):('categoriesProductsSection')}>\n            <div className=\"row\">\n                {categoryProducts.map(each=>( \n                    <div key={uuid()} className=\"col s6 m4 l3\">\n                        <CatProductCard product={each} />\n                    </div>\n                 ))}\n\n            </div>\n        </div>\n        </div>\n\n    ):(null)\n    const CategoryPageJSX = (cat)?(\n        <Fragment>\n            {CategoryBannerJSX}\n            {CategoryProductsJSX}\n        </Fragment>\n    ):(\n        <div className=\"row\">\n            <div className=\"col s12 m6 offset-m2\">\n                <div className=\"card round-card\">\n                    <div className=\"card-content\">\n                        <h6 className=\"center\">Sorry this category doesnot exist</h6>\n                        <div className=\"center\">\n                            <NavLink to=\"/store\"> <div className=\"btn dark_btn\">Visit Store</div> </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n    return (\n        <div className=\"Category Page\" >\n            \n            <Delayed waitBeforeShow={2000} >\n                {CategoryPageJSX}\n            </Delayed>\n            \n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    return {}\n}\n\nexport default  \ncompose(\n    connect(mapStateToProps, null),\n    firestoreConnect([\n        {collection: 'categories'}\n    ]),\n    withRouter\n)(Category)\n","import React, { useEffect, useState } from 'react'\nimport Category from './Category';\n\nfunction Home(props) {\n    return (\n        <Category />\n    )\n}\nexport default Home","import React from 'react'\n\nfunction About() {\n    return (\n        <div>\n            about\n        </div>\n    )\n}\n\nexport default About\n","import React,{useState, useEffect} from 'react'\nimport 'materialize-css';\nimport { Card, CardTitle, Icon } from 'react-materialize';\nimport { priceFormat } from '../utils/utils';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nfunction CartCard(props) {\n    const { productName, productPrice, defaultImage, cartQty, productid, option, id } = props?.cartItem\n    const cartid = id;\n    const [locCartQty,setLocCartQty] = useState(cartQty);\n    const { updateCart, removeFromCart } = props?.cartFunc\n    const {cartMessage,cartCount} = props?.cartUpdate;\n    useEffect(()=>{\n      if(locCartQty <=0 ) setLocCartQty(1);\n      if(cartMessage == 'CART_UPDATING') return;\n      if(locCartQty != cartQty){\n        setTimeout(()=>{\n          updateCart(cartid, locCartQty);\n        },3000)\n      }\n    },[locCartQty]);\n\n\n    const history = useHistory();\n    const redirectToProductPage = ()=>{\n      var target = `/product/${productid}`+((option)?`?productOption=${option}`:``)\n      history.push(target);\n    }\n    return (\n        <div className=\"CartCard\">\n            <Card\n              closeIcon={<Icon>close</Icon>}\n              header={<CardTitle onClick={redirectToProductPage} image={defaultImage} />}\n              horizontal\n              revealIcon={<Icon>more_vert</Icon>}\n            >\n              <div className=\"card-info\">\n                <p onClick={redirectToProductPage} >{productName}</p>\n                <p className=\"flow-text regular_text primary-green-dark-text right-align\">{priceFormat(productPrice)}</p>\n              </div>\n              <div className=\"cart-management\">\n                    \n                <div className=\"quantity-selection-container\">\n                  <div onClick={()=>{ updateCart(cartid,cartQty-1) }} className=\"btn-floating quantity-adjustment-btn\"> <i className=\"material-icons\">remove_circle</i> </div>\n                  <input \n                  value={locCartQty} \n                  onKeyDown={(e)=>{if(e.keyCode==13 && e.target.value>0 )updateCart(cartid, e.target.value)}} \n                  onBlur={(e)=>{if(e.target.value>0)updateCart(cartid, e.target.value)}}\n                  onChange={(e)=>{if(e.target.value<=0){setLocCartQty(1)}else{ setLocCartQty(e.target.value) }}}  className=\"cart-quantity-input\" type=\"number\"/>\n                  <div onClick={()=>{ updateCart(cartid, cartQty+1) }} className=\"btn-floating quantity-adjustment-btn\"> <i className=\"material-icons\">add_circle</i> </div>\n                </div>\n                    \n                <div  \n                onClick={()=>{ removeFromCart(cartid) }}\n                className=\"btn remove_btn\">Remove</div>\n              </div>\n            </Card> \n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n  return {\n    cartUpdate: state.cartUpdate\n  }\n}\n\nexport default connect(mapStateToProps,null)(CartCard);","import React from 'react'\n\nfunction InfoCard({children}) {\n    return (\n        <div className=\"Info Card\">\n        <div className=\"row\">\n        <div className=\"col s12 m8 l6 offset-m2 offset-l3\">\n        <div className=\"card round-card\">\n        <div className=\"card-content\">\n            {children}\n        </div>\n        </div>\n        </div>\n        </div>\n        </div>\n    )\n}\n\nexport default InfoCard\n","import React, { useState, useEffect, Fragment } from 'react'\nimport { priceFormat } from '../utils/utils'\n\nimport CartCard from '../components/CartCard';\nimport { connect, useSelector } from 'react-redux';\nimport { auth } from 'firebase';\nimport { useFirebaseConnect, useFirestoreConnect, isLoaded } from 'react-redux-firebase';\n\nimport { v1 as uuid } from 'uuid';\nimport { updateCartAction, deleteNotification, addCartAction, removeFromCartAction, cartMessageReset } from '../store/actions/cartUpdateActions';\nimport { testAction } from '../store/actions/testAction';\nimport { db } from '../config/FirebaseConfig';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport Delayed from '../utils/Delayed';\nimport _ from 'lodash';\nimport InfoCard from '../components/InfoCard.js'\n\nfunction Cart(props) {\n    const history = useHistory();\n    const authuid = useSelector(state=> state.firebase.auth.uid ) ?? 'default';\n    useEffect(()=>{\n        if(!authuid || authuid == 'default'){\n            setTimeout(()=>{\n                history.push('/login');\n            },3000)\n        }\n    },[authuid])\n\n    const [total, setTotal] = useState(0)\n    \n    useFirestoreConnect([ {\n        collection: 'users', \n        doc: authuid,\n        subcollections: [{ collection: 'cart' }], \n        storeAs: 'cart' \n    },{\n        collection: 'users',\n        doc: authuid,\n        subcollections: [{collection:'cartNotifications'}],\n        storeAs: 'cartNotifications'\n    }])\n    const cartCollection = useSelector(state=> state.firestore.ordered.cart)\n    const [cart,setCart] = useState([]);\n    const [log, setLog ] = useState('');\n    useEffect(()=>{\n        if(!isLoaded(cartCollection)) return setLog('LOADING');\n        if(!cartCollection || cartCollection.length == 0){ setCart([]); return setLog('EMPTY');}\n        setLog('FETCHED');\n        setCart(cartCollection)\n        var newTotal = cartCollection.reduce((tot,each)=>(tot+each.productPrice*each.cartQty),0)\n        // console.log(total);\n        setTotal(newTotal);\n    },[cartCollection])\n    \n    const cartNotifications = useSelector(state=> _.orderBy(state.firestore.ordered.cartNotifications ?? [], ['createdAt'],['desc'])) ?? [];\n    useEffect(()=>{ \n        // console.log(cartNotifications);\n    },[cartNotifications]);\n\n    const {updateCartAction, removeFromCart, cartMessageReset, deleteNotification} = props;\n    const updateCart = (cartid, qty)=>{\n        var newcart = cart.map((each)=>((each.id ==cartid)?({...each, cartQty:qty}):(each)));\n        var newTotal = newcart.reduce((tot,each)=>(tot+each.productPrice*each.cartQty),0)\n        setTotal(newTotal);\n        setCart(newcart);\n        updateCartAction(cartid, qty);\n    }\n\n    const cartFunc={\n        updateCart,\n        removeFromCart\n    }\n\n    const cartMessage =props?.cartUpdate?.cartMessage;\n    \n    useEffect(()=>{\n        if(cartMessage == 'CART_UPDATED' || cartMessage == 'CART_ADDED'){\n            cartMessageReset();\n        }\n    },[cartMessage])\n\n\n    const cartTotalSectionJSX = (\n            <div className=\"col s12 l5 push-s0 push-l7\">\n                <div className=\"cart-total-container center\">\n                  <h6 className=\"primary-green-light\">Cart Total</h6>\n                  <h5 className=\"center-align primary-green-dark heavy_text\">{priceFormat(total)}</h5>\n                  <div onClick={()=>{history.push('/checkout')}} className=\"btn dark_btn\">Checkout</div>\n                </div>\n            </div>);\n    const cartItemsJSX = (\n            <div className=\"col s12 l7 pull-s0 pull-l5\">\n                <div className=\"cart-items-container\">\n                  {cart && cart.map(cartItem=>( <CartCard key={uuid()} cartFunc={cartFunc} cartItem={cartItem} /> ))}\n                </div>\n            </div>);\n    \n    const cartNotificationsJSX = (cartNotifications&& cartNotifications.length > 0)?(\n        <div className=\"cartNotifications\">\n        <div className=\"card round-card\">\n        <div className=\"card-content\">\n        <div className=\"row\">\n        {cartNotifications.map(each=>(\n            <Fragment key={uuid()}>\n            <div className=\"col s9\">\n                <p \n                style={{'lineHeight':'3'}}\n                className=\"head regular_text center\">{each.notificationMessage}</p>\n            </div>\n            <div className=\"col s3 center\">\n                <div\n                 onClick={()=>{deleteNotification(each.id)}}\n                 className=\"btn-floating btn-small red_btn\"><i className=\"material-icons\">clear</i></div>\n            </div>\n            </Fragment>\n        ))}\n        </div>\n        </div>\n        </div>\n        </div>\n    ):(null)\n    const CartPageMarkUpJSX = (\n        <div className=\"row\">\n            {(cart && cart.length>0)?(\n                <Fragment>\n                    {cartTotalSectionJSX}\n                    {cartItemsJSX}\n                </Fragment>\n            ):(\n                <Fragment>\n                    {(log == 'LOADING')?( <InfoCard><p className=\"center flow-text\">Loading...</p> </InfoCard> ):(null)}\n                    {(log == 'EMPTY')?( <InfoCard><p className=\"center flow-text\">Your Cart is Empty</p> </InfoCard> ):(null)}\n                </Fragment>\n            )}\n        </div>\n)\n    return (\n        <div className=\"Cart\">\n            <div className=\"container\">\n                <h5 className=\"primary-green-dark-text center\">Your Shopping <span className=\"heavy_text\">Cart</span></h5>\n                {cartNotificationsJSX}\n                {(authuid!='default')?(\n                    <Delayed waitBeforeShow={500}>\n                        <Fragment>{CartPageMarkUpJSX}</Fragment>\n                    </Delayed>\n                ):(\n                    <InfoCard>\n                        <p className=\"flow-text center\">\n                        Please <span className=\"heavy_text primary-green-dark-text\">SignIn</span> To Continue\n                        </p>\n                    </InfoCard>\n                )}\n            </div>\n        </div>\n    )\n}\nconst mapStateToProps = (state)=>{\n    // console.log(state);\n    return{\n        cartUpdate: state.cartUpdate,\n        authuid : state.firebase.auth.uid\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        updateCartAction: (cartid, cartQty)=>{\n            dispatch(updateCartAction(cartid, cartQty))\n        },\n        removeFromCart : (cartid)=>{ dispatch( removeFromCartAction(cartid) ) },\n        cartMessageReset: ()=>{ dispatch( cartMessageReset() ) },\n        deleteNotification: (docid)=>{ dispatch( deleteNotification(docid) )}\n    }\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(Cart)\n","import {db } from '../../config/FirebaseConfig';\n\nexport const updateCartAction = (cartid, cartQty)=>{\n\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\n        dispatch({type:'CART_UPDATING'});\n        cartQty = parseInt(cartQty);\n        const firestore = getFirestore();\n        console.log('state');\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('users').doc(authuid).collection('cart').doc(cartid).update({cartQty:cartQty})\n            .then(()=>{\n                setTimeout(()=>{\n                    return dispatch({type:'CART_UPDATED'});\n                },500);\n            });\n    }\n}\n\nexport const addToCartAction = (newProduct)=>{\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\n        dispatch({type:'CART_UPDATING'});\n        const {productid, option} = newProduct;\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        var doc = (option)?(productid+'-'+option):(productid+'-'+'default');\n        firestore.collection('/users').doc(authuid).collection('/cart').doc(doc).set(newProduct)\n        .then(()=>{\n            return dispatch({type:'CART_UPDATED'});\n        })\n    }\n}\n\nexport const removeFromCartAction = (cartid)=>{\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\n        dispatch({type:'CART_UPDATING'});\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('/users').doc(authuid).collection('/cart').doc(cartid).delete()\n        .then(()=>{\n            return dispatch({type:'CART_UPDATED'});\n        })\n    }\n}\n\nexport const deleteNotification =  (docid)=>{\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('/users').doc(authuid).collection('cartNotifications').doc(docid).delete();\n    }\n}\n\nexport const cartMessageReset = ()=>{\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\n        return dispatch({type:'CART_MESSAGE_RESET'});\n    }\n}\n\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport 'materialize-css';\nimport { Collapsible, CollapsibleItem, Icon, Modal, Button } from 'react-materialize';\nimport queryString from 'query-string';\nimport { compose } from 'redux';\nimport { connect, useSelector } from 'react-redux';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { v1 as uuid, parse } from \"uuid\";\nimport { isLoaded, useFirestoreConnect, useFirebaseConnect, useFirestore } from 'react-redux-firebase';\nimport { db } from '../config/FirebaseConfig';\nimport { addAddressAction, addCardAction, placeOrderAction } from '../store/actions/checkoutActions';\nimport Delayed from '../utils/Delayed';\nimport { priceFormat } from '../utils/utils';\n\nfunction Checkout(props) {\n    \n    const authuid = useSelector(state=> state.firebase.auth.uid ) ?? 'default';\n    const history = useHistory();\n\n    const [stage, setStage] = useState(0);\n    useEffect(()=>{\n        window.scrollTo(0,0);\n    },[stage])\n\n    useEffect(()=>{\n        if(!authuid || authuid == 'default'){\n            setTimeout(()=>{\n                // history.push('/login');\n            },3000)\n        }\n    },[authuid])\n    useFirestoreConnect([{\n        collection: 'users',\n        doc: authuid,\n        subcollections: [{collection:'cart'}],\n        storeAs: 'cart'\n    },{\n        collection: 'users',\n        doc: authuid,\n        subcollections: [{collection:'addresses'}],\n        storeAs: 'addresses'\n    },{\n        collection: 'users',\n        doc: authuid,\n        subcollections: [{collection:'cards'}],\n        storeAs: 'cards'\n    }]);\n\n    const addAddress = props?.addAddress;\n    const addCard = props?.addCard;\n    const placeOrder = props?.placeOrder;\n\n    const cart =  useSelector(state=> state.firestore.ordered.cart) ?? []\n    useEffect(()=>{\n        // console.log('cart',cart)\n        if(cart.length>0){\n            var localTotal = cart.reduce((acc,each)=>(acc+each.productPrice*each.cartQty),0);\n            setTotal(localTotal);\n        }\n    },[cart]);\n\n    const addresses = useSelector(state=> state.firestore.ordered.addresses) ?? [];\n    useEffect(()=>{ \n        // console.log('addresses',addresses);\n        if(!addresses || addresses.length==0) return;\n        if(addressIndex==-1){setAddressIndex(0); }\n    },[addresses]);\n\n    const cards = useSelector(state=> state.firestore.ordered.cards) ?? [];\n    useEffect(()=>{ \n        // console.log('cards',cards);\n        if(!cards || cards.length==0) return;\n        if(cardIndex == -1) setCardIndex(0);\n    },[cards]);\n\n    const [total,setTotal] = useState(0);\n\n    useEffect(()=>{},[cart, addresses, cards])\n\n    const initAddress = { fullName    :'', addressLine :'', city    :'', state   :'', country :'', pincode :'', phoneNo :'' }\n    const [newAddress, setNewAddress] = useState(initAddress);\n    const [addressIndex, setAddressIndex] = useState(-1);\n    var [paymentModeIndex, setPaymentModeIndex] = useState(4);\n    var [cardIndex, setCardIndex] = useState(-1);\n    var initCard = { cardHolderName: '', cardNo: '', cardExpMM: '', cardExpYY: '' };\n    const [newCard, setNewCard] = useState(initCard);\n    useEffect(()=>{\n        // console.log({addressIndex});\n    },[addressIndex]);\n    useEffect(()=>{\n        // console.log({cardIndex});\n    },[cardIndex]);\n    const submitNewAddress = ()=>{\n        addAddress(newAddress);\n        setNewAddress(initAddress);\n    }\n    const submitAddress = ()=>{\n        // console.log({addresses,addressIndex});\n        if(addressIndex < 0) return;\n        else{setStage(1);}\n    }\n\n    const submitNewCard = (newCard)=>{\n        addCard(newCard);\n        setNewCard(initCard);\n    } \n\n    const submitPaymentMode = ()=>{\n        // console.log('paymentModeIndex', paymentModeIndex, 'cardIndex', cardIndex);\n        if(paymentModeIndex == 0 && cardIndex > -1) setStage(2);\n        if(paymentModeIndex > 0) setStage(2);\n    }\n    const proceedToPayment= ()=>{\n        setStage(3);\n    }\n\n    const payNow = ()=>{\n        if(addressIndex< 0 )return;\n        if(paymentModeIndex< 0 )return;\n        if(paymentModeIndex == 0 && cardIndex < 0)return;\n        var order = { \n            cart: cart.map(each=>({\n                    cartQty: each.cartQty,\n                    productName: each.productName,\n                    productPrice: each.productPrice,\n                    productid: each.productid,\n                    option: each.option,\n                    defaultImage: each.defaultImage,\n                })),\n            total: total,\n            address:{\n                    fullName: addresses[addressIndex].fullName,\n                    addressLine: addresses[addressIndex].addressLine,\n                    city: addresses[addressIndex].city,\n                    state: addresses[addressIndex].state,\n                    country: addresses[addressIndex].country,\n                    pincode: addresses[addressIndex].pincode,\n                    phoneNo: addresses[addressIndex].phoneNo,\n                },\n            paymentType: paymentModes[paymentModeIndex].paymentType,\n            consumeruid: authuid,\n            cartCount: cart.reduce((tot,each)=>(tot+each.cartQty),0)??0,\n            defaultImage: cart[0].defaultImage\n        }\n        if(paymentModeIndex ==0 && cardIndex > -1){\n            order = {...order, card:{cardHolderName: cards[cardIndex].cardHolderName, cardNo: 'XXXX XXXX XXXX '+cards[cardIndex].cardNo.slice(12)}\n            }\n        }else{\n            order = {...order}\n        }\n        console.log(order);\n        placeOrder(order);\n        history.push('account/orders');\n    }\n\n    const deliverySectionJSX = (\n        <div className=\"deliverySection\">\n            <h4 className=\"center\">Select Your Delivery Location</h4>\n            <div className=\"row\">\n                { (!addresses && addresses.length ==0)?(\n                    <p className=\"center\">\n                        No saved Address found.\n                        <br />Please add atleast one.\n                    </p>\n                ):(null)}\n                { addresses && addresses.map((eachLoc,index)=>(\n                <div key={uuid()} className=\"col s6 m6 l4\">\n                    <div  onClick={()=>{setAddressIndex(index)}} className=\"card round-card\">\n                        <div className=\"card-content\">\n                            <p className=\"flow-text\"> \n                            <label>\n                              <input name=\"addressGroup\" type=\"radio\" checked={(index == addressIndex)} />\n                              <span className=\"primary-green-dark-text heavy_text\">{eachLoc.fullName}</span>\n                            </label>\n                             </p>\n                            <p>{eachLoc.addressLine}</p>\n                            <p>{eachLoc.city}, {eachLoc.state}-{eachLoc.pincode}</p>\n                            <p>{eachLoc.phoneNo}--{eachLoc.country}</p>\n                        </div>\n                    </div>   \n                </div>\n                )) }\n                <div className=\"col s12\"></div>\n                <div className=\"col s12 m6 center\">\n                    <Modal\n                      actions={[\n                        (<Button flat modal=\"close\" node=\"button\" waves=\"red\">Close</Button>),\n                        (<Button onClick={()=>{submitNewAddress(newAddress)}} flat modal=\"close\" node=\"button\" waves=\"green\">Add Address</Button>)\n                      ]}\n                      bottomSheet={false}\n                      fixedFooter={true}\n                      header=\"Add a new Address\"\n                      id=\"addAddressModal\"\n                      open={false}\n                      options={{\n                        dismissible: true,\n                        endingTop: '16%',\n                        inDuration: 250,\n                        onCloseEnd: null,\n                        onCloseStart: null,\n                        onOpenEnd: null,\n                        onOpenStart: null,\n                        opacity: 0.5,\n                        outDuration: 250,\n                        preventScrolling: true,\n                        startingTop: '55%'\n                      }}\n                    //   root={[object HTMLBodyElement]}\n                      trigger={<div className=\"btn light_btn\"> <i className=\"material-icons\">add</i> <span>Add Address</span> </div>}\n                    >\n                        <div className=\"row\">\n                            <div className=\"input-field col s12\">\n                                <i className=\"material-icons prefix\">account_circle</i>\n                                <input onChange={(e)=>{setNewAddress({...newAddress, fullName:e.target.value})}} value={newAddress.fullName} id=\"fullName-addAddress\" type=\"text\" required />\n                                <label  htmlFor=\"fullName-addAddress\">Full Name</label>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <i className=\"material-icons prefix\">location_city</i>\n                                <input onChange={(e)=>{setNewAddress({...newAddress, addressLine:e.target.value})}} value={newAddress.addressLine} id=\"addressLine-addAddress\" type=\"text\" required />\n                                <label htmlFor=\"addressLine-addAddress\">Address Line</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <i className=\"material-icons prefix\">location_on</i>\n                                <input onChange={(e)=>{setNewAddress({...newAddress, city:e.target.value})}} value={newAddress.city} id=\"city-addAddress\" type=\"text\" required />\n                                <label htmlFor=\"city-addAddress\">City</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input onChange={(e)=>{setNewAddress({...newAddress, state:e.target.value})}} value={newAddress.state} id=\"state-addAddress\" type=\"text\" required />\n                                <label htmlFor=\"state-addAddress\">State</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input onChange={(e)=>{setNewAddress({...newAddress, country:e.target.value})}} value={newAddress.country} id=\"country-addAddress\" type=\"text\" required />\n                                <label htmlFor=\"country-addAddress\">Country</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input onChange={(e)=>{setNewAddress({...newAddress, pincode:e.target.value})}} value={newAddress.pincode} id=\"pincode-addAddress\" type=\"text\" required />\n                                <label htmlFor=\"pincode-addAddress\">Pincode</label>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <i className=\"material-icons prefix\">local_phone</i>\n                                <input onChange={(e)=>{setNewAddress({...newAddress, phoneNo:e.target.value})}} value={newAddress.phoneNo} id=\"phoneNo-addAddress\" type=\"text\" required />\n                                <label htmlFor=\"phoneNo-addAddress\">Phone Number</label>\n                            </div>\n                        </div>\n                    </Modal>\n                </div>\n                <div className=\"col s12 m6 center\">\n                    {\n                    (!addresses || addresses.length ==0)?(\n                        <div className=\"btn dark_btn disabled\">Select Address</div>\n                    ):(\n                        <div onClick={()=>{submitAddress()}} className=\"btn dark_btn\">Select Address</div>\n                    )\n                    }\n                </div>\n            </div>\n        </div>\n    )\n    \n     var paymentModes = [\n         {  paymentType :'card', paymentModeHead:\"Credit / Debit Card\",             paymentModeIcon:'payment',      paymentModeInner:(\n             <div>\n                 <p>We accept  VISA, MasterCard and Western Union credit/debit cards only.* </p> \n                 <div className=\"row\">\n                    {(!cards || cards.length == 0 )?(\n                        <p className=\"center\">\n                            No Saved Card Found\n                            Please add atleast one.\n                        </p>\n                    ):(\n                        <Fragment>\n                            <p className=\"flow-text center\">Saved Cards: </p>\n                            {cards.map((card,index)=>(\n                             <div className=\"col s12 m6\" key={uuid()}>\n                                 <div className=\"card round-card\"\n                                 onClick={()=>{setCardIndex(index)}} \n                                 >\n                                     <div className=\"card-content\">\n                                         <label>\n                                             <input name=\"cardsGroup\" type=\"radio\" checked={( index == cardIndex )} />\n                                             <span></span>\n                                         </label>\n                                         {card?(\n                                            <div>\n                                                <p>Card Holder: {card.cardHolderName}</p>\n                                                <p>Card No: {'XXXX XXXX XXXX '+card.cardNo.slice(12)}</p>\n                                                <p>Card Expiry: { card.cardExpMM+'/'+card.cardExpYY }</p>\n                                            </div>\n                                         ):(null)}\n                                     </div>\n                                 </div>\n                             </div>\n                            ))}\n                        </ Fragment>  \n                    )}\n                    <div className=\"col s12\"></div>\n                    <div className=\"col s12 m6 center\">\n                     <Modal\n                       actions={[\n                         (<Button flat modal=\"close\" node=\"button\" waves=\"red\">Close</Button>),\n                         (<Button onClick={()=>{ submitNewCard(newCard) }} flat modal=\"close\" node=\"button\" waves=\"green\">Add Card</Button>)\n                       ]}\n                       bottomSheet={false}\n                       fixedFooter={true}\n                       header=\"Add a new Card\"\n                       id=\"addCardModal\"\n                       open={false}\n                       options={{\n                         dismissible: true,\n                         endingTop: '16%',\n                         inDuration: 250,\n                         onCloseEnd: null,\n                         onCloseStart: null,\n                         onOpenEnd: null,\n                         onOpenStart: null,\n                         opacity: 0.5,\n                         outDuration: 250,\n                         preventScrolling: true,\n                         startingTop: '55%'\n                       }}\n                     //   root={[object HTMLBodyElement]}\n                       trigger={<div className=\"btn light_btn\"> <i className=\"material-icons\">add</i> <span>Add Card</span> </div>}\n                     >\n                         <div className=\"row\">\n                             <div className=\"input-field col s12\">\n                                 <i className=\"material-icons prefix\">account_circle</i>\n                                 <input onChange={(e)=>{setNewCard({...newCard, cardHolderName:e.target.value})}} value={newCard.cardHolderName} id=\"cardHolderName-addCard\" type=\"text\" required />\n                                 <label  htmlFor=\"cardHolder-addCard\">Full Name</label>\n                             </div>\n                             <div className=\"input-field col s8\">\n                                 <i className=\"material-icons prefix\">payment</i>\n                                 <input onChange={(e)=>{setNewCard({...newCard, cardNo:e.target.value})}} value={newCard.cardNo} id=\"cardNo-addCard\" type=\"text\" required />\n                                 <label htmlFor=\"cardNo-addCard\">Card Line</label>\n                                 {/* <NumberFormat customInput={TextField} format=\"#### #### #### ####\"/> */}\n                             </div>\n                             <div className=\"input-field col s2\">\n                                 <input onChange={(e)=>{setNewCard({...newCard, cardExpMM:e.target.value})}} value={newCard.cardExpMM} id=\"cardExpMM-addCard\" type=\"text\" required />\n                                 <label htmlFor=\"cardExpMM-addCard\">MM</label>\n                             </div>\n                             <div className=\"input-field col s2\">\n                                 <input onChange={(e)=>{setNewCard({...newCard, cardExpYY:e.target.value})}} value={newCard.cardExpYY} id=\"cardExpYY-addCard\" type=\"text\" required />\n                                 <label htmlFor=\"cardExpYY-addCard\">YY</label>\n                             </div>\n                         </div>\n                     </Modal>\n                    </div>\n                 </div>\n             </div>\n         ) },\n \n         { paymentType:'crypto', paymentModeHead:\"Crypto Currencies\",               paymentModeIcon:'fingerprint',  paymentModeInner:( <p>coinbase e-commerce * </p> ) },\n \n         { paymentType:'paypal', paymentModeHead:\"PayPal\",                          paymentModeIcon:'filter_drama', paymentModeInner:( <p>paypal Integration* </p> ) },\n \n         { paymentType:'paytm', paymentModeHead:\"Paytm\",                           paymentModeIcon:'filter_drama', paymentModeInner:( <p>paytm Integration* </p> ) },\n \n         { paymentType:'cod', paymentModeHead:\"COD/POD (Cash/Pay On Delivery)\",  paymentModeIcon:'attach_money', paymentModeInner:( <p>we acccept cash aswell as digital payment options on your door step </p> ) }\n \n     ]\n \n    const paymentModesSectionJSX = (\n        <div className=\"checkout-payment-modes-section\">\n            {/* 2=> payment option */}\n            <h4 className=\"center\">Select Your Payment Option</h4>\n            <Collapsible>\n                {paymentModes.map((mode,index)=>(\n                <CollapsibleItem key={uuid()}\n                    expanded = {(index == paymentModeIndex)}\n                    onClick={()=>{setPaymentModeIndex(index)}}\n                    header={( \n                    <div className=\"payment-mode-option\">\n                        <label>\n                            <input name=\"paymentModesGroup\" type=\"radio\" checked={( index == paymentModeIndex )} />\n                            <span></span>\n                        </label>\n                        <p className=\" payment-mode-option-name primary-green-dark-text heavy_text\">{mode.paymentModeHead}</p>\n                        <span><i className=\"material-icons\">{(index == paymentModeIndex)?('keyboard_arrow_up'):('keyboard_arrow_down')}</i></span>\n                    </div> )}\n                    icon={<Icon>{mode.paymentModeIcon}</Icon>}\n                    node=\"div\"\n                >\n                    {mode.paymentModeInner}\n                </CollapsibleItem>\n                ))}\n            </Collapsible>\n            <div className=\"center\">\n                {(paymentModeIndex ==0 && cardIndex==-1)?(\n                    <div className=\"btn dark_btn disabled\">Order Summary</div>\n                ):(\n                    <div onClick={()=>{ submitPaymentMode()}} className=\"btn dark_btn\">Order Summary</div>\n                )}\n            </div>\n        </div>\n    )\n\n    const orderSummarySectionJSX = (\n        <div className=\"checkout-order-summary-section\">\n        {/* 3=> order summary   */}\n            <div className=\"summary-delivery-address\">\n                {(addresses && addressIndex>-1)?(<div className=\"center\">\n                    <h6 className=\"center\"> <Icon>location_on</Icon> Delivery Address:</h6>\n                    <div className=\"row\">\n                        <div className=\"card col s8 m8 l6 offset-m2 offset-l3 round-card\">\n                            <div className=\"card-content\">\n                            {(addresses[addressIndex])?(\n                            <Fragment>\n                                <p className=\"heavy_text\">{ addresses[addressIndex].fullName }</p>\n                                <p className=\"heavy_text\">{ addresses[addressIndex].addressLine +'-'+ addresses[addressIndex].city}</p>\n                                <p className=\"heavy_text\">{ addresses[addressIndex].state+'-'+addresses[addressIndex].pincode +', '+addresses[addressIndex].country}</p>\n                                <p className=\"heavy_text\">{ addresses[addressIndex].phoneNo}</p>\n                            </Fragment>\n                            ):(null)}\n                            </div>\n                        </div>\n                    </div>\n                </div>):(null)}\n            </div>\n            <div className=\"summary-payment-mode\">\n                <h6 className=\"center\">Payment Option: <Icon>{paymentModes[paymentModeIndex].paymentModeIcon}</Icon> {paymentModes[paymentModeIndex].paymentModeHead}</h6>\n                {(paymentModeIndex==0 && cards && cardIndex> -1)?(\n                    <div className=\"center\">\n                    <div className=\"row\">\n                        <div className=\"card col s8 m8 l6 offset-m2 offset-l3 round-card\">\n                            <div className=\"card-content left-align\">\n                                <p className=\"heavy_text\">Card Holder: {cards[cardIndex].cardHolderName}</p>\n                                <p className=\"heavy_text\">Card Number: {'XXXX XXXX XXXX '+cards[cardIndex].cardNo.slice(12)}</p>\n                                <p className=\"heavy_text\">Card Expiry: {cards[cardIndex].cardExpMM+'/'+cards[cardIndex].cardExpYY}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>):(null)}\n            </div>\n            <div className=\"summary-order-details\">\n                <div className=\"row\">\n                <div className=\"col s12 m8 l8 offset-m2 offset-l2\">\n                <div className=\"card round-card\">\n                <div className=\"card-content\">\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>Product</td><td>Price/Qty</td><td>Qty</td><td>SubTotal</td>\n                        </tr>\n                        { cart && cart.map(item=>( \n                        <tr key={uuid()} >\n                            <td>{item.productName}</td><td>{item.productPrice}</td><td>{item.cartQty}</td><td>{item.productPrice*item.cartQty}</td>\n                        </tr>))}\n                        <tr>\n                            <td></td><td></td><td className=\"heavy_text\">Total</td><td className=\"heavy_text no-wrap\">{ priceFormat(total)}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                </div>\n                </div>\n                </div>\n                </div>\n            </div>\n            <div className=\"summary-payment-proceeding\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6 center\">\n                        <div onClick={()=>{setStage(0)}} className=\"btn light_btn\">Edit Address/Payment Options</div>\n                    </div>\n                    <div className=\"col s12 m6 center\">\n                        <div onClick={()=>{proceedToPayment()}} className=\"btn dark_btn\">Proceed To Payment</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n    const integrationJSX = (\n        <div className=\"checkout-integration-section\">\n            Integration\n            <div onClick={ ()=>{payNow()} } className=\"btn dark_btn\">Pay Now</div>\n        </div>\n    )\n    const checkoutResultJSX = (\n        <div className=\"checkout-integration-section\">\n            <h5 className=\"center\">Success!!</h5>\n        </div>\n    )\n    \n    const checkout = [\n        deliverySectionJSX,\n        paymentModesSectionJSX,\n        orderSummarySectionJSX,\n        integrationJSX,\n        checkoutResultJSX\n    ]\n    return(\n        <div className=\"Checkout Page\">\n            <div className=\"container\">\n                {(authuid!='default')?(\n                    <Delayed waitBeforeShow={5000} >\n                        {checkout[stage]}\n                    </Delayed>\n                ):(\n                    <div className=\"center\">\n                        <div className=\"row\">\n                        <div className=\"col s8 m6 l6 offset-s2 offset-m3 offset-l3\">\n                        <div className=\"card round-card\">\n                        <div className=\"card-content\">\n                            <p className=\"flow-text\">\n                                Please <span className=\"heavy_text primary-green-dark-text\">SignIn</span>To Continue\n                            </p>\n                        </div>    \n                        </div>    \n                        </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n                \n        </div>\n    )\n\n}\n\nconst mapStateToProps = (state)=>{\n    // console.log('state-checkout',state);\n    return { }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return{ \n        addAddress : (newAddress)=>{ dispatch(addAddressAction(newAddress)) },\n        addCard : (newCard)=>{ dispatch( addCardAction(newCard) ) },\n        placeOrder : (newOrder)=>{ dispatch( placeOrderAction(newOrder) ) }\n    }\n}\n\nexport default \ncompose(\n    connect(mapStateToProps,mapDispatchToProps),\n    withRouter\n)(Checkout)\n","import React from 'react'\nimport { useSelector } from \"react-redux\"; \n\nexport const addAddressAction = (newAddress)=>{\n    console.log('addAddressAction')\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('users').doc(authuid).collection('addresses').add({...newAddress, createdAt: new Date()})\n        .then(()=>{\n            console.log('newAddress added');\n        })\n        .catch((err)=>{console.log('err=>',err.message)});\n\n    }\n}\n\nexport const addCardAction = (newCard)=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('users').doc(authuid).collection('cards').add({...newCard, createdAt: new Date()})\n        .then(()=>{ console.log('new card added') })\n        .catch((err)=>{ console.log('err=>', err.message) })\n    }\n}\n\nexport const placeOrderAction = (newOrder)=>{\n    console.log('newOrder',newOrder);\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('users').doc(authuid).collection('orders').add({\n            ...newOrder,\n            status:'Order Placed', \n            isOpen: true, \n            createdAt:new Date(), \n            tracking: [\n                { title:'Placed Order', updateTime: new Date() }\n            ]\n        })\n        .then(()=>{console.log('placed order')})\n        .then(async ()=>{ \n            var snap = await firestore.collection('users').doc(authuid).collection('cart').get();\n            console.log('snap', snap);\n            snap.docs.forEach((doc) => {\n                firestore.collection('users').doc(authuid).collection('cart').doc(doc.id).delete();\n            });\n        })\n        .catch(err=>{console.log('err=>', err)});\n    }\n}","import _ from \"lodash\";\n\nexport const searchAction = (searchTerm, category)=>{\n    // console.log('in searchAction', searchTerm, category);\n    return async (dispatch, getState, {getFirestore, getFirebase})=>{\n        dispatch({type:'SEARCH_IN_PROGRESS'});\n        const firestore = getFirestore();\n        searchTerm= searchTerm.toLowerCase();\n        var keywords = searchTerm.split(/(?:,| |\\+|-|\\(|\\))+/);\n        \n        //  console.log('key',keywords);\n        const snapWithoutOptions = await firestore.collection('/products').where('hasOptions','==',false).where('tags','array-contains-any',keywords).get();\n        const snapWithOptions = await firestore.collection('/products').where('hasOptions','==',true).where('tags','array-contains-any',keywords).get();\n        if( snapWithOptions.empty && snapWithoutOptions.empty ){ \n            // console.log('nothing found'); return dispatch({ type:\"SEARCH_RESULTS_NOT_FOUND\", err: \"No Results Found\" }); \n        }\n        var out=[];\n        snapWithoutOptions.forEach(doc=>{\n            try{\n                // console.log(doc.id)\n                var data = doc.data();\n                if(!data.categories.includes(category)) return;\n                var matches = data.tags.reduce((acc,tag)=> (keywords.includes(tag))?(acc+1):(acc) ,0);\n                // if(matches>0) \n                out.push({\n                    id: doc.id, \n                    productName:data.productName, \n                    price:data.price, \n                    defaultImage:data.images[0], \n                    option: false, \n                    matches, \n                    rating: data.rating ?? 4.5\n                });\n            }catch(err){ return; }\n        })\n        snapWithOptions.forEach(doc=>{\n            // console.log(doc.id)\n            var data = doc.data();\n            if(!data.categories.includes(category)) return;\n            var optionsKeys = Object.keys(data.productOptions).sort();\n            optionsKeys.forEach((key,index)=>{\n                try{\n                    // console.log('key',key);\n                    if(!data.productOptions[key].isActive) return;\n                    var matches = data.productOptions[key].optionTags.reduce((acc,tag)=> (keywords.includes(tag))?(acc+1):(acc) ,0);\n                    // console.log(key, matches, data.productOptions[key].optionTags);\n                    out.push({ id: doc.id,\n                        productName:data.productOptions[key].productFullName,\n                        price:data.productOptions[key].price,\n                        defaultImage:data.productOptions[key].images[0],\n                        option: key,\n                        matches,\n                        rating: data.rating ?? 4.5\n                    });\n                }\n                catch(err){return;}\n            });\n        })\n        out = _.orderBy( out, ['matches','option'], ['desc','asc']);\n        // console.log(out);\n        // console.log('Results=>',out);\n        if(out.length > 0) dispatch({ type:\"SEARCH_RESULTS_FETCHED\", searchResults: out });\n        else dispatch({ type:\"SEARCH_RESULTS_NOT_FOUND\", err: \"No Results Found\" });\n    }\n}\n\nexport const searchResetAction = ()=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        return dispatch({ type:\"SEARCH_RESET\" });\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { NavLink, useHistory, withRouter } from 'react-router-dom'\nimport {v1 as uuid} from 'uuid';\nimport { connect, useSelector } from 'react-redux';\n\nimport logo from '../assets/img/digi-logo-small.png'\n\nimport Cart from \"@material-ui/icons/AddShoppingCart\";\nimport Close from '@material-ui/icons/CloseRounded';\nimport Menu from '@material-ui/icons/MenuRounded';\n\nimport $ from 'jquery'\nimport M from 'materialize-css';\nimport { Dropdown, Button, Divider, Collapsible, CollapsibleItem, Icon } from \"react-materialize\";\n\nimport { firebaseConnect, firestoreConnect, useFirestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { logoutAction } from '../store/actions/authActions';\nimport { searchAction, searchResetAction } from '../store/actions/searchActions';\nimport queryString from \"query-string\";\nimport _ from 'lodash';\n\nfunction Navbar(props) {\n    const { auth,profile, logout, search, searchReset} = props ;\n    const [categories, setCategories] = useState(null);\n    const history = useHistory()\n    const [cartCount,setCartCount] = useState(0);\n    useEffect(()=>{\n      if(!props?.categories) return;\n      // console.log(props.categories);\n      var sortedCategories = props.categories;\n      var allCategory = sortedCategories.filter(each=>(each.title =='All'));\n      sortedCategories = _.orderBy( sortedCategories, ['title'], ['asc']);\n      sortedCategories = sortedCategories.filter(each=>each.title!='All');\n      sortedCategories = allCategory.concat(sortedCategories);\n      // console.log(sortedCategories);\n      setCategories(sortedCategories);\n    },[props.categories])\n    \n    const authuid = useSelector(state=> state.firebase.auth.uid ) ?? 'default';\n    useFirestoreConnect([{\n        collection: 'users',\n        doc: authuid,\n        subcollections: [{collection:'cart'}],\n        storeAs: 'cart'\n    }]);\n    useFirestoreConnect([{\n      collection: 'users',\n      doc: authuid,\n      subcollections: [{collection:'orders'}],\n      storeAs: 'orders'\n    }]);\n    const cart =  useSelector(state=> state.firestore.ordered.cart) ?? []\n    useEffect(()=>{\n      var localCartCount = cart.reduce((tot,each)=>(parseInt(parseInt(tot)+parseInt(each.cartQty))),0);\n      setCartCount(localCartCount);\n    },[cart])\n\n    const [menuOpenState, setMenuOpenState] = useState(false);\n    const [category, setCategory] = useState('All');\n    const [searchTerm,setSearchTerm] = useState('');\n    var query = queryString.parse(props?.location?.search);\n    useEffect(()=>{\n      setSearchTerm(query?.searchTerm ?? '');\n    },[query?.searchTerm]);\n    useEffect(()=>{\n      setCategory(query?.category ?? 'All');\n    },[query?.category]);\n    \n    const [width, setWidth] = useState(window.innerWidth);\n    const [height, setHeight] = useState(window.innerHeight);\n\n\n    const menuOpen = ()=>{\n      //console.log('menu-open');\n      $('.side_menu').css('zIndex', '2900');\n      $('.side_menu_content').css('transform', 'translateX(0%)');\n      $('.overlay').css('opacity', '1');\n    }\n    const menuClose = ()=>{\n      //console.log('menu-close');\n      $('.side_menu_content').css('transform', 'translateX(-100%)');\n      $('.overlay').css('opacity', '0');\n      setTimeout(()=>{\n        $('.side_menu').css('zIndex', '-1');\n      },200)\n    }\n\n    const updateWidthAndHeight = () => {\n      setWidth(window.innerWidth);\n      setHeight(window.innerHeight);\n    };\n    \n    useEffect(()=>{\n      menuOpenState? menuOpen() : menuClose();\n    },[menuOpenState])\n    \n    useEffect(()=>{\n      $('link').click(()=>{ console.log('link Click'); setMenuOpenState(false)})\n      $('ovelayLink').click(()=>{ console.log('link Click');; setMenuOpenState(false)})\n      window.addEventListener(\"resize\", updateWidthAndHeight);\n      return () => {\n        window.removeEventListener(\"resize\", updateWidthAndHeight)\n      };\n    },[])\n\n    const submitSearch = ()=>{\n      // console.log(category, searchTerm);\n      searchReset();\n      history.push('/store?searchTerm='+searchTerm+\"&&category=\"+category);\n    }\n\n    const dropdown_inner_html =  categories?.map( eachcategory=> ( <a key={uuid()} onClick={()=>{setCategory(eachcategory?.title)}}>{eachcategory?.title}</a> ) );\n    const dropdown_html = (\n      <Dropdown\n          id=\"Dropdown_6\"\n          options={{\n            alignment: 'left',\n            autoTrigger: true,\n            closeOnClick: true,\n            constrainWidth: false,\n            container: null,\n            coverTrigger: false,\n            hover: false,\n            inDuration: 150,\n            onCloseEnd: null,\n            onCloseStart: null,\n            onOpenEnd: null,\n            onOpenStart: null,\n            outDuration: 250\n          }}\n          trigger={\n            <div className='btn categories_dropdown_trigger' >{category.slice(0,15)+((category.length>15)?\"..\":'')+\" \\u25BC\"}</div>\n          }\n        >\n          {dropdown_inner_html}\n        </Dropdown>\n    );\n    const searchbar_inner_html = (\n      <div className=\"navbar__searchInput_container\">\n        <div className=\"navbar__searchInput\" >\n        {dropdown_html}  \n        <input \n          id=\"searchInput\" \n          type=\"text\"\n          value={searchTerm}\n          onChange={ e=>setSearchTerm(e.target.value) }\n          onKeyDown={ e=>{ if(e.keyCode==13)submitSearch();} }\n        />\n        <i onClick={submitSearch} className=\"material-icons search-icon\">search</i>\n      </div>\n      </div>\n    )\n    const sideNavCategoryLinks_html =  categories?.map( eachcategory=> (<div key={uuid()} className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to={\"/store/\"+eachcategory?.urlid}>{eachcategory?.title}</NavLink></div>) );\n\n    return (\n        <div className=\"Navbar\">\n          <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"link cart-link\" to=\"/cart\"> \n            <span className=\"cart_items_count\">{cartCount}</span>\n          </NavLink>\n          <nav>\n              <div className=\"nav__left valign-wrapper\">\n              <span onClick={()=>{ setMenuOpenState(!menuOpenState) }}>\n                {\n                  (!menuOpenState)?\n                  (<Menu className=\"menu-icon\"/>):\n                  (<Close className=\"menu-icon\" />)\n                }\n              </span>\n                \n              {/* <NavLink onClick={()=>{setMenuOpenState(false)}} exact to=\"/\">\n              <span className=\"navbar__logo\">\n                Digizup    \n              </span>\n              </NavLink> */}\n              <NavLink onClick={()=>{setMenuOpenState(false)}} exact to=\"/\">\n              <span className=\"mini-logo-container\">\n                <img \n                className=\"mini-logo\"\n                src={logo}/>\n              </span>\n              </NavLink>\n              <NavLink onClick={()=>{setMenuOpenState(false)}} exact to=\"/\">\n              <span className=\"navbar__logo\">\n                Store\n              </span>\n              </NavLink>\n              </div>\n              \n                {searchbar_inner_html}\n\n              {\n                (auth?.uid)?(\n                  <ul className=\"hide-on-med-and-down row-flex-center\">\n                    <li><NavLink onClick={()=>{setMenuOpenState(false)}} className=\"link\" to=\"/store\">Store</NavLink></li>\n                    <li><NavLink onClick={()=>{setMenuOpenState(false)}} className=\"nav_user_block_link\" to=\"/account\">\n                    <div className=\"nav_user_block\">\n                      <p className=\"line1\">Hello,</p>\n                      <p className=\"line2\">{profile?.firstName}</p>\n                    </div>\n                    </NavLink></li>\n                  </ul>\n                ):(\n                  <ul className=\"hide-on-med-and-down row-flex-center\">\n                    <li><NavLink onClick={()=>{setMenuOpenState(false)}} className=\"link\" to=\"/store\">Store</NavLink></li>\n                    <li><NavLink onClick={()=>{setMenuOpenState(false)}} className=\"btn login_btn\" to=\"/login\">Login</NavLink></li>\n                    <li><NavLink onClick={()=>{setMenuOpenState(false)}} className=\"btn signup_btn\" to=\"/signup\">Signup</NavLink></li>\n                  </ul>\n                )\n              }\n\n              <ul>\n                <li><NavLink onClick={()=>{setMenuOpenState(false)}} className=\"link cart-link\" to=\"/cart\"> \n                  <Cart style={{ fontSize: 40, marginTop: 12 }} /> \n                </NavLink></li>\n              </ul>\n\n\n          </nav>  \n\n\n          <div className=\"side_menu\">\n            <div className=\"overlay\">\n              <div className=\"side_menu_content\">\n                <div className=\"overlay_top_container\">\n                  \n\n                  <Collapsible accordion>\n                    {(auth?.uid)?(\n                    <CollapsibleItem\n                      expanded={false}\n                      header={`Hello, ${profile.firstName} ${profile.lastName}`}\n                      icon={<Icon>account_box</Icon>}\n                      node=\"div\"\n                    >\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/account\">Dashboard</NavLink></div>\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/account/orders\">My Orders</NavLink></div>\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/account/addresses\">My Addresses</NavLink></div>\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/account/payments\">Payments</NavLink></div>\n                      \n                    </CollapsibleItem>\n                    ):(null)}\n                    <CollapsibleItem\n                      expanded={true}\n                      header=\"Store\"\n                      icon={<Icon>place</Icon>}\n                      node=\"div\"\n                    >\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/store\">Visit Store</NavLink></div>\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/cart\">My Cart</NavLink></div>\n                      {sideNavCategoryLinks_html}\n\n                    </CollapsibleItem>\n                    <CollapsibleItem\n                      expanded={false}\n                      header=\"Explore\"\n                      icon={<Icon>whatshot</Icon>}\n                      node=\"div\"\n                    >\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/\">Home</NavLink></div>\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/about\">About Us</NavLink></div>\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/reviews\">Reviews</NavLink></div>\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/termsconditions\">Terms & Conditions</NavLink></div>\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/privacy\">Privacy Statement</NavLink></div>\n                      \n                    </CollapsibleItem>\n                  </Collapsible>\n\n                </div>\n                  {\n                    (auth?.uid)?(\n                        <div >\n                          Not recognizing this account?\n                          <div onClick={()=>{ setMenuOpenState(false); logout(); }} to=\"/login\" className=\"btn login_btn\" >LogOut</div>\n                        </div>\n                    ):(\n                      <div className=\"overlay_bottom_container\">\n                        <div><NavLink onClick={()=>{setMenuOpenState(false)}} to=\"/login\" className=\"btn login_btn\" >Login</NavLink></div>\n                        <div><NavLink onClick={()=>{setMenuOpenState(false)}} to=\"/signup\" className=\"btn signup_btn\" >Signup</NavLink></div>\n                      </div>\n                    )\n                  }\n              \n              </div>\n              <div onClick={()=>{setMenuOpenState(false)}} className=\"side_right\"></div>\n            </div>\n          </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n  // console.log('state',state);\n  return {\n    categories: state.firestore.ordered.categories,\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n  return {\n    logout: ()=>{ dispatch( logoutAction() ) },\n    search: (searchTerm, category)=>{ dispatch( searchAction(searchTerm,category) ) },\n    searchReset: ()=>{ dispatch( searchResetAction() ) }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect([\n    {collection: 'categories'}\n  ]),\n  withRouter  \n)(Navbar)\n","export const loginAction = (credentials)=>{\n    return (dispatch, getState,{ getFirebase, getFirestore} ) =>{\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        )\n        .then(()=>{\n            dispatch({type: \"LOGIN_SUCCESS\"});\n        })\n        .catch(err=>{\n            dispatch({\n                type: \"LOGIN_ERROR\",\n                err: err.message\n            })\n        })\n    }\n}\n\nexport const logoutAction = ()=>{\n    return (dispatch, getState,{ getFirebase, getFirestore })=>{\n        const firebase = getFirebase();\n        return firebase.auth().signOut()\n        .then(()=>{ dispatch({type:'LOGOUT_SUCCESS'}) })\n        .catch(err=>{\n            dispatch({\n                type: \"LOGOUT_ERROR\",\n                err: err.message\n            })\n        })\n    }\n}\n\nexport const signupAction = (newUser)=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        \n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        return firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password)\n        .then((resp)=>{\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                email: newUser.email,\n                initials: newUser.firstName[0]+newUser.lastName[0]\n            })\n        })\n        .then(()=>{ dispatch({ type:\"SIGNUP_SUCCESS\" }) })\n        .catch((err)=>{ dispatch({ type:\"SIGNUP_ERROR\", err:err.message }) })\n    }\n}\n\nexport const  authMessageResetAction = ()=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        return dispatch({ type:'AUTH_MESSAGE_RESET' })\n    }\n}","import React from 'react'\nimport $ from 'jquery';\nimport M from 'materialize-css';\nimport 'materialize-css';\nimport { Card, CardTitle, Icon } from 'react-materialize';\nimport CurrencyFormat from 'react-currency-format';\nimport { useHistory } from 'react-router-dom';\n\nimport { v1 as uuid } from 'uuid';\n\nfunction ProductCard({product}) {\n    const {productName, id, option, price, defaultImage, rating} = product;\n    \n    const history= useHistory();\n    \n    const numberFormat = (value) =>\n      new Intl.NumberFormat('en-IN', {\n        style: 'currency',\n        currency: 'INR'\n      }).format(value);\n    const priceFormat = (price)=>{\n      var formatted = numberFormat(price);\n      var symbol = formatted[0];\n      var integer = formatted.split('.')[0].slice(1);\n      var decimal = formatted.split('.')[1];\n      return (\n        <h5 className=\"product-price\">\n          {symbol+\" \"+integer+\".\"}<sub>{decimal}</sub>\n        </h5>\n      )\n    }\n\n    const redirectToProductPage = ()=>{\n      var target = '/product/'+id+(option?(\"?productOption=\"+option):(''))\n      history.push(target);\n    }\n\n    return (\n        <div className=\"ProductCard\">\n            <Card \n              className=\"round-card\"\n              onClick={redirectToProductPage}\n              header={<CardTitle image={defaultImage} />}\n              horizontal\n            >\n              <h6 className=\"product-productName\">{productName}</h6>\n              \n              {priceFormat(price)}\n              \n              <div className=\"product-rating\">\n                  {Array(Math.round(rating)).fill().map((_)=>(<span key={uuid()} >🌟</span>))} \n                  {Array(5-Math.round(rating)).fill().map((_)=>(<span  key={uuid()} >★</span>))} \n                  <span className=\"rating-numbers\">{\" \"+rating} rating</span>\n              </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default ProductCard\n","import React, { useEffect, useState } from 'react'\nimport Navbar from '../components/Navbar'\nimport $ from 'jquery'\nimport M from 'materialize-css';\nimport { Dropdown, Button, Divider, Icon } from \"react-materialize\";\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport ProductCard from '../components/ProductCard';\nimport {v1 as uuid } from 'uuid';\nimport queryString from 'query-string'\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { searchAction, searchResetAction } from '../store/actions/searchActions';\nimport InfoCard from '../components/InfoCard';\n\n\nfunction Store(props) {\n    const history = useHistory();\n    var query = queryString.parse(props?.location?.search)\n    const searchTerm =query?.searchTerm ?? ''; \n    const category =query?.category ?? 'All'; \n    // console.log('seachTerm form store page', searchTerm);\n    const {search, searchAction, searchReset} = props;\n    const {searchError, searchResults, searchMessage} = search;\n    useEffect(()=>{\n      searchReset();\n      if(searchTerm == ''){\n        history.push('/store/all');\n      }else{\n        searchAction(searchTerm,category);\n      }\n    },[searchTerm,category])\n    useEffect(()=>{\n      // console.log(\"searchState=>\",{searchMessage, searchError, searchResults});\n    },[searchMessage,searchError, searchResults])\n    return (\n        <div className=\"Store Page\">\n            <div className=\"products-container container\">\n              \n              {searchResults && searchResults.map(product=>( \n                <ProductCard key={uuid()} product={product} /> \n              ))}\n              {\n                (searchMessage == 'SEARCH_RESULTS_NOT_FOUND')\n                ?( <InfoCard><p className=\"flow-text center\">Nothing Relevant Found</p></InfoCard> ):null\n              }\n              {\n                (searchMessage == 'SEARCH_IN_PROGRESS' )\n                ?( <InfoCard><p className=\"flow-text center\">Loading...</p></InfoCard> ):null\n              }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n  // console.log(state);\n  return {\n    search: state.search,\n    products: state.firestore.ordered.products,\n    isLoaded: true\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n  return {\n    searchAction: (searchTerm, category)=>{ dispatch( searchAction(searchTerm,category) ) },\n    searchReset: ()=>{ dispatch( searchResetAction() ) }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withRouter  \n)\n(Store)\n\n","import React, { useState, useEffect } from 'react'\nimport $ from 'jquery';\nimport { loginAction, authMessageResetAction } from '../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nfunction Login(props) {\n    \n    const { authMessage, authError, login, authMessageReset} = props;\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [emailBlur, setEmailBlur] = useState(false);\n    const [passwordBlur, setPasswordBlur] = useState(false);\n\n    var [allValid, setAllValid] = useState(false);\n\n    var [authLog,setAuthLog] =  useState('');\n\n    const history = useHistory();\n\n\n    useEffect(()=>{\n        if(!emailBlur){ return;}\n        emailValidation();\n    },[email]);\n\n    useEffect(()=>{\n        if(!passwordBlur){ return;}\n        passwordValidation();\n    },[password]);\n    \n    useEffect(()=>{\n        console.log('authMessage',authMessage, authError);\n        if(authMessage == 'LOGIN_SUCCESS'){ \n            setAuthLog('You are successfully logged in.');\n            setTimeout(()=>{ history.push('/') },3000)\n        }\n        else { setAuthLog(authError) };\n        setTimeout(()=>{\n            authMessageReset();\n        },5000)\n    },[authMessage]);\n\n    \n    var renderLog = (authMessage==\"AUTH_MESSAGE_RESET\" || authMessage == null)?null\n        :(<span className={(authMessage==\"LOGIN_SUCCESS\")?\"success\":\"error\"} >{authLog}</span>);\n\n    const emailValidation = ()=>{\n        if(email.length==0){ setInvalid('email', 'enter your email'); return;}\n        var regexEmail = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\n        if( !regexEmail.test(email) ){ setInvalid('email', 'email not valid'); return;}\n        setValid('email'); return;\n    }\n\n    const passwordValidation = ()=>{\n        if(password.length==0){ setInvalid('password', 'enter your password'); return;}\n        if( password.length<8){ setInvalid('password', 'password length might be greater'); return;}\n        setValid('password'); return;\n    }\n\n    const setInvalid = (field, errorMessage)=>{\n        $(`.${field}-field`).removeClass('valid').addClass('invalid');\n        $(`.${field}-helper-text`).html(errorMessage);\n    }\n    const setValid = (field)=>{\n        $(`.${field}-field`).removeClass('invalid').addClass('valid');\n        $(`.${field}-helper-text`).html('');\n    }\n\n    const formValidation = ()=>{\n        setEmailBlur(true);\n        setPasswordBlur(true);\n        emailValidation();\n        passwordValidation();        \n        if($('.input-field.invalid').length == 0) allValid= true;\n        else allValid = false;\n    }\n\n    const handleSubmit= (e)=>{\n        e.preventDefault();\n        formValidation();\n        console.log('formvalidation', allValid);\n        if(allValid){ \n            console.log(email, password);\n            props.login({email,password});\n        }\n        else console.log('form is invalid');\n    }\n\n    return (\n        <div className=\"Login\">\n            <div className=\"form-container\">\n                <div className=\"card\">\n                <div className=\"card-title\">\n                        <span className=\"light_text\">Log</span>\n                        <span className=\"heavy_text\">In</span>\n                    </div>\n                    <div className=\"card-content\">\n                    <div className=\"log center\">\n                        {renderLog}\n                    </div>\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"input-field email-field\">\n                                <i className=\"material-icons prefix\">email</i>\n                                <label htmlFor=\"email\">Email</label>\n                                <input onChange={(e)=>{setEmail(e.target.value)}}  onBlur={()=>{setEmailBlur(true); emailValidation();}}id=\"email\" type=\"email\" value={email}/>\n                                <span className=\"helper-text email-helper-text\"></span>\n                            </div>\n                            <div className=\"input-field password-field\">\n                                <i className=\"material-icons prefix\">fingerprint</i>\n                                <label htmlFor=\"password\">Password</label>\n                                <input onChange={(e)=>{setPassword(e.target.value)}} onBlur={()=>{setPasswordBlur(true); passwordValidation();}} id=\"password\" type=\"password\" value={password}/>\n                                <span className=\"helper-text password-helper-text\"></span>\n                            </div>\n                            <div className=\"center\">\n                                <button className=\"btn light_btn\">Login</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps =(state)=>{\n    return{\n        authError: state.auth.authError,\n        authMessage: state.auth.authMessage\n    }\n\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        login: (credentials)=>{ dispatch( loginAction(credentials) ) },\n        authMessageReset: ()=>{ dispatch( authMessageResetAction() ) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React, { useState, useEffect } from 'react'\nimport $ from 'jquery';\nimport { authMessageResetAction, signupAction } from '../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nfunction Signup(props) {\n    \n    const { authMessage, authError, signup, authMessageReset} = props;\n\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const [firstNameBlur, setFirstNameBlur] = useState(false);\n    const [lastNameBlur, setLastNameBlur] = useState(false);\n    const [emailBlur, setEmailBlur] = useState(false);\n    const [passwordBlur, setPasswordBlur] = useState(false);\n    const [confirmPasswordBlur, setConfirmPasswordBlur] = useState(false);\n\n    var [allValid, setAllValid] = useState(false);\n\n    var [authLog,setAuthLog] =  useState('');\n\n    const history = useHistory();\n\n    useEffect(()=>{  if(!firstNameBlur){ return;}  firstNameValidation(); },[firstName]);\n    useEffect(()=>{  if(!lastNameBlur){ return;}  lastNameValidation(); },[lastName]);\n    useEffect(()=>{  if(!emailBlur){ return;}  emailValidation(); },[email]);\n    useEffect(()=>{ if(!passwordBlur){ return;} passwordValidation(); },[password]);\n    useEffect(()=>{ if(!confirmPasswordBlur){ return;} confirmPasswordValidation(); },[confirmPassword]);\n    \n    useEffect(()=>{\n        console.log('authMessage',authMessage, authError);\n        if(authMessage == 'SIGNUP_SUCCESS'){ \n            setAuthLog('You are successfully signed up and logged in.');\n            setTimeout(()=>{ history.push('/') },3000)\n        }\n        else { setAuthLog(authError) };\n        setTimeout(()=>{\n            authMessageReset();\n        },5000)\n    },[authMessage]);\n\n    \n    var renderLog = (authMessage==\"AUTH_MESSAGE_RESET\" || authMessage == null)?null\n        :(<span className={(authMessage==\"SIGNUP_SUCCESS\")?\"success\":\"error\"} >{authLog}</span>);\n\n    const firstNameValidation = ()=>{\n        if(firstName.length==0){ setInvalid('firstName', 'enter your firstName'); return;}\n        setValid('firstName'); return;\n    }\n\n    const lastNameValidation = ()=>{\n        if(lastName.length==0){ setInvalid('lastName', 'enter your lastName'); return;}\n        setValid('lastName'); return;\n    }\n\n    const emailValidation = ()=>{\n        if(email.length==0){ setInvalid('email', 'enter your email'); return;}\n        var regexEmail = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\n        if( !regexEmail.test(email) ){ setInvalid('email', 'email not valid'); return;}\n        setValid('email'); return;\n    }\n\n    const passwordValidation = ()=>{\n        if(password.length==0){ setInvalid('password', 'enter your password'); return;}\n        if( password.length<8){ setInvalid('password', 'password should be a minimum of 8 characters'); return;}\n        setValid('password'); return;\n    }\n\n    const confirmPasswordValidation = ()=>{\n        if(confirmPassword.length==0){ setInvalid('confirmPassword', 'confirm your password'); return;}\n        if( confirmPassword!=password){ setInvalid('confirmPassword', 'passwords didnot match'); return;}\n        setValid('confirmPassword'); return;\n    }\n\n    const setInvalid = (field, errorMessage)=>{\n        $(`.${field}-field`).removeClass('valid').addClass('invalid');\n        $(`.${field}-helper-text`).html(errorMessage);\n    }\n    const setValid = (field)=>{\n        $(`.${field}-field`).removeClass('invalid').addClass('valid');\n        $(`.${field}-helper-text`).html('');\n    }\n\n    const formValidation = ()=>{\n        setFirstNameBlur(true);\n        setLastNameBlur(true);\n        setEmailBlur(true);\n        setPasswordBlur(true);\n        setConfirmPasswordBlur(true);\n        firstNameValidation();\n        lastNameValidation();\n        emailValidation();\n        passwordValidation();\n        confirmPasswordValidation();\n        if($('.input-field.invalid').length == 0) allValid= true;\n        else allValid = false;\n    }\n\n    const handleSubmit= (e)=>{\n        e.preventDefault();\n        formValidation();\n        console.log('formvalidation', allValid);\n        if(allValid){ \n            signup({firstName, lastName, email, password, confirmPassword})\n        }\n        else console.log('form is invalid');\n    }\n\n    return (\n        <div className=\"Signup\">\n            <div className=\"form-container\">\n                <div className=\"card\">\n                    <div className=\"card-title\">\n                        <span className=\"light_text\">Sign</span>\n                        <span className=\"heavy_text\">Up</span>\n                    </div>\n                    <div className=\"card-content\">\n                    <div className=\"log center\">\n                        {renderLog}\n                    </div>\n                        <form className=\"row\" onSubmit={handleSubmit}>\n                            \n                            <div className=\"col s6 input-field firstName-field\">\n                                <i className=\"material-icons prefix\">person</i>\n                                <label htmlFor=\"firstName\">First Name</label>\n                                <input onChange={(e)=>{setFirstName(e.target.value)}}  onBlur={()=>{setFirstNameBlur(true); firstNameValidation();}} id=\"firstName\" type=\"text\" value={firstName}/>\n                                <span className=\"helper-text firstName-helper-text\"></span>\n                            </div>\n\n                            <div className=\"col s6 input-field lastName-field\">\n                                <i className=\"material-icons prefix\"></i>\n                                <label htmlFor=\"lastName\">Last Name</label>\n                                <input onChange={(e)=>{setLastName(e.target.value)}}  onBlur={()=>{setLastNameBlur(true); lastNameValidation();}} id=\"lastName\" type=\"text\" value={lastName}/>\n                                <span className=\"helper-text lastName-helper-text\"></span>\n                            </div>\n\n                            <div className=\"col s12 input-field email-field\">\n                                <i className=\"material-icons prefix\">email</i>\n                                <label htmlFor=\"email\">Email</label>\n                                <input onChange={(e)=>{setEmail(e.target.value)}}  onBlur={()=>{setEmailBlur(true); emailValidation();}} id=\"email\" type=\"email\" value={email}/>\n                                <span className=\"helper-text email-helper-text\"></span>\n                            </div>\n\n                            <div className=\"col s12 input-field password-field\">\n                                <i className=\"material-icons prefix\">fingerprint</i>\n                                <label htmlFor=\"password\">Password</label>\n                                <input onChange={(e)=>{setPassword(e.target.value)}} onBlur={()=>{setPasswordBlur(true); passwordValidation();}} id=\"password\" type=\"password\" value={password}/>\n                                <span className=\"helper-text password-helper-text\"></span>\n                            </div>\n                            <div className=\"col s12 input-field confirmPassword-field\">\n                                <i className=\"material-icons prefix\">check_circle</i>\n                                <label htmlFor=\"confirmPassword\">confirmPassword</label>\n                                <input onChange={(e)=>{setConfirmPassword(e.target.value)}} onBlur={()=>{setConfirmPasswordBlur(true); confirmPasswordValidation();}} id=\"confirmPassword\" type=\"password\" value={confirmPassword}/>\n                                <span className=\"helper-text confirmPassword-helper-text\"></span>\n                            </div>\n\n                            <div className=\"center\">\n                                <button className=\"btn signup_btn\">Signup</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps =(state)=>{\n    return{\n        authError: state.auth.authError,\n        authMessage: state.auth.authMessage\n    }\n\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        signup: (newUser)=>{ dispatch( signupAction(newUser) ) },\n        authMessageReset: ()=>{ dispatch( authMessageResetAction() ) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)\n","import React, { useEffect, useState, Fragment } from 'react'\nimport { withRouter, useHistory } from 'react-router-dom'\nimport { compose } from 'redux';\nimport { connect, useSelector } from 'react-redux';\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase';\n\nimport queryString from 'query-string'\nimport { renderIntoDocument } from 'react-dom/test-utils';\n\nimport $ from 'jquery';\n\nimport OwlCarousel from 'react-owl-carousel2';\nimport 'react-owl-carousel2/lib/styles.css'; //Allows for server-side rendering.\nimport 'react-owl-carousel2/src/owl.carousel.css'; //Allows for server-side rendering.\nimport 'react-owl-carousel2/src/owl.theme.green.css'; //Allows for server-side rendering.\n\nimport { v1 as uuid } from \"uuid\";\nimport { addToCartAction, cartMessageReset } from '../store/actions/cartUpdateActions';\nimport Delayed from '../utils/Delayed';\nimport { priceFormat } from '../utils/utils';\nimport { Materialbox } from 'materialize-css';\n\nfunction Product(props) {\n    // console.log(props)\n    const history = useHistory();\n    // console.log(history,props);\n    const {productid} = props.match.params;\n    var  query = queryString.parse(history.location.search)\n    const [productOption,setProductOption] = useState( query.productOption ?? null);\n    useFirestoreConnect([{\n        collection: 'products',\n        doc: productid ?? 'default',\n        storeAs: `product-${productid}`\n    }])\n    const productFromCollection = useSelector(state=> state.firestore.ordered[`product-${productid}`]) \n    const [product, setProduct] = useState({});\n    useEffect(()=>{\n        if(!productFromCollection || !productFromCollection[0] ) return;\n        setProduct(productFromCollection[0]);\n    },[productFromCollection])\n    useEffect(()=>{\n        if(!product || !product.productName) return ;\n        // console.log('product =>',product);\n        // console.log('product =>',product.productOptions);\n        getRenderedProduct();\n    },[product])\n\n    const getOptionIndicesArray = (optionString)=> optionString.split('_').splice(1);\n    const getOptionString = (optionIndicesArray) => ('option_'+optionIndicesArray.join('_'));\n\n    const [renderedProduct, setRenderedProduct] = useState({});\n    const getRenderedProduct = ()=>{\n        if(productid == 'default') return;\n        if(product.hasOptions == false){ setRenderedProduct(product); return; }        \n        if(product.productOptions[productOption].isActive == false){ console.log('this option is not Active'); return;}\n        setRenderedProduct({\n            productName: product.productOptions[productOption].productFullName,\n            price: product.productOptions[productOption].price,\n            images: product.productOptions[productOption].images,\n            inStock: product.productOptions[productOption].inStock,\n            features: [...product.features, ...getOptionIndicesArray(productOption).map((eaOp,eaOpIndex)=>( product.optionCategoriesObject[product.optionCategories[eaOpIndex]][eaOp].optionFeatures )).reduce((ac,eaAr)=>[...ac,...eaAr],[]) ],\n            specs: [...product.specs, ...getOptionIndicesArray(productOption).map((eaOp,eaOpIndex)=>( product.optionCategoriesObject[product.optionCategories[eaOpIndex]][eaOp].optionSpecs )).reduce((ac,eaAr)=>[...ac,...eaAr],[]) ]\n        });\n    }\n    const selectProductOption = (option)=>{\n        console.log('request to select', option);\n        setProductOption(option);\n    }\n    const setHistoryToProductOption=(option)=>{ history.push(`/product/${productid}?productOption=${option}`) }\n    useEffect(()=>{\n        if(!product || product.hasOptions == false || !product?.productOptions || product.productOptions[productOption].isActive == false) return;\n        \n        getRenderedProduct();\n    },[productOption])\n    useEffect(()=>{\n        return history.listen(()=>{\n            query = queryString.parse(history.location.search);\n            var localProductOption = query?.productOption || 'default';\n            return selectProductOption(localProductOption);\n        });\n    },[history])\n\n    const authuid = useSelector((state)=>state.firebase.auth.uid) ?? 'default';\n    const [cartQuantity, setCartQuantity] = useState(1);\n    const handleCartUpdate = (val)=>{\n        if(val>=0) setCartQuantity(val)\n        else{ setCartQuantity(1) }\n    }\n    const {addToCart} = props;\n    const addingToCart = ()=>{\n        if(cartQuantity == 0){ handleCartUpdate(1); return; }\n        console.log('adding to cart');\n        var newProduct = {\n            cartQty      : cartQuantity,\n            defaultImage : renderedProduct.images[0] ?? '',\n            option       : productOption ?? false,\n            productName  : renderedProduct.productName,\n            productPrice : renderedProduct.price,\n            productid    : productid ?? null ,\n            createdAt    : new Date()\n        }\n        if(!authuid || authuid =='default'){\n            alert('Please Login to add this item to cart');\n            history.push('/login');\n        }else{\n            addToCart(newProduct);\n            history.push('/cart');\n        }\n    }\n    \n    const categoryOptionsSelectionBtns = (product && product.hasOptions && product.optionCategories && product.optionCategoriesObject)?(\n        <div className=\"categoryOptionsSelectionBtnsSection\">\n            {product.optionCategories.map((eachCat, eachCatIndex)=>(\n            <Fragment key={uuid()}>\n                <p key={uuid()} className=\"flow-text head heavy_text\">{eachCat} :</p>\n                <div className=\"row-flex-center flex-wrap\">\n                {product.optionCategoriesObject[eachCat].map((eachCatObj,eachCatObjIndex)=>{\n                    var opAr = getOptionIndicesArray(productOption);\n                    var isSelected = (getOptionIndicesArray(productOption)[eachCatIndex] == eachCatObjIndex);\n                    opAr[eachCatIndex] = eachCatObjIndex;\n                    var op = getOptionString(opAr);\n                    // console.log(opAr,op);\n                    var isAvailable  = product.productOptions[op].isActive;\n                    var bestMatch = op;\n                    if(!isAvailable){\n                        var allOpAr = Object.keys(product.productOptions).sort().map((ea)=> getOptionIndicesArray(ea) );\n                        bestMatch = getOptionString(allOpAr.find(eaAr=> (eaAr[eachCatIndex]==eachCatObjIndex && product.productOptions[getOptionString(eaAr)].isActive)))\n                    }\n                    if(isAvailable && isSelected){\n                        return ( <div key={uuid()}  className=\"category_chip selected\">{eachCatObj.optionName}</div> )\n                    }else if(isAvailable){\n                        return ( <div key={uuid()} onClick={()=>{setHistoryToProductOption(op)}} className=\"category_chip available\">{eachCatObj.optionName}</div> )\n                    }else{\n                        return ( <div key={uuid()} onClick={()=>{setHistoryToProductOption(bestMatch)}} className=\"category_chip unavailable\">{eachCatObj.optionName}</div> )\n                    }\n                })}\n                </div>\n            </Fragment>\n            ))}\n        </div>\n    ):(null);\n\n    const ImageSectionJSX = (renderedProduct && renderedProduct.images)?(\n        <div className=\"image-section\">\n            <div className=\"card round-card\">\n                <div className=\"card-content\">\n                <OwlCarousel  options={{\n                items: 1,\n                nav: false,\n                dots: true,\n                dotsEach:true,\n                rewind: true,\n                autoplay: true,\n                loop: true,\n                }} \n                events={{}} \n            >\n                { renderedProduct.images.map((eachImage,index)=> (<div key={uuid()}><img src={eachImage} alt={renderedProduct.productName+\"-img\"+index}/></div>) ) }\n            </OwlCarousel>\n                </div>\n            </div>\n        </div>\n    ):(null)\n\n    const InStockJSX = (renderedProduct && renderedProduct.inStock)?(\n        <div>\n            <hr/>\n            <h5 className=\"green-text heavy_text\">In Stock</h5>\n            From: <span className=\"primary-green-light-text\">Digizup Exclusive Seller</span>\n            <div className=\"row\">\n                <div className=\"col s6 m12 l6 center\">\n                <div className=\"quantity-selection-container\">\n                    <div onClick={()=>{handleCartUpdate(cartQuantity-1)}} className=\"btn-floating quantity-adjustment-btn\"> <i className=\"material-icons\">remove_circle</i> </div>\n                    <input value={cartQuantity} onChange={(e)=>{handleCartUpdate(e.target.value)}} className=\"cart-quantity-input\" type=\"number\"/>\n                    <div onClick={()=>{handleCartUpdate(cartQuantity+1)}} className=\"btn-floating quantity-adjustment-btn\"> <i className=\"material-icons\">add_circle</i> </div>\n                </div>\n                </div>\n                <div className=\"col s6 m12 l6 center\">\n                <div \n                    onClick={()=>{ addingToCart() }}\n                    className=\"btn btn add-to-cart-btn\"\n                > <i className=\"material-icons\">add_shopping_cart</i> Add to Cart</div>\n                </div>\n            </div>\n            <hr/>\n        </div>\n    ):(\n        <h5 className=\"primary-red-text heavy_text\">Out of Stock</h5>\n    )\n\n    const FeaturesJSX = (renderedProduct && renderedProduct.features?(\n        <Fragment>\n            <h5 className=\"left-align head regular_text\">Features</h5>\n            <p className=\"line-break\" key={uuid()}>\n            {renderedProduct.features.map((feature,index)=>(\n                <Fragment><span className=\"head\">‣ </span>{feature}{\"\\n\\n\"}</Fragment>\n            ))}\n            </p>\n        </Fragment>\n    ):(null))\n\n    const SpecsJSX= (renderedProduct && renderedProduct.specs?(\n        <Fragment>\n            <h5 className=\"left-align head regular_text\">Specs</h5>\n            <table>\n            <tbody>\n            {renderedProduct.specs.map((spec,index)=>(\n                <tr key={uuid()}>\n                    <td className=\"primary-green-dark-bg white-text\" >{spec.specKey}</td>\n                    <td className=\"white head\" >{spec.specValue}</td>\n                </tr>\n            ))}\n            </tbody>\n            </table>\n        </Fragment>\n    ):(null))\n\n    const DescriptionJSX= (renderedProduct && renderedProduct.description?(\n        <Fragment>\n            <h5 className=\"left-align head regular_text\">Description</h5>\n            <div className=\"container\">\n                <p className=\"line-break\">{renderedProduct.description}</p>\n            </div>\n        </Fragment>\n    ):(null))\n\n    return (\n        <div className=\"Product Page\">\n            {(renderedProduct && renderedProduct.productName)\n            ?(\n            <div className=\"container\">\n                <div className=\"top-row\">\n                    {ImageSectionJSX}\n                    <div className=\"product-section\">\n                        <h4 className=\"center head light_text\">{renderedProduct.productName}</h4>\n                        <h4 className=\"right-align head heavy_text\">{priceFormat(renderedProduct.price)}</h4>\n                        {categoryOptionsSelectionBtns}\n                        {InStockJSX}\n                        {FeaturesJSX}\n                    </div>\n                </div>\n                {DescriptionJSX}\n                {SpecsJSX}\n            </div>\n            )\n            :(null)}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        cartUpdate: state.cartUpdate\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        addToCart: (newProduct)=>{ dispatch( addToCartAction(newProduct) ) },\n        cartMessageReset: ()=>{ dispatch( cartMessageReset() ) }\n    }\n}\n\nexport default \ncompose(\n    connect(mapStateToProps,mapDispatchToProps),\n    withRouter\n)(Product)\n","import React, { useEffect, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction ScrollToTop({ history, children }) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    }\n  }, []);\n\n  return <Fragment>{children}</Fragment>;\n}\n\nexport default withRouter(ScrollToTop);","import React,{useState, useEffect} from 'react'\nimport 'materialize-css';\nimport { Card, CardTitle, Icon, Chip } from 'react-materialize';\nimport { priceFormat } from '../utils/utils';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment';\n\nfunction OrderCard(props) {\n    const history = useHistory();\n    var {order} = props;\n    var {defaultImage, id, cartCount, total ,createdAt, status} = order;\n    var redirectToOrderSummaryPage = ()=>{\n        console.log('redirect to order summary page');\n        history.push('/account/order/'+id);\n    }\n    return (\n        <div className=\"OrderCard\">\n            <Card\n              className=\"round-card\"\n              closeIcon={<Icon>close</Icon>}\n              header={<CardTitle onClick={redirectToOrderSummaryPage} image={defaultImage} />}\n              horizontal\n              revealIcon={<Icon>more_vert</Icon>}\n            >\n                <Chip\n                  className=\"green-chip\"\n                  close={false}\n                  closeIcon={<Icon className=\"close\">close</Icon>}\n                  options={null}\n                >\n                  <span className=\"flow-text\">{cartCount}</span> {(cartCount>1)?'items':'item'}\n                </Chip>\n                <div className=\"row\">\n                  <div className=\"col s12 l7\">\n                    <table>\n                      <tbody>\n                        <tr><td>Order Placed: </td><th>{moment(createdAt.toDate()).format('MMM Do YY, h:mm a')}</th></tr>\n                        <tr><td>Total: </td><th>{priceFormat(total)}</th></tr>\n                        <tr><td>Status: </td><th>{status}</th></tr>\n                      </tbody>\n                    </table>\n                  </div>\n                  <div className=\"col s12 l5\">\n                    <div className=\"row\">\n                        <div onClick={redirectToOrderSummaryPage} className=\"col s12 l12 center\"> <div className=\"btn light_btn\">View Order</div> </div>\n                        <div onClick={redirectToOrderSummaryPage} className=\"col s12 l12 center\"> <div className=\"btn dark_btn\">Track Order</div> </div>\n                    </div>\n                  </div>\n                </div>\n            </Card> \n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n  return {\n  }\n}\n\nexport default connect(mapStateToProps,null)(OrderCard);","import React, { useState, useEffect, Fragment } from 'react'\nimport { compose } from 'redux'\nimport { withRouter, NavLink } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { useFirestoreConnect } from 'react-redux-firebase';\nimport Delayed from '../utils/Delayed';\nimport OrderCard from '../components/OrderCard';\nimport _ from 'lodash';\n\n\nfunction Orders() {\n    \n    const authuid = useSelector(state=>state.firebase.auth.uid) ?? 'default';\n    // useFirestoreConnect([{\n        // collection: 'users',\n        // doc: authuid,\n        // subcollections: [{collection: 'orders'}],\n        // storeAs: 'orders'\n    // }]);\n    const ordersCollection =  useSelector(state=>state.firestore.ordered.orders) ?? [];\n    const [orders, setOrders] = useState([]);\n    useEffect(()=>{\n        var local = ordersCollection;\n        local = _.orderBy(local,['createdAt'],['desc'])\n        setOrders(local);\n    },[ordersCollection])\n    \n    const ordersJSX = (\n        <div className=\"orders\">\n            {(!orders || orders.length == 0)?(\n                <div className=\"center\">\n                <div className=\"row\">\n                <div className=\"col s8 m6 l6 offset-s2 offset-m3 offset-l3\">\n                <div className=\"card round-card\">\n                <div className=\"card-content\">\n                    <p className=\"flow-text\">\n                        No Orders placed yet\n                    </p>\n                    <NavLink to='/store/all'><div className=\"btn dark_btn\">Shop Now</div></NavLink>\n                </div>    \n                </div>    \n                </div>\n                </div>\n                </div>\n            ):(\n                <div className=\"row\">\n                    { orders.map((order)=>( \n                        <div className=\"col s12 m8 l8 offset-m2 offset-l2\">\n                            <OrderCard order={order} />\n                        </div>\n                     )) }\n                </div>\n            )}\n        </div>\n    )\n\n    return (\n        <div className=\"Orders Page\">\n            <h3 className=\"center primary-green-dark-text\">Your <span className=\"heavy_text\">Orders</span></h3>\n            {(!authuid || authuid == 'default')?(\n                <div className=\"center\">\n                <div className=\"row\">\n                <div className=\"col s8 m6 l6 offset-s2 offset-m3 offset-l3\">\n                <div className=\"card round-card\">\n                <div className=\"card-content\">\n                    <p className=\"flow-text\">\n                        Please <span className=\"heavy_text primary-green-dark-text\">SignIn</span> To Continue\n                    </p>\n                </div>    \n                </div>    \n                </div>\n                </div>\n                </div>\n            ):(\n                <Delayed waitBeforeShow={3000}>\n                    {ordersJSX}\n                </Delayed>\n            )}\n        </div>\n    )\n}\n\nexport default compose(\n    withRouter\n)(Orders)","import React, { useState, useEffect, Fragment } from 'react'\nimport { withRouter, useHistory, NavLink } from 'react-router-dom'\nimport { compose } from 'redux'\nimport { useFirestoreConnect } from 'react-redux-firebase';\nimport { useSelector, connect } from 'react-redux';\nimport moment from 'moment';\nimport { v1 as uuid } from 'uuid';\nimport { priceFormat } from '../utils/utils';\nimport Delayed from '../utils/Delayed';\nimport _ from 'lodash';\nimport 'materialize-css';\nimport { Modal, Button } from 'react-materialize';\nimport { requestCancellationAction } from '../store/actions/orderActions';\n\nfunction Order(props) {\n    // console.log(props)\n    const history = useHistory();\n    const {orderid} = props.match.params ?? null;\n    const authuid = useSelector(state=> state.firebase.auth.uid)??'default';\n    const orders = useSelector(state=>state.firestore.ordered.orders)??[];\n    const order = orders.find(each => orderid == each.id);\n    useEffect(()=>{\n        if(!order) return;\n    },[order])\n    const productRedirect = (item)=>{\n        var target = '/product/'+item.productid+((item.option != false)?('?productOption='+item.option):(''));\n        history.push(target);\n    }\n\n    const {requestCancellationAction} = props;\n    const [cancellationMessage,setCancellationMessage] = useState('its boaring');\n    const requestCancellation = (orderID)=>{\n        console.log('requesting cancellateion', orderID,cancellationMessage);\n        requestCancellationAction(orderID, cancellationMessage);\n    }\n    const cancelButton = (order && order.id) ?(\n            <Modal\n              actions={[\n                  <Fragment>\n                    <Button flat modal=\"close\" node=\"button\" waves=\"green\">Close</Button>\n                    <Button flat modal=\"close\" node=\"button\" waves=\"red\" onClick={()=>{requestCancellation(order.id,cancellationMessage)}} >Request Cancellation</Button>\n                </Fragment>\n              ]}\n              bottomSheet={false}\n              fixedFooter={false}\n              header=\"Modal Header\"\n              id=\"Modal-0\"\n              open={false}\n              options={{\n                dismissible: true,\n                endingTop: '40%',\n                inDuration: 250,\n                onCloseEnd: null,\n                onCloseStart: null,\n                onOpenEnd: null,\n                onOpenStart: null,\n                opacity: 0.5,\n                outDuration: 250,\n                preventScrolling: true,\n                startingTop: '20%'\n              }}\n              trigger={<div className=\"btn red_btn\">Cancel Order</div>}\n            >   \n                <input onChange={(e)=>{setCancellationMessage(e.target.value)}} type=\"text\" placeholder=\"Reason for cancellation\" value={cancellationMessage}/>\n            </Modal>\n        ):(null);\n\n    const orderCreds = (order && order.id && order.cart)?\n    (<div className=\"card round-card\">\n        <div className=\"card-content\">\n            <h6 className=\"center\">Order</h6>\n            <table>\n                <tbody>\n                    <tr><th>Order ID :</th><th>{order.id}</th></tr>\n                    <tr><th>Cart Count :</th><th>{order.cartCount}</th></tr>\n                    <tr><th>Order Placed :</th><th>{moment(order.createdAt.toDate()).format('MMM Do YY, h:mm a')}</th></tr>\n                </tbody>\n            </table>\n        </div>\n    </div>):(null);\n\n    const orderPayment = (order && order.id && order.cart)?\n    (<div className=\"card round-card\">\n        <div className=\"card-content\">\n            <h6 className=\"center\">Payment Mode: <span className=\"heavy_text\">{order.paymentType}</span></h6>\n            <table>\n                <tbody>\n                {(order.paymentType == 'card' && order.card) ? (\n                    <Fragment>\n                    <tr><td>Card Holder :</td><th>{order.card.cardHolderName}</th></tr>\n                    <tr><td>Card Number :</td><th>{order.card.cardNo}</th></tr>\n                    </Fragment>\n                ) : (null)}\n                    <tr><td>Payment Status :</td><th>{order.paymentType == 'cod' ? 'Payment scheduled at delivery' : 'Paid'}</th></tr>\n                </tbody>\n            </table>\n        </div>\n    </div>):(null);\n\n    const orderAddress = (order && order.id && order.cart)?\n    (<div className=\"card round-card\">\n        <div className=\"card-content\">\n            <h6 className=\"center\">Address: </h6>\n            {(order.address) ? (<table>\n                <tbody>\n                    <tr><td className=\"no-wrap\">Name :</td><th>{order.address.fullName}</th></tr>\n                    <tr><td className=\"no-wrap\">Address :</td><th className=\"line-break\">{order.address.addressLine + \"\\n\" + order.address.city + \", \" + order.address.state}</th></tr>\n                    <tr><td className=\"no-wrap\">Pincode :</td><th>{order.address.pincode}</th></tr>\n                    <tr><td className=\"no-wrap\">Phone No. :</td><th>{order.address.phoneNo + ' - ' + order.address.country}</th></tr>\n                </tbody>\n            </table>) : (null)}\n        </div>\n    </div>):(null);\n\n    const orderTracking = (order && order.id && order.cart)?\n    (<div className=\"card round-card\">\n        <div className=\"card-content\">\n            <h6 className=\"center\">Order Status: <span className=\"heavy_text\">{order.status}</span></h6>\n            {(order.tracking) ? (<table>\n                <tbody>\n                    {order.tracking.map(each => (<tr><td className=\"line-break\">{each.title}</td><td className=\"no-wrap\">{moment(each.updateTime.toDate()).format('MMM Do YY, h:mm a')}</td></tr>))}\n                </tbody>\n            </table>) : (null)}\n            {['Out for Delivery', 'Delivered', 'Cancelled'].includes(order.status)?(null):(\n                <Fragment>\n                    {(['Cancellation Requested'].includes(order.status))\n                    ?( <div className=\"btn red_btn disabled\">Request Cancellation</div> )\n                    :(<Fragment>{cancelButton}</Fragment>)}\n                </Fragment>\n            )}\n            \n        </div>\n    </div>):(null);\n\n    const orderCart = (order && order.id && order.cart)?\n    (<div className=\"card round-card\">\n        <div className=\"card-content\">\n            <h6 className=\"center\">Cart Details:</h6>\n            {(order.cart) ? (<table>\n                <tbody>\n                    <tr>\n                        <td className=\"no-wrap heavy_text\">Product Name</td>\n                        <td className=\"no-wrap heavy_text\">Price</td>\n                        <td className=\"no-wrap heavy_text\">Cart Qty</td>\n                        <td className=\"no-wrap heavy_text\">SubTotal</td>\n                    </tr>\n                    {(order.cart.map(item => (<tr>\n                        <td className=\"text-link\" onClick={() => { productRedirect(item); } }>{item.productName}</td>\n                        <td className=\"no-wrap\">{priceFormat(item.productPrice)}</td>\n                        <td className=\"no-wrap\">{item.cartQty}</td>\n                        <td className=\"no-wrap\">{priceFormat(item.productPrice * item.cartQty)}</td>\n                    </tr>)))}\n                    <tr>\n                        <td></td>\n                        <td className=\"no-wrap\"></td>\n                        <td className=\"no-wrap heavy_text\">Total: </td>\n                        <td className=\"no-wrap heavy_text\">{priceFormat(order.total)}</td>\n                    </tr>\n                </tbody>\n            </table>) : (<p>no table</p>)}\n        </div>\n    </div>):(null);\n    const OrderPageJSX =  (order && order.id)?(\n        \n        <div className=\"row\">\n            <div className=\"col s12 m6\">{orderCreds}</div>\n            <div className=\"col s12 m6\">{orderPayment}</div>\n            <div className=\"col s12\"></div>\n            <div className=\"col s12 m6\">{orderAddress}</div>\n            <div className=\"col s12 m6\">{orderTracking}</div>\n            <div className=\"col s12\"></div>\n            <div className=\"col s12 m12\">{orderCart}</div>\n        </div>\n    ):(null)\n    return (\n        <div className=\"Order Page\">\n            <div className=\"container\">\n                <Delayed waitBeforeShow={2000}>\n                {(order && order?.id)?(\n                        <Fragment>\n                            {OrderPageJSX}\n                        </Fragment>\n                ):(\n                    <div className=\"row\">\n                        <div className=\"col s12 m8 l6 offset-m2 offset-l3\">\n                            <div className=\"card round-card\">\n                                <div className=\"card-content\">\n                                    <p>\n                                        No Such Order Found.\n                                        Please Verify your credentials and order id\n                                    </p>\n                                    <NavLink to=\"/store\"> <div className=\"btn dark_btn\">Shop Now</div> </NavLink>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n                </Delayed>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    // console.log(state);\n    return {\n        \n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        requestCancellationAction: (orderID, cancellationMessage)=>{dispatch(requestCancellationAction(orderID, cancellationMessage))},\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withRouter\n)(Order)\n","export const requestCancellationAction = (orderId, cancellationMessage)=>{\n    console.log('rqCan dispatch', orderId, cancellationMessage);\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        console.log('in in dispatch', orderId, cancellationMessage);\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        console.log('authuid', authuid);\n        firestore.collection('users').doc(authuid).collection('orders').doc(orderId).get()\n        .then(snap=>{\n            console.log('got snap',snap);\n            var {tracking} = snap.data();\n            tracking.unshift({ title: 'Cancellation Requested', updateTime: new Date() });\n            console.log('tracking',tracking);\n            console.log(orderId, cancellationMessage);\n            return firestore.collection('users').doc(authuid).collection('orders').doc(orderId).update({\n                tracking,\n                status: \"Cancellation Requested\",\n                cancellationMessage\n            })\n        })\n        .then(()=>{\n            console.log('success added');\n        })\n        .catch((err)=>{console.log('err=>',err.message)});\n\n    }\n    // return (dispatch, getState, {getFirestore, getFirebase})=>{\n        // console.log('in in dispatch', orderId, cancellationMessage);\n        // return dispatch({type:'akjsdf'});\n    // }\n}","export const addAddressAction = (newAddress)=>{\n    console.log('addAddressAction')\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('users').doc(authuid).collection('addresses').add({...newAddress, createdAt: new Date()})\n        .then(()=>{\n            console.log('newAddress added');\n        })\n        .catch((err)=>{console.log('err=>',err.message)});\n\n    }\n}\n\nexport const removeAddressAction = (addressid)=>{\n    console.log('addAddressAction')\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('users').doc(authuid).collection('addresses').doc(addressid).delete()\n        .then(()=>{\n            console.log('address removed');\n        })\n        .catch((err)=>{console.log('err=>',err.message)});\n\n    }\n}\n\nexport const addCardAction = (newCard)=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('users').doc(authuid).collection('cards').add({...newCard, createdAt: new Date()})\n        .then(()=>{ console.log('new card added') })\n        .catch((err)=>{ console.log('err=>', err.message) })\n    }\n}\n\nexport const removeCardAction = (cardid)=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firestore = getFirestore();\n        const authuid = getState().firebase.auth.uid;\n        firestore.collection('users').doc(authuid).collection('cards').doc(cardid).delete()\n        .then(()=>{ console.log('card removed') })\n        .catch((err)=>{ console.log('err=>', err.message) })\n    }\n}","import React, { useEffect, Fragment } from 'react'\nimport { compose } from 'redux'\nimport { connect, useSelector } from 'react-redux'\nimport { withRouter, useHistory, NavLink } from 'react-router-dom'\nimport { addCardAction, removeCardAction, addAddressAction, removeAddressAction } from '../store/actions/accountActions'\nimport { useFirestoreConnect } from 'react-redux-firebase'\nimport Delayed from '../utils/Delayed'\n\nfunction Account(props){\n    const { addCard, removeCard, addAddress, removeAddress } = props;\n    const authuid = useSelector(state=>state.firebase.auth.uid) || 'default';\n    const profile = useSelector(state=>state.firebase.profile) || {};\n    const history = useHistory();\n    useEffect(()=>{\n        if(!authuid || authuid == 'default'){\n            setTimeout(()=>{\n                history.push('/login');\n            },2000);\n        }\n    },[authuid])\n\n    const AccountPageJSX = (authuid && authuid!='default')?(\n        <Fragment>\n            <div className=\"row\">\n                <div className=\"col s12 m8 l6 offset-m2 offset-l3\">\n                    <div className=\"card round-card\">\n                    <div className=\"cart-title\"> <h6 className=\"center primary-green-dark-text\"><span className=\"heavy_text\">Account</span> Details:</h6> </div>\n                    <div className=\"card-content\">\n                    <table> \n                        <tbody>\n                            <tr><td>First Name:</td><th>{profile.firstName}</th></tr>\n                            <tr><td>Last Name:</td><th>{profile.lastName}</th></tr>\n                        </tbody>\n                    </table>\n                    </div>\n                    </div>\n                </div>\n                <div className=\"col s12 m6 l6\">\n                    <div className=\"card round-card\">\n                    <div className=\"cart-title\"> <h6 className=\"center primary-green-dark-text\">Manage <span className=\"heavy_text\">Addresses</span> :</h6> </div>\n                    <div className=\"card-content center\">\n                        <NavLink to=\"/account/addresses\">\n                            <div className=\"btn dark_btn\">Manage Addresses</div>\n                        </NavLink>\n                    </div>\n                    </div>\n                </div>\n                <div className=\"col s12 m6 l6\">\n                    <div className=\"card round-card\">\n                    <div className=\"cart-title\"> <h6 className=\"center primary-green-dark-text\">Manage <span className=\"heavy_text\">Payments</span> :</h6> </div>\n                    <div className=\"card-content center\">\n                        <NavLink to=\"/account/payments\">\n                            <div className=\"btn dark_btn\">Manage Payments</div>\n                        </NavLink>\n                    </div>\n                    </div>\n                </div>\n                <div className=\"col s12 m6 l6\">\n                    <div className=\"card round-card\">\n                    <div className=\"cart-title\"> <h6 className=\"center primary-green-dark-text\">Manage <span className=\"heavy_text\">Orders</span> :</h6> </div>\n                    <div className=\"card-content center\">\n                        <NavLink to=\"/account/orders\">\n                            <div className=\"btn dark_btn\">Manage Orders</div>\n                        </NavLink>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    ):(null)\n\n    return (\n        <div className=\"Account Page\" >\n            <div className=\"container\">\n                {(!authuid||authuid=='default')?(\n                    <div className=\"row\">\n                    <div className=\"col s12 m6 l6 offset-m2 offset-l2\">\n                    <div className=\"card round-card\">\n                    <div className=\"card-content center\">\n                    <h6>Please <span className=\"heavy_text primary-green-dark-text\">SignIn</span> to Continue</h6>\n                    </div>\n                    </div>\n                    </div>\n                    </div>\n                ):(\n                    <Delayed waitBeforeShow={3000}>\n                        <Fragment>{AccountPageJSX}</Fragment>\n                    </Delayed>\n                )}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    // console.log(state);\n    return { \n\n    }\n}\n\nconst mapStateToDispatch = (dispatch) =>{\n    return {\n        addCard: (newCard)=>{dispatch( addCardAction(newCard) )},\n        removeCard: (cardid)=>{dispatch( removeCardAction(cardid) )},\n        addAddress: (newAddress)=>{dispatch( addAddressAction(newAddress) )},\n        removeAddress: (cardid)=>{dispatch( removeAddressAction(cardid) )}\n        \n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapStateToDispatch),\n    withRouter\n)(Account)","import React, { useEffect, Fragment, useState } from 'react'\nimport { compose } from 'redux'\nimport { connect, useSelector } from 'react-redux'\nimport { withRouter, useHistory, NavLink } from 'react-router-dom'\nimport { addCardAction, removeCardAction, addAddressAction, removeAddressAction } from '../store/actions/accountActions'\nimport { useFirestoreConnect } from 'react-redux-firebase'\nimport Delayed from '../utils/Delayed'\nimport 'materialize-css';\nimport { Collapsible, CollapsibleItem, Icon, Modal, Button } from 'react-materialize';\nimport { v1 as uuid } from 'uuid';\n\nfunction AccountAddresses(props){\n    const { addCard, removeCard, addAddress, removeAddress } = props;\n    const authuid = useSelector(state=>state.firebase.auth.uid) || 'default';\n    const profile = useSelector(state=>state.firebase.profile) || {};\n    const history = useHistory();\n    useEffect(()=>{\n        if(!authuid || authuid == 'default'){\n            setTimeout(()=>{\n                history.push('/login');\n            },2000);\n        }\n    },[authuid])\n\n    useFirestoreConnect([{\n        collection: 'users',\n        doc: authuid,\n        subcollections: [{ collection: 'addresses' }],\n        storeAs: 'addresses'\n    }])\n\n    const addresses = useSelector( state => state.firestore.ordered.addresses)??[];\n    const initAddress = { fullName    :'', addressLine :'', city    :'', state   :'', country :'', pincode :'', phoneNo :'' };\n    const [newAddress, setNewAddress] = useState(initAddress);\n    const submitNewAddress = ()=>{\n        addAddress(newAddress);\n        setNewAddress(initAddress);\n    }\n    const submitRemoveAddress = (addressid)=>{\n        removeAddress(addressid);\n    }\n    \n    const addAddressBtn = (\n            <Modal\n              actions={[\n                (<Button flat modal=\"close\" node=\"button\" waves=\"red\">Close</Button>),\n                (<Button onClick={()=>{submitNewAddress(newAddress)}} flat modal=\"close\" node=\"button\" waves=\"green\">Add Address</Button>)\n              ]}\n              bottomSheet={false}\n              fixedFooter={true}\n              header=\"Add a new Address\"\n              id=\"addAddressModal\"\n              open={false}\n              options={{\n                dismissible: true,\n                endingTop: '16%',\n                inDuration: 250,\n                onCloseEnd: null,\n                onCloseStart: null,\n                onOpenEnd: null,\n                onOpenStart: null,\n                opacity: 0.5,\n                outDuration: 250,\n                preventScrolling: true,\n                startingTop: '55%'\n              }}\n            //   root={[object HTMLBodyElement]}\n              trigger={<div className=\"btn light_btn\"> <i className=\"material-icons\">add</i> <span>Add Address</span> </div>}\n            >\n                <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                        <i className=\"material-icons prefix\">account_circle</i>\n                        <input onChange={(e)=>{setNewAddress({...newAddress, fullName:e.target.value})}} value={newAddress.fullName} id=\"fullName-addAddress\" type=\"text\" required />\n                        <label  htmlFor=\"fullName-addAddress\">Full Name</label>\n                    </div>\n                    <div className=\"input-field col s12\">\n                        <i className=\"material-icons prefix\">location_city</i>\n                        <input onChange={(e)=>{setNewAddress({...newAddress, addressLine:e.target.value})}} value={newAddress.addressLine} id=\"addressLine-addAddress\" type=\"text\" required />\n                        <label htmlFor=\"addressLine-addAddress\">Address Line</label>\n                    </div>\n                    <div className=\"input-field col s6\">\n                        <i className=\"material-icons prefix\">location_on</i>\n                        <input onChange={(e)=>{setNewAddress({...newAddress, city:e.target.value})}} value={newAddress.city} id=\"city-addAddress\" type=\"text\" required />\n                        <label htmlFor=\"city-addAddress\">City</label>\n                    </div>\n                    <div className=\"input-field col s6\">\n                        <input onChange={(e)=>{setNewAddress({...newAddress, state:e.target.value})}} value={newAddress.state} id=\"state-addAddress\" type=\"text\" required />\n                        <label htmlFor=\"state-addAddress\">State</label>\n                    </div>\n                    <div className=\"input-field col s6\">\n                        <input onChange={(e)=>{setNewAddress({...newAddress, country:e.target.value})}} value={newAddress.country} id=\"country-addAddress\" type=\"text\" required />\n                        <label htmlFor=\"country-addAddress\">Country</label>\n                    </div>\n                    <div className=\"input-field col s6\">\n                        <input onChange={(e)=>{setNewAddress({...newAddress, pincode:e.target.value})}} value={newAddress.pincode} id=\"pincode-addAddress\" type=\"text\" required />\n                        <label htmlFor=\"pincode-addAddress\">Pincode</label>\n                    </div>\n                    <div className=\"input-field col s12\">\n                        <i className=\"material-icons prefix\">local_phone</i>\n                        <input onChange={(e)=>{setNewAddress({...newAddress, phoneNo:e.target.value})}} value={newAddress.phoneNo} id=\"phoneNo-addAddress\" type=\"text\" required />\n                        <label htmlFor=\"phoneNo-addAddress\">Phone Number</label>\n                    </div>\n                </div>\n            </Modal>\n    );\n\n    const AccountAddressesPageJSX = (authuid && authuid!='default')?(\n        <Fragment>\n            <div className=\"row\">\n                <div className=\"col s12 m8 offset-m2\">\n                    <div className=\"card round-card\">\n                        <div className=\"card-content\">\n                            <h6 className=\"center\">Wanna add <span className=\"heavy_text primary-green-dark-text\">more addresses ?</span></h6>\n                            <div className=\"center\"> {addAddressBtn} </div>\n                        </div>\n                    </div>\n                </div>\n                {(addresses && addresses.length>0)?(\n                    <Fragment>\n                        {addresses.map((each,index)=>(\n                        <Fragment key={uuid()} >\n                        <div className=\"col s12 m12 l6\">\n                            <div className=\"card round-card\">\n                                <div className=\"card-content\">\n                                    <table>\n                                        <tbody>\n                                            <tr><td className=\"no-wrap\">Name :</td><th>{each.fullName}</th></tr>\n                                            <tr><td className=\"no-wrap\">AddressLine :</td><th>{each.addressLine}</th></tr>\n                                            <tr><td className=\"no-wrap\">City :</td><th>{each.city}</th></tr>\n                                            <tr><td className=\"no-wrap\">State :</td><th>{each.state}</th></tr>\n                                            <tr><td className=\"no-wrap\">Country :</td><th>{each.country}</th></tr>\n                                            <tr><td className=\"no-wrap\">Pincode :</td><th>{each.pincode}</th></tr>\n                                        </tbody>\n                                    </table>\n                                    <div>\n                                        <div className=\"right\">\n                                        <Button\n                                          className=\"red\"\n                                          floating\n                                          icon={<Icon>delete</Icon>}\n                                          large\n                                          node=\"button\"\n                                          waves=\"light\"\n                                          onClick={()=>{submitRemoveAddress(each.id)}}\n                                        />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div> \n                        {((index+1)%2==0)?(<div className=\"col s12\"></div>):(null)}\n                        </Fragment>\n                        ))}\n                    </Fragment>\n                ):(\n                    <div className=\"col s12 m8 l6 offset-m2 offset-l4\">\n                    <div className=\"card round-card\">\n                        <div className=\"card-content\">\n                            <h6 className=\"center\" >No Addresses found</h6>\n                            <div className=\"center\">\n                                {addAddressBtn}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                )}\n            </div>\n        </Fragment>\n    ):(null)\n\n    return (\n        <div className=\"AccountAddresses Page\" >\n            <div className=\"container\">\n                {(!authuid||authuid=='default')?(\n                    <div className=\"row\">\n                    <div className=\"col s12 m6 l6 offset-m2 offset-l2\">\n                    <div className=\"card round-card\">\n                    <div className=\"card-content center\">\n                    <h6>Please <span className=\"heavy_text primary-green-dark-text\">SignIn</span> to Continue</h6>\n                    </div>\n                    </div>\n                    </div>\n                    </div>\n                ):(\n                    <Delayed waitBeforeShow={3000}>\n                        <Fragment>{AccountAddressesPageJSX}</Fragment>\n                    </Delayed>\n                )}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    // console.log(state);\n    return { \n\n    }\n}\n\nconst mapStateToDispatch = (dispatch) =>{\n    return {\n        addCard: (newCard)=>{dispatch( addCardAction(newCard) )},\n        removeCard: (cardid)=>{dispatch( removeCardAction(cardid) )},\n        addAddress: (newAddress)=>{dispatch( addAddressAction(newAddress) )},\n        removeAddress: (cardid)=>{dispatch( removeAddressAction(cardid) )}\n        \n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapStateToDispatch),\n    withRouter\n)(AccountAddresses)\n","import React, { useEffect, Fragment, useState } from 'react'\nimport { compose } from 'redux'\nimport { connect, useSelector } from 'react-redux'\nimport { withRouter, useHistory, NavLink } from 'react-router-dom'\nimport { addCardAction, removeCardAction, addAddressAction, removeAddressAction } from '../store/actions/accountActions'\nimport { useFirestoreConnect } from 'react-redux-firebase'\nimport Delayed from '../utils/Delayed'\nimport 'materialize-css';\nimport { Collapsible, CollapsibleItem, Icon, Modal, Button } from 'react-materialize';\nimport { v1 as uuid } from 'uuid';\n\nfunction AccountPayments(props){\n    const { addCard, removeCard, addAddress, removeAddress } = props;\n    const authuid = useSelector(state=>state.firebase.auth.uid) || 'default';\n    const profile = useSelector(state=>state.firebase.profile) || {};\n    const history = useHistory();\n    useEffect(()=>{\n        if(!authuid || authuid == 'default'){\n            setTimeout(()=>{\n                history.push('/login');\n            },2000);\n        }\n    },[authuid])\n\n    useFirestoreConnect([{\n        collection: 'users',\n        doc: authuid,\n        subcollections: [{ collection: 'cards' }],\n        storeAs: 'cards'\n    }])\n\n    const cards = useSelector( state => state.firestore.ordered.cards)??[];\n    var initCard = { cardHolderName: '', cardNo: '', cardExpMM: '', cardExpYY: '' };\n    const [newCard, setNewCard] = useState(initCard);\n    const submitNewCard = (newCard)=>{\n        addCard(newCard);\n        setNewCard(initCard);\n    } \n    const submitRemoveCard = (cardid)=>{\n        removeCard(cardid);\n    }\n    \n    const addCardBtn = (\n        <Modal\n        actions={[\n          (<Button flat modal=\"close\" node=\"button\" waves=\"red\">Close</Button>),\n          (<Button onClick={()=>{ submitNewCard(newCard) }} flat modal=\"close\" node=\"button\" waves=\"green\">Add Card</Button>)\n        ]}\n        bottomSheet={false}\n        fixedFooter={true}\n        header=\"Add a new Card\"\n        id=\"addAddressModal\"\n        open={false}\n        options={{\n          dismissible: true,\n          endingTop: '16%',\n          inDuration: 250,\n          onCloseEnd: null,\n          onCloseStart: null,\n          onOpenEnd: null,\n          onOpenStart: null,\n          opacity: 0.5,\n          outDuration: 250,\n          preventScrolling: true,\n          startingTop: '55%'\n        }}\n      //   root={[object HTMLBodyElement]}\n        trigger={<div className=\"btn light_btn\"> <i className=\"material-icons\">add</i> <span>Add Card</span> </div>}\n      >\n          <div className=\"row\">\n              <div className=\"input-field col s12\">\n                  <i className=\"material-icons prefix\">account_circle</i>\n                  <input onChange={(e)=>{setNewCard({...newCard, cardHolderName:e.target.value})}} value={newCard.cardHolderName} id=\"cardHolderName-addCard\" type=\"text\" required />\n                  <label  htmlFor=\"cardHolder-addCard\">Full Name</label>\n              </div>\n              <div className=\"input-field col s8\">\n                  <i className=\"material-icons prefix\">payment</i>\n                  <input onChange={(e)=>{setNewCard({...newCard, cardNo:e.target.value})}} value={newCard.cardNo} id=\"cardNo-addCard\" type=\"text\" required />\n                  <label htmlFor=\"cardNo-addCard\">Card Line</label>\n                  {/* <NumberFormat customInput={TextField} format=\"#### #### #### ####\"/> */}\n              </div>\n              <div className=\"input-field col s2\">\n                  <input onChange={(e)=>{setNewCard({...newCard, cardExpMM:e.target.value})}} value={newCard.cardExpMM} id=\"cardExpMM-addCard\" type=\"text\" required />\n                  <label htmlFor=\"cardExpMM-addCard\">MM</label>\n              </div>\n              <div className=\"input-field col s2\">\n                  <input onChange={(e)=>{setNewCard({...newCard, cardExpYY:e.target.value})}} value={newCard.cardExpYY} id=\"cardExpYY-addCard\" type=\"text\" required />\n                  <label htmlFor=\"cardExpYY-addCard\">YY</label>\n              </div>\n          </div>\n      </Modal>\n    );\n    const DebitCreditCardsJSX = (authuid && authuid !='default')?(\n        <div className=\"row\">\n                <div className=\"s12\">\n                    <h5 className=\"center heavy_text primary-green-dark-text\"> <Icon>payments</Icon> Credit/Debit Cards</h5>\n                </div>\n                <div className=\"col s12 m8 offset-m2\">\n                    <div className=\"card round-card\">\n                        <div className=\"card-content\">\n                            <h6 className=\"center\">Wanna add <span className=\"heavy_text primary-green-dark-text\">more cards ?</span></h6>\n                            <div className=\"center\"> {addCardBtn} </div>\n                        </div>\n                    </div>\n                </div>\n                {(cards && cards.length>0)?(\n                    <Fragment>\n                        {cards.map((each,index)=>(\n                        <Fragment key={uuid()} >\n                        <div className=\"col s12 m12 l6\">\n                            <div className=\"card round-card\">\n                                <div className=\"card-content\">\n                                    <table>\n                                        <tbody>\n                                            <tr><td className=\"no-wrap\">Card Holder :</td><th>{each.cardHolderName}</th></tr>\n                                            <tr><td className=\"no-wrap\">Card Number :</td><th>{'XXXX XXXX XXXX '+each.cardNo.slice(12)}</th></tr>\n                                            <tr><td className=\"no-wrap\">Card Expiry :</td><th>{each.cardExpMM+'/'+each.cardExpYY}</th></tr>\n                                        </tbody>\n                                    </table>\n                                    <div>\n                                        <div className=\"right\">\n                                        <Button\n                                          className=\"red\"\n                                          floating\n                                          icon={<Icon>delete</Icon>}\n                                          large\n                                          node=\"button\"\n                                          waves=\"light\"\n                                          onClick={()=>{submitRemoveCard(each.id)}}\n                                        />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div> \n                        {((index+1)%2==0)?(<div className=\"col s12\"></div>):(null)}\n                        </Fragment>\n                        ))}\n                    </Fragment>\n                ):(\n                    <div className=\"col s12 m8 l6 offset-m2 offset-l4\">\n                    <div className=\"card round-card\">\n                        <div className=\"card-content\">\n                            <h6 className=\"center\" >No Cards found</h6>\n                            <div className=\"center\">\n                                {addCardBtn}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                )}\n            </div>\n    ):(null)\n    const AccountPaymentsPageJSX = (authuid && authuid!='default')?(\n        <Fragment>\n            <Collapsible accordion>\n              <CollapsibleItem\n                expanded={false}\n                header=\"Debit/Credit Cards\"\n                icon={<Icon>payments</Icon>}\n                node=\"div\"\n              >\n                {DebitCreditCardsJSX}\n              </CollapsibleItem>\n              <CollapsibleItem\n                expanded={false}\n                header=\"PayPal\"\n                icon={<Icon>place</Icon>}\n                node=\"div\"\n              >\n                Paypal!!! COMING SOON!\n              </CollapsibleItem>\n              <CollapsibleItem\n                expanded={false}\n                header=\"Paytm\"\n                icon={<Icon>place</Icon>}\n                node=\"div\"\n              >\n                Paytm!!! COMING SOON!\n              </CollapsibleItem>\n              <CollapsibleItem\n                expanded={false}\n                header=\"CryptoCurrencies\"\n                icon={<Icon>whatshot</Icon>}\n                node=\"div\"\n              >\n                CryptoCurrencies!! Comming Soon !!\n              </CollapsibleItem>\n            </Collapsible>\n        </Fragment>\n    ):(null)\n\n    return (\n        <div className=\"AccountPayments Page\" >\n            <div className=\"container\">\n                {(!authuid||authuid=='default')?(\n                    <div className=\"row\">\n                    <div className=\"col s12 m6 l6 offset-m2 offset-l2\">\n                    <div className=\"card round-card\">\n                    <div className=\"card-content center\">\n                    <h6>Please <span className=\"heavy_text primary-green-dark-text\">SignIn</span> to Continue</h6>\n                    </div>\n                    </div>\n                    </div>\n                    </div>\n                ):(\n                    <Delayed waitBeforeShow={3000}>\n                        <Fragment>{AccountPaymentsPageJSX}</Fragment>\n                    </Delayed>\n                )}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    // console.log(state);\n    return { \n\n    }\n}\n\nconst mapStateToDispatch = (dispatch) =>{\n    return {\n        addCard: (newCard)=>{dispatch( addCardAction(newCard) )},\n        removeCard: (cardid)=>{dispatch( removeCardAction(cardid) )},\n        addAddress: (newAddress)=>{dispatch( addAddressAction(newAddress) )},\n        removeAddress: (cardid)=>{dispatch( removeAddressAction(cardid) )}\n        \n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapStateToDispatch),\n    withRouter\n)(AccountPayments)\n","import React from 'react'\nimport notFoundImg from '../assets/img/page_not_found.png'\n\nfunction Err404() {\n    return (\n        <div className=\"Err404 Page\">\n        <div className=\"row\">\n        <div className=\"col s12 m8 l6 offset-m2 offset-l3\">\n        <div className=\"card round-card\">\n        <div className=\"card-content\">\n        <div className=\"center\">\n            <div className=\"image-container\">\n            <img src={notFoundImg} alt=\"\" srcset=\"\"/>\n            </div>\n            <h4 className=\"center head\">Err!! Page Not Found</h4>\n        </div>\n        </div>\n        </div>\n        </div>\n        </div>\n        </div>\n    )\n}\n\nexport default Err404\n","import React from 'react'\nimport logo from '../assets/img/digi-logo.jpg'\n\nfunction Loading() {\n    return (\n        <div className=\"LoadingFullScreen\">\n            <div className=\"logo-container\">\n                <img src={logo} />\n            </div>\n            <h5 className=\"heavy_text center\">Welcome to </h5>\n            <h4 className=\"heavy_text center\">Digizup Store</h4>\n        </div>\n    )\n}\n\nexport default Loading\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { compose } from 'redux';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport logo from '../assets/img/digi-logo.jpg'\n\nfunction AppFooter(props) {\n    const categories = useSelector(state=>state.firestore.ordered.categories ?? []);\n    const link= (to,text) => \n    <div className=\"footer-btn-container\">\n        <NavLink className=\"btn\" exact to={to}>{text}</NavLink>\n    </div>\n\n    return (\n        <div className=\"AppFooter\" >\n            <div className=\"footer-top primary-green-light-bg\">\n                <div className=\"logo-container\">\n                    <img src={logo} />\n                </div>\n                <div className=\"row-flex-center flex-wrap\">\n                    {link('/','Home')}\n                    {link('/store','Store')}\n                    {link('/cart','Cart')}\n                </div>\n                <div className=\"row-flex-center flex-wrap\">\n                    {categories && _.orderBy(categories,['title'],['asc']).map(each=>link(`/store/${each.urlid}`,each.title))}\n                </div>\n            </div>\n            <div className=\"footer-bottom primary-green-dark-bg\">\n                <h4 className=\"center white-text\">\n                    <span className=\"light_text\">Powered By</span> <a target=\"_blank\" href=\"https://digizup.com\" className=\"white-text\">Digizup</a><sup><span className=\"light_text\">&copy; 2020</span></sup>\n                </h4>\n            </div>\n        </div>\n    )\n}\n\nexport default compose(\n    withRouter\n)(AppFooter)\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './views/Home';\nimport About from './views/About';\nimport Cart from './views/Cart';\nimport Checkout from './views/Checkout';\nimport Store from './views/Store';\nimport Navbar from './components/Navbar';\nimport Login from './views/Login';\nimport Signup from './views/Signup';\nimport Product from './views/Product';\nimport Test from './views/Test';\nimport ScrollToTop from './utils/ScrollToTop';\nimport Category from './views/Category';\nimport Orders from './views/Orders';\nimport Order from './views/Order';\nimport Account from './views/Account';\nimport AccountAddresses from './views/AccountAddresses';\nimport AccountPayments from './views/AccountPayments';\nimport Err404 from './views/Err404';\nimport Loading from './components/Loading';\nimport LoadingFullScreen from './components/LoadingFullScreen';\nimport AppFooter from './components/AppFooter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <ScrollToTop >\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/about\"> <About /> </Route>\n            <Route exact path=\"/store\"> <Store /> </Route>\n            <Route exact path=\"/store/:category\"> <Category /> </Route>\n            <Route exact path=\"/cart\"> <Cart /> </Route>\n            <Route exact path=\"/checkout\"> <Checkout /> </Route>\n            <Route exact path=\"/login\"> <Login /> </Route>\n            <Route exact path=\"/signup\"> <Signup /> </Route>\n            <Route exact path=\"/product/:productid\"> <Product /> </Route>\n            <Route exact path=\"/account\"> <Account /> </Route>          \n            <Route exact path=\"/account/orders\"> <Orders /> </Route>          \n            <Route exact path=\"/account/order/:orderid\"> <Order /> </Route>          \n            <Route exact path=\"/account/addresses\"> <AccountAddresses /> </Route>          \n            <Route exact path=\"/account/payments\"> <AccountPayments /> </Route>          \n            {/* <Route exact path=\"/loading\"> <Loading /> </Route>           */}\n            {/* <Route exact path=\"/loadingfull\"> <LoadingFullScreen /> </Route>           */}\n            {/* <Route exact path=\"/err404\"> <Err404 /> </Route>           */}\n            <Route exact path=\"/\"> <Home /> </Route>\n            <Route component={Err404} />\n          </Switch>\n          <AppFooter />\n        </ScrollToTop>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App; ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authMessage: null,\n    authError: null\n}\n\nexport const authReducer = (state=initState, action)=>{\n    // console.log(action?.type);\n    switch(action.type){\n        case 'LOGIN_SUCCESS': return {authMessage: action.type, authError: null};\n        case 'LOGIN_ERROR': return {authMessage: action.type, authError: action.err};\n        case 'LOGOUT_SUCCESS': return {authMessage: action.type, authError: null};\n        case 'LOGOUT_ERROR': return {authMessage: action.type, authError: action.err};\n        case 'SIGNUP_SUCCESS': return {authMessage: action.type, authError: null};\n        case 'SIGNUP_ERROR': return {authMessage: action.type, authError: action.err};\n        case 'AUTH_MESSAGE_RESET': return initState;\n        default: return state;\n    }\n}","const initState={\n    searchTerm: null,\n    searchResults: null,\n    searchError: null,\n    searchMessage: null\n}\n\nexport const searchReducer = (state = initState, action)=>{\n    // console.log(action?.type);\n    switch(action.type){\n        case 'SEARCH_IN_PROGRESS': \n            return {searchTerm: action.searchTerm, searchResults: null, searchError:null, searchMessage: action.type };\n        case 'SEARCH_RESULTS_FETCHED': \n            return {searchTerm: action.searchTerm, searchResults: action.searchResults, searchError:null, searchMessage: action.type };\n        case 'SEARCH_RESULTS_NOT_FOUND': \n            return {searchTerm: action.searchTerm, searchResults: null, searchError:action.err, searchMessage: action.type };\n        case 'SEARCH_RESET' :\n            return {...initState, searchMessage:action.type};\n        default: return state;\n    }\n}","const initState ={\n    cartCount:0,\n    cartMessage: null\n}\n\nexport const cartUpdateReducer = (state = initState, action)=>{\n    // console.log(action.type);\n    switch(action.type){\n        case 'CART_UPDATING': return {...state, cartMessage:action.type};\n        case 'CART_UPDATED': return {...state, cartMessage:action.type};\n        case 'CART_ADDED': return {...state, cartMessage:action.type};\n        case 'CART_MESSAGE_RESET': return {...state,cartMessage:null};\n        default: return state;\n    }\n}\n\n","import { combineReducers } from \"redux\"\nimport { firebaseReducer } from \"react-redux-firebase\"\nimport { firestoreReducer } from \"redux-firestore\"\nimport { authReducer } from \"./authReducer\"\nimport { searchReducer } from \"./searchReducer\"\nimport { cartUpdateReducer } from \"./cartUpdateReducer\"\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    search: searchReducer,\n    cartUpdate: cartUpdateReducer,\n    firebase: firebaseReducer,\n    firestore: firestoreReducer\n})\n\nexport default rootReducer","//importing defaults\n//----------------------------------------------------------\nimport React, { Children } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//importing 'redux': Redux Store\n//createStore: create our redux store\n//applyMiddleware: extend Redux with custom functionality\nimport { createStore, applyMiddleware, compose } from 'redux';\n \n//importing 'react-redux': binding layer between the store and the dom\n//Provider: makes our store available to be used in our components\nimport { Provider, useSelector } from \"react-redux\";\n// import { Provider } from \"react-redux\";\n//----------------------------------------------------------\n\n\n//Reducers: handles the store opertations and data mutations\n//import rootReducer \nimport  rootReducer from './store/reducers/rootReducer';\n\n//import thunk\n//thunk: is a middleware that allows us to return a function instead of an action-creator\n//these asynchronous funcitons send a call do the processing and then dispatch a synchronous action \nimport thunk from 'redux-thunk';\n\n\n//firebase\n//----------------------------------------------------------\n//importing Firebase \n\n\n//importing react-redux-firebase\n//ReactReduxFirebaseProvider: lets rrfProps(store content from firebase) be available to our redux store\n//getFirebase: used to manipulate data in firebase\n//isLoaded: hepler funciton, detects if data from redux state has been loaded or not\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded, firebaseConnect  } from \"react-redux-firebase\";\n\n//importing redux-firestore\n//createFirestoreInstance: in v3.0.0 version this is introduced that is passed in rrfProps\n//getFirestore: used to manipulate data in firestore\n//reduxFirestore: v2.0.0 way to firebase-store-enhancer\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\n\nimport firebase from \"./config/FirebaseConfig\";\nimport LoadingFullScreen from './components/LoadingFullScreen';\n//----------------------------------------------------------\n\n//store\n//----------------------------------------------------------\n//create store\n//createStore( reducer, store-enhancer ) \n//[OR]  createStore( reducer, compose(...multiple-store-enhancers) ) \n//compose: use to apply multiple store enhancer. (programmatic utility)\n//thunk.withExtraArgument(object of store-enhacer): adds these encapsulated  store-enhancers as an extra-argument to the reducer\n//reduxFirestore(firebase): adds store-enhancer of Firestore \n\nconst store = createStore(\n  rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(firebase)\n  )\n);\n\n//react-redux-firebase-configuration of store\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true\n}\n//react-redux-firebase-props the actual contents of the store from firebase\nconst rrfProps = {\n  firebase,\n  config:   rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n//----------------------------------------------------------\n\n//wait to load\n//----------------------------------------------------------\nconst AuthIsLoaded = ( {children} )=>{\n  const auth = useSelector( state=>state.firebase.auth );\n  if(!isLoaded(auth)) return (<LoadingFullScreen /> );\n  return children;\n}\n//----------------------------------------------------------\n\n//we are rendering our web app accordingly to the dom\n//----------------------------------------------------------\nReactDOM.render(\n  \n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>\n\n  ,document.getElementById('root')\n);\n//----------------------------------------------------------\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();","module.exports = __webpack_public_path__ + \"static/media/digi-logo-small.9515b42b.png\";","module.exports = __webpack_public_path__ + \"static/media/page_not_found.bdc71293.png\";","module.exports = __webpack_public_path__ + \"static/media/digi-logo.9f0db891.jpg\";"],"sourceRoot":""}