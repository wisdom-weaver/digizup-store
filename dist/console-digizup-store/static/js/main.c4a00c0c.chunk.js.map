{"version":3,"sources":["utils/ScrollToTop.js","store/reducers/authReducer.js","store/actions/authActions.js","store/actions/searchActions.js","components/Navbar.js","views/Store.js","views/Login.js","utils/Delayed.js","views/Signup.js","views/Product.js","components/InfoCard.js","views/Home.js","views/AddProduct.js","store/actions/productAction.js","components/ProductSearchCard.js","views/SearchProduct.js","views/SearchOrder.js","utils/utils.js","views/Order.js","store/actions/orderActions.js","store/actions/categoryActions.js","views/EditCategory.js","views/AddCategory.js","views/EditProduct.js","App.js","serviceWorker.js","store/reducers/searchReducer.js","store/reducers/productReducer.js","store/reducers/categoryReducer.js","store/reducers/rootReducer.js","config/FirebaseConfig.js","index.js"],"names":["withRouter","history","children","useEffect","unlisten","listen","window","scrollTo","initState","authMessage","authLog","authError","notAdminLogoutAction","dispatch","getState","getFirebase","getFirestore","auth","signOut","then","type","catch","err","message","authMessageResetAction","searchAction","searchTerm","category","a","firestore","keywords","split","concat","map","each","toLowerCase","console","log","collection","where","get","snaps","empty","forEach","doc","id","compose","connect","state","firebase","profile","logout","search","searchReset","props","useState","categories","useHistory","useSelector","uid","ordered","cart","menuOpenState","setMenuOpenState","setCategory","setSearchTerm","query","queryString","parse","location","innerWidth","setWidth","innerHeight","setHeight","updateWidthAndHeight","$","css","setTimeout","click","addEventListener","removeEventListener","submitSearch","push","searchbar_inner_html","eachcategory","key","uuid","onClick","title","slice","length","className","value","onChange","e","target","onKeyDown","keyCode","overlayLink","to","link","exact","isAdmin","firstName","accordion","expanded","header","lastName","icon","node","products","isLoaded","searchError","searchResults","searchMessage","product","login","credentials","signInWithEmailAndPassword","email","password","checkIsAdmin","setInterval","clearInterval","loginAction","authMessageReset","setEmail","setPassword","emailBlur","setEmailBlur","passwordBlur","setPasswordBlur","emailValidation","passwordValidation","test","setValid","setInvalid","field","errorMessage","removeClass","addClass","html","onSubmit","preventDefault","htmlFor","onBlur","Delayed","hidden","setState","this","waitBeforeShow","React","Component","signup","newUser","createUserWithEmailAndPassword","resp","user","set","initials","signupAction","signUpExists","update","signUpExistsAction","queryStringParse","signUpKey","setFirstName","setLastName","confirmPassword","setConfirmPassword","emailExists","setEmailExists","passwordExists","setPasswordExists","firstNameBlur","setFirstNameBlur","lastNameBlur","setLastNameBlur","confirmPasswordBlur","setConfirmPasswordBlur","emailExistsBlur","setEmailExistsBlur","passwordExistsBlur","setPasswordExistsBlur","useFirestoreConnect","signupKeyCol","signUpAuthkey","setSignUpAuthKey","allValid","allValidExists","setAuthLog","firstNameValidation","lastNameValidation","confirmPasswordValidation","emailExistsValidation","passwordExistsValidation","renderLog","SignUpFormJSX","SignUpExistsFormJSX","SignUpPageJSX","popout","style","productid","match","params","data","InfoCard","HomePageJSX","productMessage","productUpdates","productError","productLog","addProductAction","newProduct","add","createdAt","Date","productUpdateReset","setProduct","stage","setStage","rerender","setRerender","productName","setProductName","price","setPrice","images","setImages","description","setDescription","features","setFeatures","specs","specKey","specValue","setSpecs","setCategories","tags","setTags","hasOptions","setHasOptions","inStock","setInStock","optionCategories","setOptionCategories","optionCategoriesObject","setOptionCategoriesObject","productOptions","setProductOptions","local","index","Object","keys","includes","optionName","optionFeatures","optionSpecs","optionTags","tempCat","setTempCat","tempTag","setTempTag","tempOpCat","setTempOpCat","Con","arA","arB","arC","eachA","eachB","getOptionsIndexAr","lenar","arARRAY","Array","fill","last","pop","concatRec","C","befLast","submitProduct","initForm","name","readOnly","checked","Icon","descriptionForm","addFeaturesForm","feature","s","label","defaultValue","filter","eachIndex","addSpecsForm","spec","addCategoriesAndTagsForm","close","options","trim","placeholder","tag","pro","localProductOptions","eachOp","isActive","parseFloat","getProductJSON","hasOptionsForm","opCat","sort","opCatOb","eachElem","elemIndex","filterindex","eachElemFeature","eachElemFeatureIndex","eachElemSpec","eachElemSpecIndex","localopcategories","eachcat","catlen","productOptionsKeys","join","productFullName","startProductOptions","productOptionsForm","productOption","string","splice","image","imIndex","eaindex","tagindex","doesnotHasOptionsForm","productJSON","JSON","stringify","formStage","form","show","btnTitle","href","updateProductInstock","option","updateOb","optionsKeys","ProductCardWithOptionsJSX","optionk","parseInt","ProductCardWithoutOptionsJSX","SearchProduct","initQuery","productsQuery","setProductsQuery","productsLog","setProductsLog","productSearchTerm","setProductSearchTerm","searchBar","submitProductSearch","ProductsViewJSX","queryPar","soCat","searchOrderCategory","soTerm","searchOrderTerm","setSearchOrderCategory","setSearchOrderTerm","searchCategories","setLog","getQuery","setQuery","storeAs","ordersForAdmins","orders","setOrders","_","orderBy","orderSearchFn","updateHistoryLink","resetHistoryLink","seachDropdown","alignment","autoTrigger","closeOnClick","constrainWidth","container","coverTrigger","hover","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","trigger","utilityButtonsArea","OrderViewJSX","order","isOpen","moment","toDate","format","status","priceFormat","formatted","Intl","NumberFormat","currency","symbol","integer","decimal","updateOrderAction","docid","oaid","oaCollection","setOrder","localStatus","setLocalStatus","localTrack","setLocalTrack","addTrack","updateOrder","tracking","updateTime","updatedAt","cartJSX","productPrice","cartQty","reduce","ac","accountJSX","consumeruid","orderid","addressJSX","address","fullName","addressLine","city","country","pincode","phoneNo","paymentType","statusJSX","multiple","classes","dropdownOptions","disabled","eaStatus","trackingJSX","track","addCategoryAction","addCategory","categoryLogReset","updateCategory","updateCategoryAction","deleteCategory","delete","deleteCategoryAction","categoryReducer","categoryid","categoryMessage","categoryCol","categoriesLog","setCategoriesLog","categoryBanner","setCategoryBanner","banner","updateCategoryFn","deleteCategoryFn","categoryJSX","urlid","eachBindex","productLink","ea","newCategoryName","setNewCategoryName","newCategoryUrlid","setNewCategoryUrlid","submitNewCategory","setProductAction","updateProductPriceFn","updateProductPrice","editProductCol","loadingLog","setLoadingLog","priceAdjustmentJSX","val","initAction","authuid","path","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","categoryLog","cateogryError","rootReducer","combineReducers","action","categoryError","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","ReactDOM","render","document","getElementById","URL","process","origin","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"sPAgBeA,mBAbf,YAA6C,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAU9B,OATAC,qBAAU,WACR,IAAMC,EAAWH,EAAQI,QAAO,WAC9BC,OAAOC,SAAS,EAAG,MAErB,OAAO,WACLH,OAED,IAEI,kBAAC,WAAD,KAAWF,M,0GCbdM,EAAY,CACdC,YAAa,KACbC,QAAS,KACTC,UAAW,MC2EFC,EAAuB,WAEhC,OAAO,SAACC,EAAUC,EAAX,GAAqD,IAA/BC,EAA8B,EAA9BA,YAA8B,EAAjBC,aAEtC,OADiBD,IACDE,OAAOC,UACtBC,MAAK,WAEFN,EAAS,CAACO,KAAK,gCAElBC,OAAM,SAAAC,GACHT,EAAS,CACLO,KAAM,yBACNE,IAAKA,EAAIC,eA+CXC,EAAyB,WACnC,OAAO,SAACX,EAAUC,EAAX,GAAmD,EAA7BC,YAA6B,EAAhBC,aACtC,OAAOH,EAAS,CAAEO,KAAK,yB,4CCzIlBK,EAAe,SAACC,EAAYC,GAErC,8CAAO,WAAOd,EAAUC,EAAjB,0BAAAc,EAAA,yDAA4BZ,EAA5B,EAA4BA,aAA5B,EAA0CD,YAEvCc,EAAYb,IAGlBc,GADIA,EAAWJ,EAAWK,MAAM,wBACZC,OAAQF,EAASG,KAAI,SAAAC,GAAI,OAAEA,EAAKC,kBACpDC,QAAQC,IAAI,aAAcP,GACX,YAAZH,EAPA,iCAQqBE,EAAUS,WAAW,YAAYC,MAAM,OAAO,qBAAqBT,GAAUU,MARlG,QAQOC,EARP,QASUC,OAAON,QAAQC,IAAI,SAC5BI,EAAME,SAAQ,SAAAC,GACVR,QAAQC,IAAIO,EAAIC,OAXrB,2BAakB,SAAZlB,EAbN,kCAcqBE,EAAUS,WAAW,SAASC,MAAM,OAAO,qBAAqBT,GAAUU,MAd/F,SAcOC,EAdP,QAeUC,OAAON,QAAQC,IAAI,SAC5BI,EAAME,SAAQ,SAAAC,GACVR,QAAQC,IAAIO,EAAIC,OAjBrB,oEAAP,2D,iBCmOJ,IAgBeC,cACbC,aAjBsB,SAACC,GAEvB,MAAO,CACL/B,KAAM+B,EAAMC,SAAShC,KACrBiC,QAASF,EAAMC,SAASC,YAID,SAACrC,GAC1B,MAAO,CACLsC,OAAQ,WAAMtC,GFnLP,SAACA,EAAUC,EAAX,GAAqD,IAA/BC,EAA8B,EAA9BA,YAEzB,OAFuD,EAAjBC,aACrBD,IACDE,OAAOC,UACtBC,MAAK,WAEFN,EAAS,CAACO,KAAK,sBAElBC,OAAM,SAAAC,GACHT,EAAS,CACLO,KAAM,eACNE,IAAKA,EAAIC,iBE0KrB6B,OAAQ,SAAC1B,EAAYC,GAAad,EAAUY,EAAaC,EAAWC,KACpE0B,YAAa,WAAMxC,GDrNZ,SAACA,EAAUC,EAAX,GACH,OADsD,EAA7BC,YAA6B,EAAhBC,aAC/BH,EAAS,CAAEO,KAAK,yBC0N7BpB,IAFa8C,EAnOf,SAAgBQ,GAAQ,IAAD,EACXrC,EAA6CqC,EAA7CrC,KAAKiC,EAAwCI,EAAxCJ,QAASC,EAA+BG,EAA/BH,OAAgBE,GAAeC,EAAvBF,OAAuBE,EAAfD,aADnB,EAEiBE,mBAAS,MAF1B,mBAEZC,EAFY,KAIbvD,GAJa,KAIHwD,eAJG,EAKcF,mBAAS,GALvB,gCAOHG,aAAY,SAAAV,GAAK,OAAGA,EAAMC,SAAShC,KAAK0C,OACxCD,aAAY,SAAAV,GAAK,OAAGA,EAAMC,SAASC,WAErCQ,aAAY,SAAAV,GAAK,OAAGA,EAAMnB,UAAU+B,QAAQC,QAEhBN,oBAAS,IAZhC,mBAYZO,EAZY,KAYGC,EAZH,OAaaR,mBAAS,YAbtB,mBAaZ5B,EAbY,KAaFqC,EAbE,OAcgBT,mBAAS,IAdzB,mBAcZ7B,EAdY,KAcDuC,EAdC,KAefC,EAAQC,IAAYC,MAAZ,OAAkBd,QAAlB,IAAkBA,GAAlB,UAAkBA,EAAOe,gBAAzB,aAAkB,EAAiBjB,QAC/CjD,qBAAU,WAAK,IAAD,EACZ8D,EAAa,iBAACC,QAAD,IAACA,OAAD,EAACA,EAAOxC,kBAAR,QAAsB,MACnC,QAACwC,QAAD,IAACA,OAAD,EAACA,EAAOxC,aACVvB,qBAAU,WAAK,IAAD,EACZ6D,EAAW,iBAACE,QAAD,IAACA,OAAD,EAACA,EAAOvC,gBAAR,QAAoB,cAC/B,QAACuC,QAAD,IAACA,OAAD,EAACA,EAAOvC,WArBS,MAuBO4B,mBAASjD,OAAOgE,YAvBvB,mBAuBLC,GAvBK,aAwBShB,mBAASjD,OAAOkE,aAxBzB,mBAwBJC,GAxBI,WA0CbC,EAAuB,WAC3BH,EAASjE,OAAOgE,YAChBG,EAAUnE,OAAOkE,cAGnBrE,qBAAU,WACR2D,GAnBAa,IAAE,cAAcC,IAAI,SAAU,QAC9BD,IAAE,sBAAsBC,IAAI,YAAa,kBACzCD,IAAE,YAAYC,IAAI,UAAW,OAI7BD,IAAE,sBAAsBC,IAAI,YAAa,qBACzCD,IAAE,YAAYC,IAAI,UAAW,KAC7BC,YAAW,WACTF,IAAE,cAAcC,IAAI,SAAU,QAC9B,QAUF,CAACd,IAEH3D,qBAAU,WAIR,OAHAwE,IAAE,QAAQG,OAAM,WAAM1C,QAAQC,IAAI,cAAe0B,GAAiB,MAClEY,IAAE,cAAcG,OAAM,WAAM1C,QAAQC,IAAI,cAAgB0B,GAAiB,MACzEzD,OAAOyE,iBAAiB,SAAUL,GAC3B,WACLpE,OAAO0E,oBAAoB,SAAUN,MAEvC,IAEF,IAAMO,EAAe,WACnB7C,QAAQC,IAAIV,EAAUD,GACtB2B,IACApD,EAAQiF,KAAK,qBAAqBxD,EAAW,cAAcC,IA6BvDwD,GA1BmB,OAAI3B,QAAJ,IAAIA,KAAYvB,KAAK,SAAAmD,GAAY,OAAK,uBAAGC,IAAKC,cAAQC,QAAS,WAAKvB,EAAW,OAACoB,QAAD,IAACA,OAAD,EAACA,EAAcI,SAAxD,OAAkEJ,QAAlE,IAAkEA,OAAlE,EAAkEA,EAAcI,UAE5I,WAkBwD7D,EAAS8D,MAAM,EAAE,IAAM9D,EAAS+D,OAOzF,yBAAKC,UAAU,iCACb,yBAAKA,UAAU,uBACf,2BACE9C,GAAG,cACHzB,KAAK,OACLwE,MAAOlE,EACPmE,SAAW,SAAAC,GAAC,OAAE7B,EAAc6B,EAAEC,OAAOH,QACrCI,UAAY,SAAAF,GAAmB,IAAXA,EAAEG,SAAYhB,OAEpC,uBAAGM,QAASN,EAAcU,UAAU,8BAApC,aAMEO,EAAc,SAACC,EAAIC,GAAL,OAAa,yBAAKT,UAAU,wBAAf,IAAuC,kBAAC,IAAD,CAASJ,QAAS,WAAKxB,GAAiB,IAAS4B,UAAU,cAAcU,OAAK,EAACF,GAAIA,GAAMC,KAGjK,OACI,yBAAKT,UAAU,UACb,6BACI,yBAAKA,UAAU,aACf,0BAAMJ,QAAS,WAAMxB,GAAkBD,KAEjCA,EAED,kBAAC,IAAD,CAAO6B,UAAU,cADjB,kBAAC,IAAD,CAAMA,UAAU,eAIrB,kBAAC,IAAD,CAASJ,QAAS,WAAKxB,GAAiB,IAASsC,OAAK,EAACF,GAAG,KACxD,0BAAMR,UAAU,gBAAhB,mBAKCR,GAGI,OAAJlE,QAAI,IAAJA,OAAA,EAAAA,EAAM0C,OAAN,OAAaT,QAAb,IAAaA,OAAb,EAAaA,EAASoD,SACrB,wBAAIX,UAAU,wCACZ,4BAAI,kBAAC,IAAD,CAASJ,QAAS,WAAKxB,GAAiB,IAAS4B,UAAU,sBAAsBQ,GAAG,YACxF,yBAAKR,UAAU,kBACb,uBAAGA,UAAU,SAAb,UACA,uBAAGA,UAAU,SAAb,OAAsBzC,QAAtB,IAAsBA,OAAtB,EAAsBA,EAASqD,eAKnC,wBAAIZ,UAAU,wCACZ,4BAAI,kBAAC,IAAD,CAASJ,QAAS,WAAKxB,GAAiB,IAAS4B,UAAU,gBAAgBQ,GAAG,UAA9E,UACJ,4BAAI,kBAAC,IAAD,CAASZ,QAAS,WAAKxB,GAAiB,IAAS4B,UAAU,iBAAiBQ,GAAG,WAA/E,aAOd,yBAAKR,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,yBAGb,kBAAC,cAAD,CAAaa,WAAS,IACnB,OAACvF,QAAD,IAACA,OAAD,EAACA,EAAM0C,KACR,kBAAC,kBAAD,CACE8C,UAAU,EACVC,OAAM,yBAAoBxD,EAAQqD,UAA5B,YAAyCrD,EAAQyD,UACvDC,KAAM,kBAAC,OAAD,oBACNC,KAAK,OAJP,WAQG,KACH,kBAAC,kBAAD,CACEJ,UAAU,EACVC,OAAO,UACPE,KAAM,kBAAC,OAAD,cACNC,KAAK,OAEJX,EAAY,cAAc,eAC1BA,EAAY,iBAAiB,kBAC7BA,EAAY,eAAe,iBAC3BA,EAAY,eAAgB,iBAE/B,kBAAC,kBAAD,CACEO,UAAU,EACVC,OAAO,UACPE,KAAM,kBAAC,OAAD,iBACNC,KAAK,OAEL,yBAAKlB,UAAU,wBAAf,IAAuC,kBAAC,IAAD,CAASJ,QAAS,WAAKxB,GAAiB,IAAS4B,UAAU,cAAcU,OAAK,EAACF,GAAG,KAAlF,aAMpC,OAAJlF,QAAI,IAAJA,OAAA,EAAAA,EAAM0C,MAAOT,EAAQoD,QAClB,6DAEE,yBAAKf,QAAS,WAAMxB,GAAiB,GAAQZ,KAAagD,GAAG,SAASR,UAAU,iBAAhF,WAGJ,yBAAKA,UAAU,4BACb,6BAAK,kBAAC,IAAD,CAASJ,QAAS,WAAKxB,GAAiB,IAASoC,GAAG,SAASR,UAAU,iBAAvE,UACL,6BAAK,kBAAC,IAAD,CAASJ,QAAS,WAAKxB,GAAiB,IAASoC,GAAG,UAAUR,UAAU,kBAAxE,aAMf,yBAAKJ,QAAS,WAAKxB,GAAiB,IAAS4B,UAAU,qBCzJtD7C,YACbC,aAjBsB,SAACC,GAEvB,MAAO,CACLI,OAAQJ,EAAMI,OACd0D,SAAU9D,EAAMnB,UAAU+B,QAAQkD,SAClCC,UAAU,MAIa,SAAClG,GAC1B,MAAO,CACLY,aAAc,SAACC,EAAYC,GAAad,EAAUY,EAAaC,EAAWC,KAC1E0B,YAAa,WAAMxC,GFrCZ,SAACA,EAAUC,EAAX,GACH,OADsD,EAA7BC,YAA6B,EAAhBC,aAC/BH,EAAS,CAAEO,KAAK,yBE0C7BpB,IAFa8C,EAzDf,SAAeQ,GAAQ,IAAD,MACZrD,EAAUwD,cACZS,EAAQC,IAAYC,MAAZ,OAAkBd,QAAlB,IAAkBA,GAAlB,UAAkBA,EAAOe,gBAAzB,aAAkB,EAAiBjB,QACzC1B,EAAU,iBAAEwC,QAAF,IAAEA,OAAF,EAAEA,EAAOxC,kBAAT,QAAuB,GACjCC,EAAQ,iBAAEuC,QAAF,IAAEA,OAAF,EAAEA,EAAOvC,gBAAT,QAAqB,MAE5ByB,EAAqCE,EAArCF,OAAQ3B,EAA6B6B,EAA7B7B,aAAc4B,EAAeC,EAAfD,YACtB2D,EAA6C5D,EAA7C4D,YAAaC,EAAgC7D,EAAhC6D,cAAeC,EAAiB9D,EAAjB8D,cAYnC,OAXA/G,qBAAU,WACRkD,IACiB,IAAd3B,EACDzB,EAAQiF,KAAK,cAEbzD,EAAaC,EAAWC,KAE1B,CAACD,EAAWC,IACdxB,qBAAU,WACRiC,QAAQC,IAAI,gBAAgB,CAAC6E,gBAAeF,cAAaC,oBACzD,CAACC,EAAcF,EAAaC,IAE1B,yBAAKtB,UAAU,cACX,yBAAKA,UAAU,gCAEZsB,GAAiBA,EAAchF,KAAI,SAAAkF,GAAO,OACzC,kBAAC,WAAD,SAKkB,4BAAjBD,EACE,2BAAIF,GAAmB,KAGR,sBAAjBE,EACE,yCAAoB,UCyEvC,IAeenE,eAfQ,SAACC,GACpB,MAAM,CACFtC,QAASsC,EAAM/B,KAAKP,QACpBD,YAAauC,EAAM/B,KAAKR,gBAKL,SAACI,GACxB,MAAO,CACHuG,MAAO,SAACC,GAAgBxG,EJvGL,SAACwG,GACxB,OAAO,SAACxG,EAAUC,EAAX,GAAsD,IAAhCC,EAA+B,EAA/BA,YAA+B,EAAlBC,aACrBD,IACRE,OAAOqG,2BACZD,EAAYE,MACZF,EAAYG,UAEXrG,MAAK,WACF,IAAIsG,EAAgBC,aAAY,WAAK,IAAD,EAC1BxE,EAAO,UAAGpC,IAAWmC,SAASC,eAAvB,QAAkC,GAC/Cd,QAAQC,IAAI,YAAYa,GACrBA,EAAQ6D,WACJ7D,EAAQoD,QACPzF,EAAS,CAACO,KAAM,kBAEhBP,EAASD,KAEb+G,cAAcF,MAEpB,KACF5C,YAAW,WAAM8C,cAAcF,KAAgB,QAElDpG,OAAM,SAAAC,GACHc,QAAQC,IAAIf,GACZT,EAAS,CACLO,KAAM,cACNE,IAAKA,EAAIC,cI6EaqG,CAAYP,KAC9CQ,iBAAkB,WAAMhH,EAAUW,SAI3BuB,EAlIf,SAAeO,GAAQ,IAEX7C,EAAiD6C,EAAjD7C,YAAaC,EAAoC4C,EAApC5C,QAAgBmH,GAAoBvE,EAA3B8D,MAA2B9D,EAApBuE,kBAFnB,EAIQtE,mBAAS,IAJjB,mBAIXgE,EAJW,KAIJO,EAJI,OAKcvE,mBAAS,IALvB,mBAKXiE,EALW,KAKDO,EALC,OAOgBxE,oBAAS,GAPzB,mBAOXyE,EAPW,KAOAC,EAPA,OAQsB1E,oBAAS,GAR/B,mBAQX2E,EARW,KAQGC,EARH,OAUY5E,oBAAS,GAVrB,mBAYZtD,GAZY,UAYFwD,eAGhBtD,qBAAU,WACF6H,GACJI,MACF,CAACb,IAEHpH,qBAAU,WACF+H,GACJG,MACF,CAACb,IAGHrH,qBAAU,WAEN0E,YAAW,WAAMgD,MAAqB,KACpB,iBAAfpH,GACCoE,YAAW,WAAM5E,EAAQiF,KAAK,OAAQ,OAC5C,CAACxE,IAEH,IAAM0H,EAAkB,WACpB,GAAiB,GAAdb,EAAM7B,OAAT,CACiB,+CACD4C,KAAKf,GACrBgB,EAAS,SADsBC,EAAW,QAAS,wBAF9BA,EAAW,QAAS,qBAMvCH,EAAqB,WACH,GAAjBb,EAAS9B,OACR8B,EAAS9B,OAAO,EAAI8C,EAAW,WAAY,oCAC/CD,EAAS,YAFeC,EAAW,WAAY,wBAK7CA,EAAa,SAACC,EAAOC,GACvB/D,IAAE,IAAD,OAAK8D,EAAL,WAAoBE,YAAY,SAASC,SAAS,WACnDjE,IAAE,IAAD,OAAK8D,EAAL,iBAA0BI,KAAKH,IAE9BH,EAAW,SAACE,GACd9D,IAAE,IAAD,OAAK8D,EAAL,WAAoBE,YAAY,WAAWC,SAAS,SACrDjE,IAAE,IAAD,OAAK8D,EAAL,iBAA0BI,KAAK,KAyBpC,OACI,yBAAKlD,UAAU,SACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,QACf,yBAAKA,UAAU,cACP,0BAAMA,UAAU,cAAhB,OACA,0BAAMA,UAAU,cAAhB,OAEJ,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,cACM,iBAAflF,EAA6C,yBAAKkF,UAAU,kBAAkBjF,GAAiB,KAChF,eAAfD,EAA6C,yBAAKkF,UAAU,gBAAgBjF,GAAiB,KAC9E,4BAAfD,EAA6C,yBAAKkF,UAAU,gBAAgBjF,GAAiB,MAE/F,0BAAMoI,SA3BN,SAAChD,GACjBA,EAAEiD,iBATFd,GAAa,GACbE,GAAgB,GAChBC,IACAC,IACuC,GAApC1D,IAAE,wBAAwBe,QAUzBpC,EAAM8D,MAAM,CAACG,QAAMC,eAsBH,yBAAK7B,UAAU,2BACX,uBAAGA,UAAU,yBAAb,SACA,2BAAOqD,QAAQ,SAAf,SACA,2BAAOnD,SAAU,SAACC,GAAKgC,EAAShC,EAAEC,OAAOH,QAAUqD,OAAQ,WAAKhB,GAAa,GAAOG,KAAoBvF,GAAG,QAAQzB,KAAK,QAAQwE,MAAO2B,IACvI,0BAAM5B,UAAU,mCAEpB,yBAAKA,UAAU,8BACX,uBAAGA,UAAU,yBAAb,eACA,2BAAOqD,QAAQ,YAAf,YACA,2BAAOnD,SAAU,SAACC,GAAKiC,EAAYjC,EAAEC,OAAOH,QAASqD,OAAQ,WAAKd,GAAgB,GAAOE,KAAwBxF,GAAG,WAAWzB,KAAK,WAAWwE,MAAO4B,IACtJ,0BAAM7B,UAAU,sCAEpB,yBAAKA,UAAU,UACX,4BAAQA,UAAU,iBAAlB,kB,oCCtFjBuD,E,kDApBX,WAAY5F,GAAQ,IAAD,8BACf,cAAMA,IACDN,MAAQ,CAACmG,QAAS,GAFR,E,gEAKE,IAAD,OAChBtE,YAAW,WACP,EAAKuE,SAAS,CAACD,QAAQ,MACxBE,KAAK/F,MAAMgG,kB,+BAId,OAAOD,KAAKrG,MAAMmG,OAAS,qBAAuBE,KAAK/F,MAAMpD,a,GAd/CqJ,IAAMC,WCiU5B,IAkBe1G,cACXC,aAnBmB,SAACC,GAEpB,OADAZ,QAAQC,IAAIW,GACN,CACFrC,UAAWqC,EAAM/B,KAAKN,UACtBF,YAAauC,EAAM/B,KAAKR,gBAKL,SAACI,GACxB,MAAO,CACH4I,OAAQ,SAACC,GAAY7I,EN/OD,SAAC6I,GACzB,OAAO,SAAC7I,EAAUC,EAAX,GAAoD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAEhCiC,EAAWlC,IACXc,EAAYb,IAClB,OAAOiC,EAAShC,OAAO0I,+BAA+BD,EAAQnC,MAAOmC,EAAQlC,UAC5ErG,MAAK,SAACyI,GACH,OAAO/H,EAAUS,WAAW,SAASM,IAAIgH,EAAKC,KAAKlG,KAAKmG,IAAI,CACxDvD,UAAWmD,EAAQnD,UACnBI,SAAU+C,EAAQ/C,SAClBY,MAAOmC,EAAQnC,MACfwC,SAAUL,EAAQnD,UAAU,GAAGmD,EAAQ/C,SAAS,GAChDL,SAAS,OAGhBnF,MAAK,WAAMN,EAAS,CAAEO,KAAK,sBAC3BC,OAAM,SAACC,GAAQT,EAAS,CAAEO,KAAK,eAAgBE,IAAIA,EAAIC,cM+NzByI,CAAaN,KAC5CO,aAAc,SAACJ,GAAShJ,EN5NE,SAACgJ,GAC/B,OAAO,SAAChJ,EAAUC,EAAX,GAAoD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAEhCiC,EAAWlC,IACXc,EAAYb,IAClB,OAAOiC,EAAShC,OAAOqG,2BAA2BuC,EAAKtC,MAAOsC,EAAKrC,UAClErG,MAAK,SAACyI,GAEH,OAAO/H,EAAUS,WAAW,SAASM,IAAIgH,EAAKC,KAAKlG,KAAKuG,OAAO,CAC3D5D,SAAS,OAGhBnF,MAAK,WAAMN,EAAS,CAAEO,KAAK,sBAC3BC,OAAM,SAACC,GAEJT,EAAS,CAAEO,KAAK,eAAgBE,IAAIA,EAAIC,UACxCV,EAASD,SM4MqBuJ,CAAmBN,KACrDhC,iBAAkB,WAAMhH,EAAUW,UAOtCxB,IAFW8C,EA1Uf,SAAgBQ,GAAQ,IAAD,IAEbrD,EAAUwD,cACRhD,EAAkE6C,EAAlE7C,YAAaE,EAAqD2C,EAArD3C,UAAW8I,EAA0CnG,EAA1CmG,OAAQQ,EAAkC3G,EAAlC2G,aAAcpC,EAAoBvE,EAApBuE,iBAElDuC,EAAmBjG,IAAYC,MAAZ,OAAkBd,QAAlB,IAAkBA,GAAlB,UAAkBA,EAAOe,gBAAzB,aAAkB,EAAiBjB,QALvC,EAMcG,mBAAQ,OAAC6G,QAAD,IAACA,OAAD,EAACA,EAAkBC,WANzC,mBAMZA,EANY,aAQe9G,mBAAS,KARxB,mBAQZgD,EARY,KAQD+D,EARC,OASa/G,mBAAS,IATtB,mBASZoD,EATY,KASF4D,EATE,OAUOhH,mBAAS,IAVhB,mBAUZgE,EAVY,KAULO,EAVK,OAWavE,mBAAS,IAXtB,mBAWZiE,EAXY,KAWFO,EAXE,OAY2BxE,mBAAS,IAZpC,mBAYZiH,EAZY,KAYKC,EAZL,OAamBlH,mBAAS,IAb5B,mBAaZmH,EAbY,KAaCC,EAbD,OAcyBpH,mBAAS,IAdlC,mBAcZqH,EAdY,KAcIC,EAdJ,OAgBuBtH,oBAAS,GAhBhC,mBAgBZuH,EAhBY,KAgBGC,GAhBH,QAiBqBxH,oBAAS,GAjB9B,qBAiBZyH,GAjBY,MAiBEC,GAjBF,SAkBe1H,oBAAS,GAlBxB,qBAkBZyE,GAlBY,MAkBDC,GAlBC,SAmBqB1E,oBAAS,GAnB9B,qBAmBZ2E,GAnBY,MAmBEC,GAnBF,SAoBmC5E,oBAAS,GApB5C,qBAoBZ2H,GApBY,MAoBSC,GApBT,SAqB2B5H,oBAAS,GArBpC,qBAqBZ6H,GArBY,MAqBKC,GArBL,SAsBiC9H,oBAAS,GAtB1C,qBAsBZ+H,GAtBY,MAsBQC,GAtBR,MAwBnBC,8BAAoB,CAAC,CACjBlJ,WAAY,eAEhB,IAAMmJ,GAAY,UAAG/H,aAAY,SAAAV,GAAK,sBAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAOnB,iBAAX,iBAAI,EAAkB+B,eAAtB,aAAI,EAA2ByG,oBAAnD,QAAiE,KA3BhE,GA4BuB9G,mBAAS,MA5BhC,qBA4BZmI,GA5BY,MA4BGC,GA5BH,MA6BnBxL,qBAAU,WACDsL,IACLE,GAAiBF,GAAa,GAAGpB,aACnC,CAACoB,KACHtL,qBAAU,WACNiC,QAAQC,IAAI,gBAAgBqJ,MAC9B,CAACA,KAnCgB,OAqCWnI,oBAAS,GArCpB,qBAqCdqI,GArCc,gBAsCuBrI,oBAAS,IAtChC,qBAsCdsI,GAtCc,gBAuCStI,mBAAS,KAvClB,qBAuCd7C,GAvCc,MAuCNoL,GAvCM,MA0CnB3L,qBAAU,WAAW2K,GAA0BiB,OAAyB,CAACxF,IACzEpG,qBAAU,WAAW6K,IAAyBgB,OAAwB,CAACrF,IACvExG,qBAAU,WAAW6H,IAAsBI,OAAqB,CAACb,IACjEpH,qBAAU,WAAU+H,IAAwBG,OAAwB,CAACb,IACrErH,qBAAU,WAAU+K,IAA+Be,OAA+B,CAACzB,IAEnFrK,qBAAU,WAAWiL,IAA4Bc,OAA2B,CAACxB,IAC7EvK,qBAAU,WAAUmL,IAA8Ba,OAA8B,CAACvB,IAEjFzK,qBAAU,WACNiC,QAAQC,IAAI,cAAc5B,EAAaE,GACrB,kBAAfF,GACCqL,GAAW,iDACXjH,YAAW,WAAM5E,EAAQiF,KAAK,OAAO,MAElC4G,GAAWnL,GAClBkE,YAAW,WACPgD,MACF,OACJ,CAACpH,IAGH,IAAI2L,GAA0B,sBAAb3L,GAAoD,MAAfA,EAAqB,KACrE,0BAAMkF,UAAyB,kBAAblF,EAA+B,UAAU,SAAWC,IAEtEqL,GAAsB,WACH,GAAlBxF,EAAUb,OACb6C,GAAS,aADgBC,GAAW,YAAa,yBAI/CwD,GAAqB,WACH,GAAjBrF,EAASjB,OACZ6C,GAAS,YADeC,GAAW,WAAY,wBAI7CJ,GAAkB,WACpB,GAAiB,GAAdb,EAAM7B,OAAT,CACiB,+CACD4C,KAAKf,GACrBgB,GAAS,SADsBC,GAAW,QAAS,wBAF9BA,GAAW,QAAS,qBAMvC0D,GAAwB,WAC1B,GAAuB,GAApBxB,EAAYhF,OAAf,CACiB,+CACD4C,KAAKoC,GACrBnC,GAAS,eAD4BC,GAAW,cAAe,wBAFpCA,GAAW,cAAe,qBAMnDH,GAAqB,WACH,GAAjBb,EAAS9B,OACR8B,EAAS9B,OAAO,EAAI8C,GAAW,WAAY,gDAC/CD,GAAS,YAFeC,GAAW,WAAY,wBAK7C2D,GAA2B,WACF,GAAvBvB,EAAelF,OACfkF,EAAelF,OAAO,EAAI8C,GAAW,iBAAkB,gDAC3DD,GAAS,kBAFsBC,GAAW,iBAAkB,wBAK1DyD,GAA4B,WACH,GAAxBzB,EAAgB9E,OACf8E,GAAiBhD,EACrBe,GAAS,mBADuBC,GAAW,kBAAmB,0BAD/BA,GAAW,kBAAmB,0BAK3DA,GAAa,SAACC,EAAOC,GACvB/D,IAAE,IAAD,OAAK8D,EAAL,WAAoBE,YAAY,SAASC,SAAS,WACnDjE,IAAE,IAAD,OAAK8D,EAAL,iBAA0BI,KAAKH,IAE9BH,GAAW,SAACE,GACd9D,IAAE,IAAD,OAAK8D,EAAL,WAAoBE,YAAY,WAAWC,SAAS,SACrDjE,IAAE,IAAD,OAAK8D,EAAL,iBAA0BI,KAAK,KA8C9BwD,GAAiBX,IAAiBrB,GAAaqB,GACjD,yBAAK/F,UAAU,yBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,cAAhB,QACA,0BAAMA,UAAU,cAAhB,OAGJ,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,cACVyG,IAED,0BAAMzG,UAAU,iBAAiBmD,SAhC7B,SAAChD,GACjBA,EAAEiD,iBAvBFgC,IAAiB,GACjBE,IAAgB,GAChBhD,IAAa,GACbE,IAAgB,GAChBgD,IAAuB,GACvBY,KACAC,KACA5D,KACAC,KACA4D,KACsDL,GAAH,GAAhDjH,IAAE,oCAAoCe,OAezCtD,QAAQC,IAAI,iBAAkBuJ,IAC3BA,GACCnC,EAAO,CAAClD,YAAWI,WAAUY,QAAOC,WAAUgD,oBAE7CpI,QAAQC,IAAI,qBA2BD,yBAAKsD,UAAU,sCACX,uBAAGA,UAAU,yBAAb,UACA,2BAAOqD,QAAQ,aAAf,cACA,2BAAOnD,SAAU,SAACC,GAAKwE,EAAaxE,EAAEC,OAAOH,QAAUqD,OAAQ,WAAK8B,IAAiB,GAAOgB,MAAyBlJ,GAAG,YAAYzB,KAAK,OAAOwE,MAAOW,IACvJ,0BAAMZ,UAAU,uCAGpB,yBAAKA,UAAU,qCACX,uBAAGA,UAAU,0BACb,2BAAOqD,QAAQ,YAAf,aACA,2BAAOnD,SAAU,SAACC,GAAKyE,EAAYzE,EAAEC,OAAOH,QAAUqD,OAAQ,WAAKgC,IAAgB,GAAOe,MAAwBnJ,GAAG,WAAWzB,KAAK,OAAOwE,MAAOe,IACnJ,0BAAMhB,UAAU,sCAGpB,yBAAKA,UAAU,mCACX,uBAAGA,UAAU,yBAAb,SACA,2BAAOqD,QAAQ,SAAf,SACA,2BAAOnD,SAAU,SAACC,GAAKgC,EAAShC,EAAEC,OAAOH,QAAUqD,OAAQ,WAAKhB,IAAa,GAAOG,MAAqBvF,GAAG,QAAQzB,KAAK,QAAQwE,MAAO2B,IACxI,0BAAM5B,UAAU,mCAGpB,yBAAKA,UAAU,sCACX,uBAAGA,UAAU,yBAAb,eACA,2BAAOqD,QAAQ,YAAf,YACA,2BAAOnD,SAAU,SAACC,GAAKiC,EAAYjC,EAAEC,OAAOH,QAASqD,OAAQ,WAAKd,IAAgB,GAAOE,MAAwBxF,GAAG,WAAWzB,KAAK,WAAWwE,MAAO4B,IACtJ,0BAAM7B,UAAU,sCAEpB,yBAAKA,UAAU,6CACX,uBAAGA,UAAU,yBAAb,gBACA,2BAAOqD,QAAQ,mBAAf,mBACA,2BAAOnD,SAAU,SAACC,GAAK2E,EAAmB3E,EAAEC,OAAOH,QAASqD,OAAQ,WAAKkC,IAAuB,GAAOc,MAA+BpJ,GAAG,kBAAkBzB,KAAK,WAAWwE,MAAO4E,IAClL,0BAAM7E,UAAU,6CAGpB,yBAAKA,UAAU,UACX,4BAAQA,UAAU,kBAAlB,eAMrB,KAEG2G,GAAuBZ,IAAiBrB,GAAaqB,GACvD,yBAAK/F,UAAU,yBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,cAAhB,QACA,0BAAMA,UAAU,cAAhB,QACA,6CAEJ,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,cACVyG,IAED,0BAAMzG,UAAU,uBAAuBmD,SAhF7B,SAAChD,GACvBA,EAAEiD,iBAlBFsC,IAAmB,GACnBE,IAAsB,GACtBW,KACAC,KAC4DN,GAAH,GAAtDlH,IAAE,0CAA0Ce,OAgB/CtD,QAAQC,IAAIqI,EAAaE,GACzBxI,QAAQC,IAAI,uBAAwBwJ,IACjCA,GACC5B,EAAa,CAAC1C,MAAMmD,EAAalD,SAASoD,IAEzCxI,QAAQC,IAAI,qBA0ED,yBAAKsD,UAAU,yCACX,uBAAGA,UAAU,yBAAb,SACA,2BAAOqD,QAAQ,eAAf,SACA,2BAAOnD,SAAU,SAACC,GAAK6E,EAAe7E,EAAEC,OAAOH,QAAUqD,OAAQ,WAAKoC,IAAmB,GAAOa,MAA2BrJ,GAAG,cAAczB,KAAK,QAAQwE,MAAO8E,IAChK,0BAAM/E,UAAU,yCAGpB,yBAAKA,UAAU,4CACX,uBAAGA,UAAU,yBAAb,eACA,2BAAOqD,QAAQ,kBAAf,YACA,2BAAOnD,SAAU,SAACC,GAAK+E,EAAkB/E,EAAEC,OAAOH,QAASqD,OAAQ,WAAKsC,IAAsB,GAAOY,MAA8BtJ,GAAG,iBAAiBzB,KAAK,WAAWwE,MAAOgF,IAC9K,0BAAMjF,UAAU,4CAGpB,yBAAKA,UAAU,UACX,4BAAQA,UAAU,kBAAlB,qBAMrB,KAEG4G,GAAkBb,IAAiBrB,GAAaqB,GAC9C,yBAAK/F,UAAU,UACX,yBAAKA,UAAU,aACf,kBAAC,WAAD,KACI,kBAAC,cAAD,CACEa,WAAS,EACTgG,QAAM,EACNC,MAAO,CACH,YAAa,MAGjB,kBAAC,kBAAD,CACEhG,UAAU,EACVC,OAAS,wBAAIf,UAAU,UAAS,kBAAC,OAAD,iBAAvB,oBACTA,UAAU,SACVkB,KAAK,OAEJwF,IAEH,kBAAC,kBAAD,CACE5F,UAAU,EACVC,OAAS,wBAAIf,UAAU,UAAS,kBAAC,OAAD,cAAvB,oCACTA,UAAU,SACVkB,KAAK,OAEJyF,QAOb,yBAAK3G,UAAU,QACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,qCACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,gBACf,wBAAIA,UAAU,kCAAd,IAAgD,sCAAiB,0BAAMA,UAAU,cAAhB,OACjE,uBAAGA,UAAU,oBAAb,8BAC+B,0BAAMA,UAAU,cAAhB,aAD/B,oBAUhB,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAS2D,eAAgB,KACpBiD,Q,mCClRjB,IAYAzJ,cACIC,aAboB,SAACC,GACrB,MAAO,MAIgB,SAACnC,GACxB,MAAO,MAQPb,IAFJ8C,EArCA,SAAiBQ,GAEGG,cAAhB,IACOiJ,EAAapJ,EAAMqJ,MAAMC,OAAzBF,UAaP,OAZAlB,8BAAoB,CAChB,CAAClJ,WAAY,WAAYM,IAAK8J,KAElBhJ,aAAY,gBAAamJ,EAAb,EAAEhL,UAAWgL,KAAb,OAAuBA,EAAK/F,UAAY+F,EAAK/F,SAAS4F,MAU9E,yBAAK/G,UAAU,gBACX,yBAAKA,UAAU,aACX,kDCpBDmH,MAhBf,YAA+B,IAAZ5M,EAAW,EAAXA,SACf,OACI,yBAAKyF,UAAU,aACf,yBAAKA,UAAU,OACf,yBAAKA,UAAU,qCACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,gBACVzF,QCwCb,IAagB4C,cACZC,aAdoB,SAACC,GAErB,MAAO,KAYiB,MACxBhD,IAFY8C,EAtDhB,SAAcQ,GACMG,cAAhB,IAEMsJ,EACF,kBAAC,WAAD,KACI,yBAAKpH,UAAU,aACf,wBAAIA,UAAU,eAAc,0BAAMA,UAAU,cAAhB,WAA5B,UAA8E,0BAAMA,UAAU,cAAhB,YAC9E,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACX,uBAAGA,UAAU,oBAAb,eACA,kBAAC,IAAD,CAASQ,GAAG,eAAc,yBAAKR,UAAU,sCAAqC,uBAAGA,UAAU,kBAAb,UAElF,yBAAKA,UAAU,iBACX,uBAAGA,UAAU,oBAAb,gBACA,kBAAC,IAAD,CAASQ,GAAG,gBAAe,yBAAKR,UAAU,sCAAqC,uBAAGA,UAAU,kBAAb,UAEnF,yBAAKA,UAAU,iBACX,uBAAGA,UAAU,oBAAb,kBACA,kBAAC,IAAD,CAASQ,GAAG,kBAAiB,yBAAKR,UAAU,sCAAqC,uBAAGA,UAAU,kBAAb,aAErF,yBAAKA,UAAU,iBACX,uBAAGA,UAAU,oBAAb,gBACA,kBAAC,IAAD,CAASQ,GAAG,gBAAe,yBAAKR,UAAU,sCAAqC,uBAAGA,UAAU,kBAAb,kBAU/F,OACI,yBAAKA,UAAU,aACVoH,M,iCCoyBb,IAeejK,cACX9C,IACA+C,aAjBoB,SAACC,GACrB,MAAO,CACHgK,eAAkBhK,EAAMiK,eAAeD,eACvCE,aAAkBlK,EAAMiK,eAAeC,aACvCC,WAAkBnK,EAAMiK,eAAeE,eAIpB,SAACtM,GACxB,MAAM,CACFuM,iBAAkB,SAACjG,GC9zBM,IAACkG,ED8zBIxM,GC9zBJwM,ED8zB8BlG,EC7zBrD,SAACtG,EAAUC,EAAX,GAAmD,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAGtC,OAFAH,EAAS,CAACO,KAAK,4BACGJ,IACDsB,WAAW,YAAYgL,IAAjC,2BAA0CD,GAA1C,IAAsDE,UAAW,IAAIC,QAC3ErM,MAAK,WAAKN,EAAS,CAACO,KAAK,2BACzBC,OAAM,SAACC,GAAOT,EAAS,CAACO,KAAK,oBAAqBE,IAAKA,EAAIC,iBDyzB5DkM,mBAAoB,WAAM5M,GCxyBvB,SAACA,EAAUC,EAAX,GACH,OADsD,EAA7BC,YAA6B,EAAhBC,aAC/BH,EAAS,CAACO,KAAK,iCD2yBf0B,EAj1Bf,SAAoBQ,GAAQ,IAAD,8BAEMC,mBAAS,IAFf,mBAEhB4D,EAFgB,KAERuG,EAFQ,OAIGnK,mBAAS,QAJZ,mBAIhBoK,EAJgB,KAITC,EAJS,OAKSrK,oBAAS,GALlB,mBAKhBsK,EALgB,KAKNC,EALM,OAOqCvK,mBAAQ,UAAE4D,EAAQ4G,mBAAV,QAAsC,IAPnF,mBAOhBA,EAPgB,KAOHC,EAPG,OAQqCzK,mBAAQ,UAAE4D,EAAQ8G,aAAV,QAAsC,GARnF,mBAQhBA,EARgB,KAQTC,EARS,OASqC3K,mBAAQ,UAAE4D,EAAQgH,cAAV,QAAsC,CAAC,KATpF,mBAShBA,EATgB,KASRC,EATQ,OAUqC7K,mBAAQ,UAAE4D,EAAQkH,mBAAV,QAAsC,IAVnF,mBAUhBA,EAVgB,KAUHC,EAVG,OAWqC/K,mBAAQ,UAAE4D,EAAQoH,gBAAV,QAAsC,CAAC,KAXpF,mBAWhBA,EAXgB,KAWNC,GAXM,QAYqCjL,mBAAQ,UAAE4D,EAAQsH,aAAV,QAAsC,CAAC,CAACC,QAAQ,GAAIC,UAAU,MAZ3G,qBAYhBF,GAZgB,MAYTG,GAZS,SAaqCrL,mBAAQ,UAAE4D,EAAQ3D,kBAAV,QAAsC,CAAC,QAbpF,qBAahBA,GAbgB,MAaJqL,GAbI,SAcqCtL,mBAAQ,UAAE4D,EAAQ2H,YAAV,QAAsC,IAdnF,qBAchBA,GAdgB,MAcVC,GAdU,SAeqCxL,mBAAQ,UAAE4D,EAAQ6H,kBAAV,UAf7C,qBAehBA,GAfgB,MAeJC,GAfI,SAgBqC1L,mBAAQ,UAAE4D,EAAQ+H,eAAV,UAhB7C,qBAgBhBA,GAhBgB,MAgBPC,GAhBO,SAiBqC5L,mBAAQ,UAAE4D,EAAQiI,wBAAV,QAAsC,IAjBnF,qBAiBhBA,GAjBgB,MAiBEC,GAjBF,SAkBqC9L,mBAAQ,UAAE4D,EAAQmI,8BAAV,QAAsC,IAlBnF,qBAkBhBA,GAlBgB,MAkBQC,GAlBR,SAmBqChM,mBAAQ,UAAE4D,EAAQqI,sBAAV,QAAsC,IAnBnF,qBAmBhBA,GAnBgB,MAmBAC,GAnBA,MAqBvBtP,qBAAU,WAEN,GADAiC,QAAQC,IAAI,qBAAqB+M,IAC7BA,GAAJ,CACA,IAAIM,EAAQJ,GACZF,GAAiBzM,SAAQ,SAACT,EAAKyN,GACvBC,OAAOC,KAAKH,GAAOI,SAAS5N,KAC5BwN,EAAMxN,GAAQ,CAAC,CACX6N,WAAW,GACXC,eAAgB,CAAC,IACjBC,YAAa,CAAC,CAAEvB,QAAQ,GAAIC,UAAU,KACtCuB,WAAY,CAAC,UAIzBpC,GAAaD,MACf,CAACuB,KApCoB,OAsCM7L,mBAAS,IAtCf,qBAsChB4M,GAtCgB,MAsCRC,GAtCQ,SAuCM7M,mBAAS,IAvCf,qBAuChB8M,GAvCgB,MAuCRC,GAvCQ,SAwCU/M,mBAAS,IAxCnB,qBAwChBgN,GAxCgB,MAwCNC,GAxCM,MA0CjBC,GAAM,SAACC,EAAIC,GAEb,IAAIC,EAAM,GACV,GAAID,GAAQD,EAUZ,OATAA,EAAI/N,SAAQ,SAAAkO,GACRF,EAAIhO,SAAQ,SAAAmO,IACA,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOpL,QAAQ,EACdkL,EAAI1L,KAAJ,CAAU2L,GAAV,mBAAmBC,KAEnBF,EAAI1L,KAAK,CAAC2L,EAAMC,UAIrBF,GAkBLG,GAAmB,SAACC,GACtB,IAAIC,EAAUD,EAAM/O,KAAI,SAACC,GAAD,OAAS,IAAIgP,MAAMhP,GAAMiP,OAAOlP,KAAI,SAACC,EAAKyN,GAAN,OAAcA,QAEtEyB,EAAOH,EAAQI,MACnB,OApBc,SAAZC,EAAaL,EAAQM,GAEvB,GAAqB,GAAlBN,EAAQvL,OACP,OAAO+K,GAAIQ,EAAQ,GAAGM,GAItB,IAAIC,EAAO,YAAON,MAAP,YAAiBD,IACxBG,EAAOI,EAAQH,MAKnB,OAAOC,EAAWE,EAASf,GAAIW,EAAKG,IAOjCD,CAAUL,EAASG,IAyEvBhE,GAAkF9J,EAAlF8J,iBAAkBK,GAAgEnK,EAAhEmK,mBAAoBT,GAA4C1J,EAA5C0J,eAA8BG,IAAc7J,EAA5B4J,aAA4B5J,EAAd6J,YAC3EhN,qBAAU,WACN0E,YAAW,WACP4I,OACF,OACJ,CAACT,KACH,IAAMyE,GAAgB,WAClBrE,GAAiBjG,IAGfuK,GACF,0BAAM/L,UAAU,OACZ,yBAAKA,UAAU,6BACX,2BAAOqD,QAAQ,eAAf,eACA,2BAAOnD,SAAU,SAACC,GAAKkI,EAAelI,EAAEC,OAAOH,QAASxE,KAAK,OAAOyB,GAAG,cAAc+C,MAAOmI,KAEhG,yBAAKpI,UAAU,4BACf,2BACA,+BACI,2BAAOgM,KAAK,aACZC,UAAU,EAAMxQ,KAAK,QAAQyQ,QAAuB,GAAd7C,KACtC,0BAAOzJ,QAAS,WAAK0J,IAAeD,MAAiBA,GACnD,kBAAC,WAAD,KAAU,0BAAMrJ,UAAU,sCAAqC,kBAACmM,EAAA,EAAD,iBAArD,eACV,kBAAC,WAAD,KAAU,0BAAMnM,UAAU,+BAAqC,kBAACmM,EAAA,EAAD,cAArD,mBAKhB,yBAAKnM,UAAU,kBACX,yBACAJ,QAAS,WACkBqI,EAAN,GAAdoB,GAA6B,aAClB,sBAElBrJ,UAAU,gBALV,UAUNoM,GACF,0BAAOpM,UAAU,OACb,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,UAAjB,eACA,8BAAU8G,MAAO,CAAC,OAAS,GAAT,OAA4C,GAA/B4B,EAAYtM,MAAM,MAAM2D,OAArC,OAAqDC,UAAU,8BAA8BE,SAAU,SAACC,GAAMwI,EAAexI,EAAEC,OAAOH,QAAU/C,GAAG,eAAewL,IAExL,yBAAK1I,UAAU,kBACX,yBACAJ,QAAS,WACLqI,EAAS,gBAEbjI,UAAU,gBAJV,UASNqM,GACF,0BAAMrM,UAAU,OACZ,wBAAIA,UAAU,UAAd,YACC4I,EAAStM,KAAI,SAACgQ,EAAQtC,GAAT,OACV,kBAAC,WAAD,CAAUtK,IAAKC,eACf,kBAAC,YAAD,CACAzC,GAAIyC,cACJ4M,EAAG,GACHC,MAAK,kBAAaxC,EAAb,OACL1G,OAAQ,SAACnD,GACN,IAAI4J,EAAQnB,EACZmB,EAAMC,GAAS7J,EAAEC,OAAOH,MACxBxD,QAAQC,IAAIqN,GACXlB,GAAYkB,IAEhB0C,aAAcH,IAEd,yBAAKtM,UAAU,UACX,yBAAKJ,QAAS,WACV,IAAImK,EAAQnB,EACZmB,EAAQA,EAAM2C,QAAO,SAACnQ,EAAKoQ,GAAN,OAAmBA,GAAW3C,KACnDnB,GAAYkB,GAAQ5B,GAAaD,IACjClI,UAAU,+BAA8B,uBAAGA,UAAU,kBAAb,gBAIpD,yBAAKA,UAAU,kBACX,yBAAKJ,QAAS,WAAMiJ,GAAY,GAAD,mBAAKD,GAAL,CAAe,OAAQ5I,UAAU,sCAAqC,uBAAGA,UAAU,kBAAb,SAEzG,6BACA,6BACA,6BACA,yBAAKA,UAAU,kBACX,yBAAKJ,QAAS,WAAMqI,EAAS,aAAejI,UAAU,gBAAtD,UAKN4M,GACF,0BAAM5M,UAAU,OACZ,wBAAIA,UAAU,UAAd,kBACC8I,GAAMxM,KAAI,SAACuQ,EAAK7C,GAAN,OACP,kBAAC,WAAD,CAAUtK,IAAKC,eACf,kBAAC,YAAD,CACIzC,GAAIyC,cACJ4M,EAAG,EACHC,MAAK,eAAUxC,EAAV,YACL1G,OAAQ,SAACnD,GACL,IAAI4J,EAAQjB,GACZiB,EAAMC,GAAOjB,QAAS5I,EAAEC,OAAOH,MAC/BgJ,GAASc,GAAQ5B,GAAaD,IAElCuE,aAAcI,EAAK9D,UAEvB,kBAAC,YAAD,CACI7L,GAAIyC,cACJ4M,EAAG,EACHC,MAAK,eAAUxC,EAAV,cACL1G,OAAQ,SAACnD,GACL,IAAI4J,EAAQjB,GACZiB,EAAMC,GAAOhB,UAAW7I,EAAEC,OAAOH,MACjCgJ,GAASc,GAAQ5B,GAAaD,IAElCuE,aAAcI,EAAK7D,YAEvB,yBAAKhJ,UAAU,UACX,yBAAKJ,QAAS,WACV,IAAImK,EAAQjB,GACZiB,EAAQA,EAAM2C,QAAO,SAACnQ,EAAKoQ,GAAN,OAAmBA,GAAW3C,KACnDf,GAASc,IACT/J,UAAU,+BAA8B,uBAAGA,UAAU,kBAAb,gBAIpD,yBAAKA,UAAU,kBACX,yBAAKJ,QAAS,WAAMqJ,GAAS,GAAD,mBAAKH,IAAL,CAAY,CAACC,QAAQ,GAAIC,UAAU,QAAUhJ,UAAU,sCAAqC,uBAAGA,UAAU,kBAAb,SAE5H,yBAAKA,UAAU,kBACX,yBAAKJ,QAAS,WAAMqI,EAAS,yBAA2BjI,UAAU,gBAAlE,UAKN8M,GACF,0BAAM9M,UAAU,OACZ,wBAAIA,UAAU,UAAd,cACA,yBAAKA,UAAU,WACdnC,GAAWvB,KAAI,SAACN,EAASgO,GAAV,OAEZ,kBAAC,OAAD,CACAtK,IAAKC,cACLoN,OAAO,EACPC,QAAS,KACTpN,QAAS,WAAMsJ,GAAcrL,GAAW6O,QAAO,SAACnQ,EAAKoQ,GAAN,OAAkBA,GAAW3C,OAC5EhK,UAAU,6BAEV,2BAAIhE,QAIR,yBAAKgE,UAAU,uBACX,2BACIE,SAAU,SAACC,GAAKsK,GAAWtK,EAAEC,OAAOH,QACpCI,UAAW,SAACF,GAAoB,IAAXA,EAAEG,UAAcH,EAAEiD,iBAAkB8F,GAAc,GAAD,mBAAKrL,IAAL,CAAiB2M,GAAQyC,UAAUxC,GAAW,MACpHhP,KAAK,OAAOyB,GAAG,mBAAmB+C,MAAOuK,GAAS0C,YAAY,kBAGtE,yBAAKlN,UAAU,WACf,kBAAC,UAAD,MACA,kBAAC,UAAD,OAEA,wBAAIA,UAAU,UAAd,QACA,yBAAKA,UAAU,WACdmJ,GAAK7M,KAAI,SAAC6Q,EAAInD,GAAL,OAEN,kBAAC,OAAD,CACAtK,IAAKC,cACLoN,OAAO,EACPC,QAAS,KACTpN,QAAS,WAAMwJ,GAAQD,GAAKuD,QAAO,SAACnQ,EAAKoQ,GAAN,OAAkBA,GAAW3C,OAChEhK,UAAU,6BAEV,2BAAImN,QAIR,yBAAKnN,UAAU,uBACX,2BACIE,SAAU,SAACC,GAAKwK,GAAWxK,EAAEC,OAAOH,QACpCI,UAAW,SAACF,GAAoB,IAAXA,EAAEG,UAAcH,EAAEiD,iBAAkBgG,GAAQ,GAAD,mBAAKD,IAAL,YAAcuB,GAAQuC,OAAOzQ,cAAcJ,MAAM,KAAKsQ,QAAO,SAAAnQ,GAAI,OAAG,CAAC,IAAI,GAAG,MAAM4N,SAAS5N,SAAUoO,GAAW,MAChLlP,KAAK,OAAOyB,GAAG,aAAa+C,MAAOyK,GAASwC,YAAY,aAGhE,yBAAKlN,UAAU,iBACX,yBAAKJ,QAAS,YA1OH,WACnB,IAAIwN,EAAM,GACV,GAAiB,GAAd/D,GAAmB,CAClB,IAAIgE,EAAsBxD,GAC1BI,OAAOC,KAAKmD,GAAqBrQ,SAAQ,SAACsQ,EAAOtD,GACF,GAAxCqD,EAAoBC,GAAQC,WAC3BF,EAAoBC,GAAU,CACI,gBAAmB,GACnB,MAAS,EACT,OAAU,GACV,SAAW,EACX,UAAY,EACZ,WAAc,QAIxDF,EAAI,CACAhF,cACAyB,eAAgBwD,EAChB5D,oBACAE,0BACAN,cACAxL,cACAsL,QACAT,cACAI,SACAF,iBAGJwE,EAAI,CACAhF,cACAE,MAAOkF,WAAWlF,GAClBiB,WACAF,cACAxL,cACAsL,QACAX,SACAE,cACAI,SACAF,YAGRb,EAAWqF,GAgMiBK,GAAiBxF,EAAS,gBAAkBjI,UAAU,gBAA1E,eAKN0N,GAAgC,GAAdrE,GACpB,0BAAMrJ,UAAU,OACZ,wBAAIA,UAAU,UAAd,qBACA,yBAAKA,UAAU,uBACX,2BACIE,SAAU,SAACC,GAAK0K,GAAa1K,EAAEC,OAAOH,QACtCI,UAAW,SAACF,GAAmB,IAAXA,EAAEG,UAClBH,EAAEiD,iBACFsG,GAAoB,GAAD,mBAAKD,IAAL,CAAuBmB,MAAaC,GAAa,IAAK1C,GAAaD,KAE1FzM,KAAK,OAAOyB,GAAG,aAAa+C,MAAO2K,GAAWsC,YAAY,yBAGlE,yBAAKlN,UAAU,WACdyJ,GAAiBnN,KAAI,SAACqR,EAAM3D,GAAP,OAClB,kBAAC,OAAD,CACAtK,IAAKC,cACLoN,OAAO,EACPC,QAAS,KACThN,UAAU,6BAEV,uBAAGA,UAAU,aAAa2N,QAI9B,yBAAK3N,UAAU,WACX,kBAAC,WAAD,eACCiK,OAAOC,KAAKP,WADb,aACC,EAAqCiE,OAAOtR,KAAI,SAACuR,EAAQ7D,GAAT,aAChD,kBAAC,WAAD,KACG,kBAAC,WAAD,KACI,uBAAGhK,UAAU,wBAAwBgK,EAArC,KAA8C6D,IAElD,kBAAC,WAAD,eACClE,GAAuBkE,UADxB,aACC,EAAiCvR,KAAI,SAACwR,EAASC,GAAV,eACtC,kBAAC,WAAD,CAAUrO,IAAKC,eACf,kBAAC,WAAD,KACI,kBAAC,WAAD,KACA,yBAAKK,UAAU,OACf,yBAAKA,UAAU,UAAS,uBAAGA,UAAU,6BAA6B6N,EAA1C,IAAoDE,EAApD,OACxB,yBAAK/N,UAAU,sBACX,yBACAJ,QAAS,WACL,IAAImK,EAAQJ,GACZI,EAAM8D,GAAW9D,EAAM8D,GAASnB,QAAO,SAACA,EAAQsB,GAAT,OAAwBD,GAAWC,KAC1EpE,GAA0BG,GAAQ5B,GAAaD,IAEnDlI,UAAU,uBANV,IAMiC,uBAAGA,UAAU,kBAAb,UANjC,IAM2E6N,EAN3E,IAMqFE,MAIzF,yBAAK/N,UAAU,OAEX,yBAAKA,UAAU,UAAS,4CACxB,kBAAC,YAAD,CACI9C,GAAIyC,cACJ4M,EAAG,EACHjJ,OAAQ,SAACnD,GACL,IAAI4J,EAAQJ,GACZI,EAAM8D,GAASE,GAAW3D,WAAajK,EAAEC,OAAOH,MAChD2J,GAA0BG,GAAQ5B,GAAaD,IAEnDuE,aAAcqB,EAAS1D,cAG/B,uBAAGpK,UAAU,QAAb,oBACA,yBAAKA,UAAU,OAAf,UACC8N,EAASzD,sBADV,aACC,EAAyB/N,KAAI,SAAC2R,EAAgBC,GAAjB,OAC1B,kBAAC,WAAD,CAAUxO,IAAKC,eACf,kBAAC,YAAD,CACIzC,GAAIyC,cACJ4M,EAAG,GACHjJ,OAAQ,SAACnD,GACL,IAAI4J,EAAQJ,GACZI,EAAM8D,GAASE,GAAW1D,eAAe6D,GAAwB/N,EAAEC,OAAOH,MAC1E2J,GAA0BG,GAAQ5B,GAAaD,IAEnDuE,aAAcwB,IAElB,yBAAKjO,UAAU,UACX,yBACAJ,QAAS,SAACO,GACN,IAAI4J,EAAQJ,GACZI,EAAM8D,GAASE,GAAW1D,eAAiBN,EAAM8D,GAASE,GAAW1D,eAAeqC,QAAO,SAACA,EAAQsB,GAAT,OAAwBE,GAAsBF,KACzIpE,GAA0BG,GAAQ5B,GAAaD,IAEnDlI,UAAU,+BAA8B,uBAAGA,UAAU,kBAAb,YAE5C,yBAAKA,UAAU,gBAGnB,yBAAKA,UAAU,kBACX,yBACAJ,QAAS,SAACO,GACN,IAAI4J,EAAQJ,GACZI,EAAM8D,GAASE,GAAW1D,eAAe9K,KAAK,IAC9CqK,GAA0BG,GAAQ5B,GAAaD,IAEnDlI,UAAU,sCAAqC,uBAAGA,UAAU,kBAAb,UAGnD,uBAAGA,UAAU,QAAb,eACA,yBAAKA,UAAU,OAAf,UACC8N,EAASxD,mBADV,aACC,EAAsBhO,KAAI,SAAC6R,EAAaC,GAAd,OACvB,kBAAC,WAAD,CAAU1O,IAAKC,eACf,kBAAC,YAAD,CACIzC,GAAIyC,cACJ4M,EAAG,EACHjJ,OAAQ,SAACnD,GACL,IAAI4J,EAAQJ,GACZI,EAAM8D,GAASE,GAAWzD,YAAY8D,GAAmBrF,QAAU5I,EAAEC,OAAOH,MAC5E2J,GAA0BG,GAAQ5B,GAAaD,IAEnDuE,aAAc0B,EAAapF,UAE/B,kBAAC,YAAD,CACI7L,GAAIyC,cACJ4M,EAAG,EACHjJ,OAAQ,SAACnD,GACL,IAAI4J,EAAQJ,GACZI,EAAM8D,GAASE,GAAWzD,YAAY8D,GAAmBpF,UAAY7I,EAAEC,OAAOH,MAC9E2J,GAA0BG,GAAQ5B,GAAaD,IAEnDuE,aAAc0B,EAAanF,YAE/B,yBAAKhJ,UAAU,UACX,yBACAJ,QAAS,WACL,IAAImK,EAAQJ,GACZI,EAAM8D,GAASE,GAAWzD,YAAcP,EAAM8D,GAASE,GAAWzD,YAAYoC,QAAO,SAACA,EAAQsB,GAAT,OAAwBI,GAAmBJ,KAChIpE,GAA0BG,GAAQ5B,GAAaD,IAEnDlI,UAAU,+BAA8B,uBAAGA,UAAU,kBAAb,YAE5C,yBAAKA,UAAU,gBAGnB,yBAAKA,UAAU,kBACX,yBACAJ,QAAS,WACL,IAAImK,EAAQJ,GACZI,EAAM8D,GAASE,GAAWzD,YAAY/K,KAAK,CAAEwJ,QAAS,GAAIC,UAAW,KACrEY,GAA0BG,GAAQ5B,GAAaD,IAEnDlI,UAAU,sCAAqC,uBAAGA,UAAU,kBAAb,UAGvD,kBAAC,UAAD,MACA,kBAAC,UAAD,MACA,kBAAC,UAAD,WAIA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACX,yBACAJ,QAAS,WACL,IAAImK,EAAQJ,UACLI,EAAM8D,GACb,IAAIQ,EAAoB5E,GAAiBiD,QAAO,SAAA4B,GAAO,OAAEA,GAAST,KAClEnE,GAAoB2E,GACpBzE,GAA0BG,GAAQ5B,GAAaD,IAEnDlI,UAAU,uBARV,IAQiC,uBAAGA,UAAU,kBAAb,UARjC,IAQ2E6N,EAR3E,cAUJ,yBAAK7N,UAAU,iBACX,yBACAJ,QAAS,WACL,IAAImK,EAAQJ,GACZI,EAAM8D,GAAStO,KAAK,CAChB6K,WAAW,GACXC,eAAgB,CAAC,IACjBC,YAAa,CAAC,CAAEvB,QAAQ,GAAIC,UAAU,OAE1CY,GAA0BG,GAAQ5B,GAAaD,IAEnDlI,UAAU,gBACN,uBAAGA,UAAU,kBAAb,OAXJ,IAW2C6N,EAX3C,aAeR,yBAAK7N,UAAU,iBAOvB,yBAAKA,UAAU,UACX,yBAAMJ,QAAS,YAlcC,WACxB,GAAI6J,IAAoBA,IAAmB,MAAMA,GAAiB1J,QAAQ,GAA1E,CACA,IAAIwO,EAAS9E,GAAiBnN,KAAI,SAACC,GAAD,OAAQoN,GAAuBpN,GAAMwD,UACvEtD,QAAQC,IAAI6R,GACZ,IACIC,EADiBpD,GAAkBmD,GACCjS,KAAI,SAACC,GAAD,MAAQ,UAAUA,EAAKkS,KAAK,QACxEhS,QAAQC,IAAI8R,GACZ,IAAInB,EAAsBxD,GAC1B2E,EAAmBxR,SAAQ,SAAAT,GACnB0N,OAAOC,KAAKL,IAAgBM,SAAS5N,KACrC8Q,EAAoB9Q,GAAQ,CACxBmS,gBAAiB,GACjBpG,MAAO,EACPE,OAAQ,CAAC,IACTe,SAAS,EACTgE,UAAU,EACVhD,WAAY,QAIxBtC,EAAS,mBA8aoB0G,IAAyB3O,UAAU,gBAAxD,iCAMT,KAEG4O,GAAoC,GAAdvF,GACxB,kBAAC,WAAD,KACCY,OAAOC,KAAKL,IAAgBvN,KAAI,SAACuS,EAAc7E,GAAf,OAEzB,kBAAC,WAAD,CAAUtK,IAAKC,eACf,yBAAKK,UAAU,OACX,yBAAKA,UAAU,WACX,2BAAOA,UAAU,SACjB,+BACA,4BAAI,wBAAIA,UAAU,QAAQ6O,GAAoBpF,IAAoBA,GAAiBnN,KAAI,SAACC,EAAKyN,GAAN,OAAe,wBAAItK,IAAKC,eAASgK,GAAuBpN,IArd/HuS,EAqdgKD,EArdrJC,EAAO1S,MAAM,KAAK2S,OAAO,IAqd2I/E,IAAQI,YArdxL,IAAC0E,SAydpB,yBAAK9O,UAAU,UACf,2BACA,+BACI,2BACAiM,UAAU,EAAMxQ,KAAK,QAAQyQ,QAASrC,GAAegF,GAAetB,WACpE,0BACA3N,QAAS,WACLnD,QAAQC,IAAI,WACZ,IAAIqN,EAAQF,GACZE,EAAM8E,GAAetB,UAAaxD,EAAM8E,GAAetB,SACvD9Q,QAAQC,IAAIqN,GACZD,GAAkBC,GAAQ5B,GAAaD,KAExC2B,GAAegF,GAAetB,SAC/B,kBAAC,WAAD,KAAU,0BAAMvN,UAAU,sCAAqC,kBAACmM,EAAA,EAAD,iBAArD,aACV,kBAAC,WAAD,KAAU,0BAAMnM,UAAU,+BAAqC,kBAACmM,EAAA,EAAD,cAArD,mBAKdtC,GAAegF,GAAetB,SAC5B,kBAAC,WAAD,KACA,yBAAKvN,UAAU,UACf,2BACA,+BACI,2BACAiM,UAAU,EAAMxQ,KAAK,QAAQyQ,QAASrC,GAAegF,GAAetF,UACpE,0BACA3J,QAAS,WAEL,IAAImK,EAAQF,GACZE,EAAM8E,GAAetF,SAAYQ,EAAM8E,GAAetF,QAEtDO,GAAkBC,GAAQ5B,GAAaD,KAExC2B,GAAegF,GAAetF,QAC/B,kBAAC,WAAD,KAAU,0BAAMvJ,UAAU,sCAAqC,kBAACmM,EAAA,EAAD,iBAArD,YACV,kBAAC,WAAD,KAAU,0BAAMnM,UAAU,+BAAqC,kBAACmM,EAAA,EAAD,cAArD,qBAKhB,yBAAKnM,UAAU,YACf,yBAAKA,UAAU,UAAS,uBAAGA,UAAU,QAAb,oBACxB,kBAAC,YAAD,CACI9C,GAAIyC,cACJ4M,EAAG,EACHjJ,OAAQ,SAACnD,GACL,IAAI4J,EAAQF,GACZE,EAAM8E,GAAeH,gBAAkBvO,EAAEC,OAAOH,MAChD6J,GAAkBC,GAAQ5B,GAAaD,IAE3CuE,aAAc5C,GAAegF,GAAeH,kBAEhD,yBAAK1O,UAAU,YACf,yBAAKA,UAAU,UAAS,uBAAGA,UAAU,QAAb,iBACxB,kBAAC,YAAD,CACI9C,GAAIyC,cACJ4M,EAAG,EACH9Q,KAAK,SACL6H,OAAQ,SAACnD,GACL,IAAI4J,EAAQF,GACZE,EAAM8E,GAAevG,MAAQkF,WAAWrN,EAAEC,OAAOH,OACjD6J,GAAkBC,GAAQ5B,GAAaD,IAE3CuE,aAAc5C,GAAegF,GAAevG,QAE9CuB,GAAegF,GAAerG,QAAUqB,GAAegF,GAAerG,OAAOzI,OAAQ,EACnF,kBAAC,WAAD,KACA,uBAAGC,UAAU,mBAAb,kBACC6J,GAAegF,GAAerG,OAAOlM,KAAI,SAAC0S,EAAMC,GAAP,OACtC,kBAAC,WAAD,CAAUvP,IAAKC,eACf,yBAAKK,UAAU,OACf,kBAAC,YAAD,CACA9C,GAAIyC,cACJ4M,EAAG,EACHjJ,OAAQ,SAACnD,GACL,IAAI4J,EAAQF,GACZE,EAAM8E,GAAerG,OAAOyG,GAAW9O,EAAEC,OAAOH,MAChD6J,GAAkBC,GAAQ5B,GAAaD,IAE3CuE,aAAcuC,IAEd,yBAAKhP,UAAU,UACX,yBACAJ,QAAS,WACL,IAAImK,EAAQF,GACZE,EAAM8E,GAAerG,OAASuB,EAAM8E,GAAerG,OAAOkE,QAAO,SAACnQ,EAAK2S,GAAN,OAAgBA,GAASD,KAC1FnF,GAAkBC,GAAQ5B,GAAaD,IAE3ClI,UAAU,wBANV,IAMkC,uBAAGA,UAAU,kBAAb,UANlC,YAaR,uBAAGA,UAAU,0BAAb,uBAEA,yBAAKA,UAAU,kBACX,yBACAJ,QAAS,WACL,IAAImK,EAAQF,GACZE,EAAM8E,GAAerG,OAAOjJ,KAAK,IACjCuK,GAAkBC,GAAQ5B,GAAaD,IAE3ClI,UAAU,sCAAqC,uBAAGA,UAAU,kBAAb,SAEnD,yBAAKA,UAAU,UAAf,eACE6J,GAAegF,GAAetE,WAAWjO,KAAK,SAAC6Q,EAAIgC,GAAL,OAC5C,kBAAC,OAAD,CACAzP,IAAKC,cACLoN,OAAO,EACPC,QAAS,KACTpN,QAAS,WACL,IAAImK,EAAQF,GACZE,EAAM8E,GAAetE,WAAaR,EAAM8E,GAAetE,WAAWmC,QAAO,SAACnQ,EAAKoQ,GAAN,OAAkBA,GAAWwC,KACtGrF,GAAkBC,GAAQ5B,GAAaD,IAE3ClI,UAAU,6BAEV,2BAAImN,OAGR,kBAAC,YAAD,CACIjQ,GAAIyC,cACJ4M,EAAG,GACHlM,UAAW,SAACF,GAAK,GAAgB,IAAbA,EAAEG,QAAc,CAChC,IAAIyJ,EAAQF,GACZE,EAAM8E,GAAetE,WAArB,sBAAuCR,EAAM8E,GAAetE,YAA5D,YAA4EpK,EAAEC,OAAOH,MAAMgN,OAAOzQ,cAAcJ,MAAM,KAAKsQ,QAAO,SAAAnQ,GAAI,OAAG,CAAC,IAAI,GAAG,MAAM4N,SAAS5N,QAChKuN,GAAkBC,GAAQ5B,GAAaD,KAE3CuE,aAAc,MAGvB,UAKf,yBAAKzM,UAAU,UACX,yBACAJ,QAAS,WAAMqI,EAAS,mBACxBjI,UAAU,gBAFV,UAOL,KAEGoP,GAAuC,GAAd/F,GAC3B,0BAAMrJ,UAAU,OACZ,kBAAC,YAAD,CACI9C,GAAIyC,cACJ4M,EAAG,EACH9Q,KAAK,SACL+Q,MAAO,gBACPtM,SAAU,SAACC,GAAMoI,EAASiF,WAAWrN,EAAEC,OAAOH,SAC9CA,MAAOqI,IAEX,yBAAKtI,UAAU,UACX,2BACA,+BACI,2BACAiM,UAAU,EAAMxQ,KAAK,QAAQyQ,QAAS3C,KACtC,0BACA3J,QAAS,WAAM4J,IAAYD,IAAUpB,GAAaD,KAC/CqB,GACD,kBAAC,WAAD,KAAU,0BAAMvJ,UAAU,sCAAqC,kBAACmM,EAAA,EAAD,iBAArD,YACV,kBAAC,WAAD,KAAU,0BAAMnM,UAAU,+BAAqC,kBAACmM,EAAA,EAAD,cAArD,qBAKpB,yBAAKnM,UAAU,mBAEf,yBAAKA,UAAU,WAAU,wBAAIA,UAAU,QAAd,aACxBwI,EAAOlM,KAAI,SAAC0S,EAAMhF,GAAP,OACZ,kBAAC,WAAD,CAAUtK,IAAKC,eACX,kBAAC,YAAD,CACAzC,GAAIyC,cACJ4M,EAAG,GACHC,MAAK,gBAAWxC,EAAX,OACL1G,OAAQ,SAACnD,GACN,IAAI4J,EAAQvB,EACZuB,EAAMC,GAAS7J,EAAEC,OAAOH,MACxBxD,QAAQC,IAAIqN,GACXtB,EAAUsB,IAEd0C,aAAcuC,IAEd,yBAAKhP,UAAU,UACX,yBAAKJ,QAAS,WACV,IAAImK,EAAQvB,EACZuB,EAAQA,EAAM2C,QAAO,SAACnQ,EAAKoQ,GAAN,OAAmBA,GAAW3C,KACnDvB,EAAUsB,GAAQ5B,GAAaD,IAC/BlI,UAAU,+BAA8B,uBAAGA,UAAU,kBAAb,gBAIxD,yBAAKA,UAAU,kBACX,yBAAKJ,QAAS,WAAM6I,EAAU,GAAD,mBAAKD,GAAL,CAAa,OAAQxI,UAAU,sCAAqC,uBAAGA,UAAU,kBAAb,SAErG,6BACA,6BACA,6BACA,yBAAKA,UAAU,kBACX,yBACIJ,QAAS,WAAMqI,EAAS,mBACxBjI,UAAU,gBAFd,UAOL,KAEGqP,GACF,yBAAKrP,UAAU,eACX,uBAAGA,UAAU,cACRsP,KAAKC,UAAU/N,EAAQ,KAAK,IAIjC,yBAAKxB,UAAU,OACX,yBAAKA,UAAU,cACX,uBAAGA,UAAU,cACT,0BAAMA,UAA4B,qBAAhBqH,GAAsC,QAAU,WAAaG,MAGvF,yBAAKxH,UAAU,iBACX,yBAAKJ,QAAS,WAAKqI,EAAS,SAAUjI,UAAU,iBAC5C,uBAAGA,UAAU,kBAAb,QADJ,WAIJ,yBAAKA,UAAU,iBACS,wBAAlBqH,GAA2C,yBAAKrH,UAAU,eAAeJ,QAASkM,IAAgB,uBAAG9L,UAAU,kBAAb,OAAvD,mBAAoH,GAC7I,2BAAlBqH,GAA8C,yBAAKrH,UAAU,gBAAf,kBAAqD,GACjF,qBAAlBqH,GAAwC,yBAAKrH,UAAU,cAAcJ,QAASkM,IAAtC,YAA+D,uBAAI9L,UAAU,kBAAd,UAA/D,UAAuH,GAC7I,uBAAlBqH,GAA0C,yBAAKrH,UAAU,gBAAe,uBAAIA,UAAU,kBAAd,YAA9B,YAA0F,MAKhJwP,GAAY,CACd,KAA0B,CAACC,KAAM1D,GAA0B2D,MAAM,EAAsBC,SAAS,QAChG,WAA0B,CAACF,KAAM/B,GAA0BgC,KAAmB,GAAZrG,GAAqBsG,SAAS,eAChG,eAA0B,CAACF,KAAMb,GAA0Bc,KAAmB,GAAZrG,GAAqBsG,SAAS,mBAChG,kBAA0B,CAACF,KAAML,GAA0BM,KAAmB,GAAZrG,GAAqBsG,SAAS,cAChG,eAA0B,CAACF,KAAMrD,GAA0BsD,MAAM,EAAsBC,SAAS,eAChG,YAA0B,CAACF,KAAMpD,GAA0BqD,MAAM,EAAsBC,SAAS,YAChG,SAA0B,CAACF,KAAM7C,GAA0B8C,MAAM,EAAsBC,SAAS,kBAChG,qBAA0B,CAACF,KAAM3C,GAA0B4C,MAAM,EAAsBC,SAAS,uBAChG,YAA0B,CAACF,KAAMJ,GAA0BK,MAAM,EAAsBC,SAAS,mBAGpG,OACI,yBAAK3P,UAAU,mBACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,eAAd,OAAgC,0BAAMA,UAAU,eAAhB,YAChC,kBAAC,cAAD,KACI,kBAAC,kBAAD,CACAe,OACI,uBAAGf,UAAU,0BAAb,iBAGA,yBAAKA,UAAU,6BACViK,OAAOC,KAAKsF,IAAWlT,KAAI,SAACC,GAAD,OAC3BiT,GAAUjT,GAAMmT,KACf,yBAAKhQ,IAAKC,cAAQK,UAAU,eAAeJ,QAAS,WAAKqI,EAAS1L,KAAUiT,GAAUjT,GAAMoT,UAC5F,yBAAKjQ,IAAKC,cAAQK,UAAU,wBAAwBJ,QAAS,WAAKqI,EAAS1L,KAAUiT,GAAUjT,GAAMoT,aAEvG,uBAAGC,KAAK,eAAc,yBAAKlQ,IAAKC,cAAQK,UAAU,cAAcJ,QAAS,WAAKmI,EAAW,MAAnE,qBAIhCyH,GAAUxH,GAAOyH,UEptBnC,IASetS,cACXC,aAVoB,SAACC,GACrB,MAAO,MAEgB,SAACnC,GACxB,MAAO,CACH2U,qBAAsB,SAAC9I,EAAWsC,EAAYyG,EAAQvG,GAAYrO,ED3HrC,SAAC6L,EAAWsC,EAAYyG,EAAQvG,GAEjE,OADA9M,QAAQC,IAAIqK,EAAWsC,EAAYyG,EAAQvG,GACpC,SAACrO,EAAUC,EAAX,GAAmD,EAA7BC,YAA8B,IACjDc,GAAYb,EADoC,EAAhBA,gBAEtC,GAAGgO,EAAW,CACV,IAAI0G,EAAW,GACfA,EAAS,kBAAD,OAAmBD,EAAnB,aAAuCvG,EAC/CrN,EAAUS,WAAW,YAAYM,IAAI8J,GAAWxC,OAAQwL,QAExD7T,EAAUS,WAAW,YAAYM,IAAI8J,GAAWxC,OAAO,CAAEgF,aCkHesG,CAAqB9I,EAAWsC,EAAYyG,EAAQvG,SAMpIlP,IAFW8C,EAnHf,YAA6D,IAAD,MAAhCqE,EAAgC,EAAhCA,QAASqO,EAAuB,EAAvBA,qBAC3BG,EAAW,UAAG/F,OAAOC,KAAP,iBAAY1I,QAAZ,IAAYA,OAAZ,EAAYA,EAASqI,sBAArB,QAAuC,IAAI+D,cAA9C,QAAwD,GACnEnE,EAAgB,iBAAIjI,QAAJ,IAAIA,OAAJ,EAAIA,EAASiI,wBAAb,QAAiC,GAEjDwG,EAA6BzO,GAA+B,GAApBA,EAAQ6H,YAAoB2G,EACtE,yBAAKhQ,UAAU,UAAUN,IAAKC,eAC1B,yBAAKK,UAAU,mBACf,yBAAKA,UAAU,gBACX,2BACAA,UAAU,eACN,+BACE,wBAAIN,IAAKC,eACT,4BAAI,kBAAC,IAAD,CAASa,GAAE,uBAAkBgB,EAAQtE,IAAM8C,UAAU,QAAQwB,EAAQtE,MAEzE,4BACI,8CAAmB,0BAAM8C,UAAU,wBAAwBwB,EAAQ4G,cACnE,wBAAIpI,UAAU,0BAAd,cAAqDwB,EAAQ6H,WAAY,kBAAC8C,EAAA,EAAD,CAAMnM,UAAU,2BAAhB,YAA6D,kBAACmM,EAAA,EAAD,CAAMnM,UAAU,oBAAhB,aAI/IgQ,EAAY1T,KAAI,SAAA4T,GAAO,OACvB1O,EAAQqI,eAAeqG,GAAS3C,SACjC,kBAAC,WAAD,CAAU7N,IAAKC,eACf,uBAAGK,UAAU,oBAAb,eACiBwB,EAAQqI,eAAeqG,GAASxB,iBAGjD,2BAAO1O,UAAU,eACjB,+BACA,wBAAIA,UAAU,SACV,0CAAgBkQ,GAChB,6BA5BIJ,EA6BYI,EA7BDJ,EAAO1T,MAAM,KAAK0D,MAAM,GAAGxD,KAAI,SAAAC,GAAI,OAAE4T,SAAS5T,OA6BpCD,KAAI,SAACC,EAAKyN,GAAN,OACzB,uBAAGhK,UAAU,aAAaN,IAAKC,eAC3B,8BAAO8J,EAAiBO,GAAxB,MAAwC,0BAAMhK,UAAU,cAAcwB,EAAQmI,uBAAuBF,EAAiBO,IAAQzN,GAAM6N,WAA5F,IAAwG,mCAIxJ,4BACI,2BACA,2BAAOxK,QAAS,WACZiQ,EAAqBrO,EAAQtE,GAAIsE,EAAQ6H,WAAY6G,GAAU1O,EAAQqI,eAAeqG,GAAS3G,WAE/F,2BAAOyC,KAAI,UAAKxK,EAAQtE,GAAb,YAAmBgT,EAAnB,iBAA2CjE,UAAU,EAAMxQ,KAAK,QAAQyQ,QAAoD,GAA3C1K,EAAQqI,eAAeqG,GAAS3G,UAC5H,8BAAQ/H,EAAQqI,eAAeqG,GAAS3G,QAAU,kBAAC,WAAD,KAAU,0BAAMvJ,UAAU,sCAAqC,kBAACmM,EAAA,EAAD,iBAArD,aACzB,kBAAC,WAAD,KAAU,0BAAMnM,UAAU,+BAAqC,kBAACmM,EAAA,EAAD,cAArD,wBAQzD,+BAAI,kBAAC,UAAD,MAAJ,MAEG,KApDI,IAAC2D,MAsDZ,kBAAC,UAAD,QAGL,KAEGM,EAAgC5O,GAA+B,GAApBA,EAAQ6H,WACrD,yBAAKrJ,UAAU,UAAUN,IAAKC,eAC9B,yBAAKK,UAAU,mBACf,yBAAKA,UAAU,gBACf,2BAAOA,UAAU,eACb,+BACI,wBAAIN,IAAKC,eACL,4BAAI,kBAAC,IAAD,CAASa,GAAE,uBAAkBgB,EAAQtE,IAAM8C,UAAU,QAAQwB,EAAQtE,KACzE,wBAAI8C,UAAU,0BAAd,cAAqDwB,EAAQ6H,WAAY,kBAAC8C,EAAA,EAAD,CAAMnM,UAAU,2BAAhB,YAA6D,kBAACmM,EAAA,EAAD,CAAMnM,UAAU,oBAAhB,UACtI,4BACI,+BACI,2BAAOvE,KAAK,QAAQuQ,KAAI,UAAKxK,EAAQtE,GAAb,kBAAiCA,GAAE,UAAKsE,EAAQtE,GAAb,kBAAiC+O,UAAU,EAAMC,QAA4B,GAAnB1K,EAAQ+H,UAC7H,0BACA3J,QAAS,WAAMiQ,EAAqBrO,EAAQtE,GAAIsE,EAAQ6H,WAAY,MAAO7H,EAAQ+H,WAC9E/H,EAAQ+H,QACP,kBAAC,WAAD,KAAU,0BAAMvJ,UAAU,sCAAqC,kBAACmM,EAAA,EAAD,iBAArD,aACV,kBAAC,WAAD,KAAU,0BAAMnM,UAAU,+BAAqC,kBAACmM,EAAA,EAAD,cAArD,uBAOhC,uBAAGnM,UAAU,cAAb,iBAAyCwB,EAAQ4G,aACjD,kBAAC,UAAD,MACA,kBAAC,UAAD,MACA,kBAAC,UAAD,SAIL,KAEH,OACI,kBAAC,WAAD,KACM5G,EACE,kBAAC,WAAD,KAC4B,GAAtBA,EAAQ6H,WAAsB4G,EAA4B,GACpC,GAAtBzO,EAAQ6H,WAAsB+G,EAA+B,IAEpE,SCzBAC,MA5Ef,WAA0B,IAAD,EACfC,EAAY,CACd3T,WAAY,WACZM,IAAK,WAHY,EAKsBW,mBAAS0S,GAL/B,mBAKdC,EALc,KAKCC,EALD,KAMrB3K,8BAAoB,CAAC0K,IAErB,IAAMpP,EAAQ,UAAGpD,aAAY,SAAAV,GAAK,OAAGA,EAAMnB,UAAU+B,QAAQkD,mBAA/C,QAA0D,GARnD,EASiBvD,mBAAS,IAT1B,mBASd6S,EATc,KASDC,EATC,KAUrBlW,qBAAU,WACN,OAAG8U,KAAKC,UAAUe,KAAehB,KAAKC,UAAUgB,IAAiB9T,QAAQC,IAAI,cAAqBgU,EAAe,KAE7GtP,mBAASD,GACTA,GAA+B,GAAnBA,EAASpB,OAClB2Q,EAAe,mBADuBA,EAAe,sBAD7BA,EAAe,sBAGhD,CAACvP,IAhBkB,MAiB6BvD,mBAAS,IAjBtC,mBAiBd+S,EAjBc,KAiBKC,EAjBL,KAkCfC,EACF,yBAAK7Q,UAAU,uBACf,yBAAKA,UAAU,eACf,2BACE9C,GAAG,cACHzB,KAAK,OACLwE,MAAO0Q,EACPzQ,SAAW,SAAAC,GAAC,OAAEyQ,EAAqBzQ,EAAEC,OAAOH,QAC5CI,UAAY,SAAAF,GAAmB,IAAXA,EAAEG,SAxBA,WACxBoQ,EAAe,oBACf,IAAI3G,EAAQ4G,EAAkB1D,OAG1BuD,EADQ,OAATzG,EACkB,CACbpN,WAAY,YAGC,CACbA,WAAY,WACZM,IAAK8M,IAauB+G,MAEpC,kBAAC,OAAD,iBAIEC,EAAkB5P,GAAYA,EAASpB,OAAO,EAChD,yBAAKC,UAAU,OACP,yBAAKA,UAAU,UAAUN,IAAKC,eACzBwB,EAAS7E,KAAI,SAAAkF,GAAO,OACjB,kBAAC,EAAD,CAAmB9B,IAAKC,cAAQ6B,QAASA,SAI1D,KAGH,OACI,yBAAKxB,UAAU,sBACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,eAAd,WAAoC,0BAAMA,UAAU,cAAhB,WAApC,KACA,yBAAKA,UAAU,aACV6Q,GAEY,IAAfJ,EAAoB,kBAAC,EAAD,KAAU,uBAAGzQ,UAAU,oBAAb,iCAA8E,KAC7F,oBAAfyQ,EAAoC,kBAAC,EAAD,KAAU,uBAAGzQ,UAAU,oBAAb,kBAA+D,KAC9F,sBAAfyQ,EAAsC,kBAAC,EAAD,KAAU,uBAAGzQ,UAAU,oBAAb,qBAAkE,KACnG,mBAAfyQ,EAAmCM,EAAkB,Q,kBCqHxD5T,kBACX9C,IADW8C,EA1Lf,WAAwB,IAAD,QACb7C,EAAUwD,cACZkT,EAAWxS,IAAYC,MAAMnE,EAAQoE,SAASjB,QAC9CwT,EAAK,oBAAGD,SAAH,aAAG,EAAUE,2BAAb,QAAoC,QACzCC,EAAM,oBAAEH,SAAF,aAAE,EAAUI,uBAAZ,QAA+B,GAJtB,EAOmCxT,mBAASqT,GAP5C,mBAOZC,EAPY,KAOSG,EAPT,OAQ2BzT,mBAASuT,GARpC,mBAQZC,EARY,KAQKE,EARL,KASbC,EAAmB,CAAC,WAAW,UAAU,SAT5B,EAUI3T,mBAAS,IAVb,mBAUZlB,EAVY,KAUP8U,EAVO,KAcbC,EAAW,SAACL,EAAiBF,GAC/B,MAAsB,OAAnBE,EAAgC,GACJ,YAAvBF,EAAyC,CAACtU,MAAO,CAAC,UAAW,KAAMwU,IAC5C,eAAvBF,EAA4C,CAACtU,MAAO,CAAC,cAAe,KAAMwU,IACnD,SAAvBF,EAAuC,CAACjU,IAAKmU,QAAhD,GAlBU,EAqBOxT,mBAAS6T,EAASN,EAAQF,IArBjC,mBAqBZ1S,EArBY,KAqBLmT,EArBK,KAsBnB7L,8BAAoB,yBAAClJ,WAAY,mBAAsB4B,GAApC,IAA2CoT,QAAS,qBACvE,IAAMC,EAAkB7T,aAAY,SAAAV,GAAK,OAAGA,EAAMnB,UAAU+B,QAAQ2T,mBAvBjD,EAwBShU,mBAAS,IAxBlB,mBAwBZiU,EAxBY,KAwBJC,EAxBI,KA0BnBtX,qBAAU,WACN,OAAI4G,mBAASwQ,GACTA,GAA6C,GAA1BA,EAAgB7R,YACvC+R,EAAUC,IAAEC,QAAQJ,EAAgB,CAAC,aAAa,CAAC,UADSJ,EAAO,aAD7BA,EAAO,eAG/C,CAACI,IAEH,IAAMK,EAAgB,SAACb,EAAiBF,GAEpCY,EAAU,IACVN,EAAO,aACPE,EAASD,EAASL,EAAgBF,KAItC1W,qBAAU,WACN,OAAOF,EAAQI,OAAR,sBAAe,kCAAAuB,EAAA,6DAClBQ,QAAQC,IAAI,kBACZsU,EAAWxS,IAAYC,MAAMnE,EAAQoE,SAASjB,QAC9C0T,EAAM,oBAAEH,SAAF,aAAE,EAAUI,uBAAZ,QAA+B,GAErCH,EAAK,oBAAGD,SAAH,aAAG,EAAUE,2BAAb,QAAoC,QACzCG,EAAuBJ,GACvBK,EAAmBH,GACnBc,EAAcd,EAAQF,GARJ,iEAWxB,CAAC3W,IAEHE,qBAAU,WACNiC,QAAQC,IAAI,SAASmV,KACvB,CAACA,IAEH,IAAMK,EAAoB,WACtB5X,EAAQiF,KAAR,uCAA6C6R,EAAgBhV,MAAM,KAAKqS,KAAK,IAA7E,gCAAwGyC,KAEtGiB,EAAmB,WACrB7X,EAAQiF,KAAR,iBAGE6S,EACF,kBAAC,WAAD,CACAlV,GAAG,sBACH8P,QAAS,CACPqF,UAAW,OACXC,aAAa,EACbC,cAAc,EACdC,gBAAgB,EAChBC,UAAW,KACXC,cAAc,EACdC,OAAO,EACPC,WAAY,IACZC,WAAY,KACZC,aAAc,KACdC,UAAW,KACXC,YAAa,KACbC,YAAa,KAEfC,QACE,yBAAKlT,UAAU,mCAAoCkR,EAAoBpR,MAAM,EAAE,KAAMoR,EAAoBnR,OAAO,GAAI,KAAK,IAAI,YAlB/H,OAqBCwR,QArBD,IAqBCA,OArBD,EAqBCA,EAAkBjV,KAAK,SAAAmD,GAAY,OAAK,uBAAGC,IAAKC,cAAQC,QAAS,WAAKyR,EAAuB5R,KAAiBA,OAI7GoR,EACF,yBAAK7Q,UAAU,uBACf,yBAAKA,UAAU,eACdoS,EACD,2BACIlV,GAAG,cACHzB,KAAK,OACLwE,MAAOmR,EACPlR,SAAU,SAACC,GAAMmR,EAAmBnR,EAAEC,OAAOH,QAC7CI,UAAW,SAACF,GAAqB,IAAbA,EAAEG,SAClB4R,OAIR,yBAAKlS,UAAU,sBAAsBJ,QAAS,WAAMsS,MAChD,kBAAC,OAAD,kBAMFiB,EACF,yBAAKnT,UAAU,6BACX,yBAAKA,UAAU,OACX,yBAAKJ,QAAS,WAAMuS,IAAoBX,EAAO,aAAcM,EAAU,IAAKJ,EAAS,KAAO1R,UAAU,aAAY,yBAAKA,UAAU,iBAAf,mBAClH,yBAAKJ,QAAS,WAAMuS,IAAoBX,EAAO,aAAcM,EAAU,IAAKJ,EAAS,CAAC9U,MAAM,CAAC,SAAS,MAAK,MAAWoD,UAAU,aAAY,yBAAKA,UAAU,gBAAf,oBAC5I,yBAAKJ,QAAS,WAAMuS,IAAoBX,EAAO,aAAcM,EAAU,IAAKJ,EAAS,CAAC9U,MAAM,CAAC,SAAS,MAAM,MAAYoD,UAAU,aAAY,yBAAKA,UAAU,eAAf,wBAKpJoT,EAAgBvB,GAAUA,EAAO9R,OAAO,EAC1C,yBAAKC,UAAU,eACf,kBAAC,cAAD,CAAaa,WAAW,GACnBgR,EAAOvV,KAAI,SAAC+W,EAAMrJ,GAAP,OACR,kBAAC,kBAAD,CACItK,IAAKC,cACLmB,UAAU,EACVC,OACA,uBAAGf,UAAU,cAAb,UACW,0BAAMA,UAAU,gCAAgCqT,EAAMnW,KAGjEgE,KAAK,OAEL,yBAAKlB,UAAU,OACX,yBAAKA,UAAU,oBACX,4BACEqT,EAAMC,OACL,0BAAMtT,UAAU,QAAhB,IAAwB,kBAAC,OAAD,iBAAxB,mBACA,0BAAMA,UAAU,oBAAhB,IAAoC,kBAAC,OAAD,cAApC,uBAGP,yBAAKA,UAAU,oBACX,kBAAC,IAAD,CAASQ,GAAI,UAAU6S,EAAMnW,IACzB,yBAAK8C,UAAU,gBAAf,iBAGR,yBAAKA,UAAU,oBACX,uBAAGA,UAAU,cAAcuT,IAAOF,EAAMzL,UAAU4L,UAAUC,OAAO,uBAEvE,yBAAKzT,UAAU,WACf,yBAAKA,UAAU,oBACX,uBAAGA,UAAU,UAAb,iBAAoC,0BAAMA,UAAU,cAAcqT,EAAMK,iBAS5F,kBAAC,WAAD,KACa,IAAPhX,EAAY,kBAAC,EAAD,KAAU,wBAAIsD,UAAU,UAAd,4CAAiF,KAClG,aAALtD,EAAmB,kBAAC,EAAD,KAAU,wBAAIsD,UAAU,UAAd,mBAAwD,KAChF,aAALtD,EAAmB,kBAAC,EAAD,KAAU,wBAAIsD,UAAU,UAAd,oBAAyD,MAIhG,OACI,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,eAAd,WAAoC,0BAAMA,UAAU,cAAhB,SAApC,KACA,yBAAKA,UAAU,aACV6Q,EACD,wBAAI7Q,UAAU,qBAAd,MACCmT,GAGJC,OCxLJO,GAAc,SAACrL,GACxB,IAPyBrI,EAOrB2T,GAPqB3T,EAOIqI,EANjC,IAAIuL,KAAKC,aAAa,QAAS,CAC7BhN,MAAO,WACPiN,SAAU,QACTN,OAAOxT,IAIF+T,EAASJ,EAAU,GACnBK,EAAUL,EAAUxX,MAAM,KAAK,GAAG0D,MAAM,GACxCoU,EAAUN,EAAUxX,MAAM,KAAK,GACnC,OACE,0BAAM4D,UAAU,iBACbgU,EAAO,IAAIC,EAAQ,IAAI,6BAAMC,KCwQtC,IAWA/W,eACIC,aAZoB,SAACC,GACrB,MAAO,MAGgB,SAACnC,GACxB,MAAO,CACHiZ,kBAAoB,SAAC5P,GAAWrJ,EC7RN,SAACqJ,GAC/B,OAAO,SAACrJ,EAAUC,EAAX,GAAmD,EAA7BC,YAEzB,OADkBC,EADoC,EAAhBA,gBAErBsB,WAAW,mBAAmBM,IAAIsH,EAAO6P,OAAO7P,OAAOA,EAAO2C,OD0RtCiN,CAAkB5P,SAO/DlK,IAFJ8C,EApRA,SAAeQ,GAAM,IAEVwW,EAAqBxW,EAArBwW,kBACDE,EAAO1W,EAAMqJ,MAAMC,OAAOoN,KAChC5X,QAAQC,IAAI2X,GACZxO,8BAAoB,CAChBlJ,WAAY,kBACZM,IAAMoX,EACN1C,QAAQ,MAAD,OAAQ0C,KAEnB,IAAMC,EAAevW,aAAY,SAAAV,GAAK,OAAGA,EAAMnB,UAAU+B,QAAhB,aAA8BoW,OAVtD,EAWSzW,qBAXT,mBAWVyV,EAXU,KAWHkB,EAXG,OAYM3W,mBAAS,IAZf,mBAYVlB,EAZU,KAYL8U,EAZK,KAajBhX,qBAAU,WACF4G,mBAASkT,GACTA,GAAuC,GAAvBA,EAAavU,OACjCwU,EAASD,EAAa,IADyB9C,EAAO,aADzBA,EAAO,aAGtC,CAAC8C,IAEH,IAnBiB,EAoBqB1W,mBAAQ,OAACyV,QAAD,IAACA,OAAD,EAACA,EAAOK,QApBrC,mBAoBVc,EApBU,KAoBGC,EApBH,OAqBmB7W,mBAAS,IArB5B,mBAqBV8W,EArBU,KAqBEC,EArBF,KAuBjBna,qBAAU,WACNiC,QAAQC,IAAI,iBAAiB8X,KAC/B,CAACA,IAEH,IAeMI,EAAW,SAAXA,IACFnY,QAAQC,IAAI,eAAgBkY,GAC5BC,EAAY,CACRT,MAAOC,EACPnN,KAAK,CACG4N,SAAS,CACL,CAACjV,MAAO6U,EAAYK,WAAY,IAAIlN,OADhC,0BAEDwL,QAFC,IAEDA,OAFC,EAEDA,EAAOyB,WAEdE,UAAW,IAAInN,SAezBgN,EAAc,SAACtQ,GACjB4P,EAAkB5P,IAGhB0Q,EAAW5B,GAASA,EAAMnV,KAC5B,yBAAK8B,UAAU,QACP,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,6BACf,+BACA,4BAAI,uCAAgB,qCAAc,uCAAgB,yCACjDqT,EAAMnV,KAAK5B,KAAI,SAAAC,GAAI,OACpB,wBAAImD,IAAKC,eAAQ,4BAAKpD,EAAK6L,aAAiB,4BAAK7L,EAAK2Y,cAAkB,4BAAK3Y,EAAK4Y,SAAa,4BAAK5Y,EAAK2Y,aAAa3Y,EAAK4Y,aAE3H,4BAAI,6BAAS,6BAAS,qCAAc,wBAAInV,UAAU,WAAW2T,GAAYN,EAAMnV,KAAKkX,QAAO,SAACC,EAAG9Y,GAAJ,OAAY8Y,EAAG9Y,EAAK2Y,aAAa3Y,EAAK4Y,UAAS,UAKnJ,KAEGG,EAAcjC,EAChB,yBAAKrT,UAAU,WACP,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,6BACf,wBAAIA,UAAU,0BAAd,WACA,+BACA,+BACA,4BAAI,wBAAIA,UAAU,cAAd,eAA2C,wBAAIA,UAAU,cAAcqT,EAAMkC,cACjF,4BAAI,wBAAIvV,UAAU,cAAd,YAAwC,wBAAIA,UAAU,cAAcqT,EAAMmC,UAC9E,4BAAI,wBAAIxV,UAAU,cAAd,SAAqC,wBAAIA,UAAU,cAAcqT,EAAMnW,UAMpF,KAEGuY,EAAcpC,GAASA,EAAMqC,QAC/B,yBAAK1V,UAAU,WACX,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,6BACf,wBAAIA,UAAU,0BAAd,WACA,+BACA,+BACA,4BAAI,yCAAkB,4BAAKqT,EAAMqC,QAAQC,WACzC,4BAAI,4CAAqB,4BAAKtC,EAAMqC,QAAQE,cAC5C,4BAAI,oCAAa,4BAAKvC,EAAMqC,QAAQG,OACpC,4BAAI,qCAAc,4BAAKxC,EAAMqC,QAAQrY,QACrC,4BAAI,uCAAgB,4BAAKgW,EAAMqC,QAAQI,UACvC,4BAAI,uCAAgB,4BAAKzC,EAAMqC,QAAQK,UACvC,4BAAI,wCAAiB,4BAAK1C,EAAMqC,QAAQM,UACxC,4BAAI,4CAAqB,4BAAK3C,EAAM4C,mBAMzC,KACGC,EAAa7C,EACf,yBAAKrT,UAAU,UACX,yBAAKA,UAAU,mCACf,yBAAKA,UAAU,gCACf,wBAAIA,UAAU,0BAAd,UACI,yBAAKA,UAAU,OACbqT,EAAMC,OACR,yBAAKtT,UAAU,sBACX,yBAAKA,UAAU,iBAAgB,wBAAIA,UAAU,mBAAkB,kBAAC,OAAD,iBAAhC,kBAC/B,yBAAKA,UAAU,iBAAgB,yBAAKJ,QAAS,WA5EzDiV,EAAY,CACRT,MAAOC,EACPnN,KAAK,CACDoM,QAAQ,EACR0B,UAAW,IAAInN,SAwEyD7H,UAAU,eAA/C,iBAGnC,yBAAKA,UAAU,kBAAiB,wBAAIA,UAAU,+BAA8B,kBAAC,OAAD,cAA5C,sBAEhC,yBAAKA,UAAU,QACf,yBAAKA,UAAU,kBAAf,mBACoB,0BAAMA,UAAU,cAAcqT,EAAMK,SAEtDL,EAAMC,OACR,kBAAC,WAAD,KACA,yBAAKtT,UAAU,qBACf,kBAAC,SAAD,CACE9C,GAAG,kBACHiZ,UAAU,EACVjW,SAAU,SAACC,GAAMsU,EAAetU,EAAEC,OAAOH,QACzCsM,EAAG,GACHS,QAAS,CACPoJ,QAAS,GACTC,gBAAiB,CACfhE,UAAW,OACXC,aAAa,EACbC,cAAc,EACdC,gBAAgB,EAChBE,cAAc,EACdC,OAAO,EACPC,WAAY,IACZC,WAAY,KACZC,aAAc,KACdC,UAAW,KACXC,YAAa,KACbC,YAAa,MAGjBhT,MAAOoT,EAAMK,QAEb,4BAAQ1T,UAAU,aAAasW,UAAQ,EAACrW,MAAM,IAA9C,iBAtJQ,CAAC,eAAgB,yBAA0B,aAAc,aAAc,aAAc,mBAAoB,YAAa,UAAW,yBAA0B,aAuJpJ3D,KAAI,SAAAia,GAAQ,OAC3B,4BAAQvW,UAAU,aAAaC,MAAOsW,GAAWA,QAInD,yBAAKvW,UAAU,cACX,yBACAJ,QAAS,WArJrBnD,QAAQC,IAAI,iBAAiB8X,GAC7BK,EAAY,CACRT,MAAOC,EACPnN,KAAK,CACGwM,OAAQc,EACRM,SAAS,CACL,CAACjV,MAAO2U,EAAaO,WAAY,IAAIlN,OADjC,0BAEDwL,QAFC,IAEDA,OAFC,EAEDA,EAAOyB,WAEdE,UAAW,IAAInN,SA6If7H,UAAU,gBAFV,mBAOD,SAKZ,KAEGwW,EAAgBnD,GAASA,EAAMyB,SACjC,yBAAK9U,UAAU,YACX,yBAAKA,UAAU,mCACf,yBAAKA,UAAU,gCACf,wBAAIA,UAAU,0BAAd,YACA,yBAAKA,UAAU,OACf,yBAAKA,UAAU,WACf,+BACA,+BACCqT,EAAMyB,SAASxY,KAAI,SAAAma,GAAK,OACzB,4BAAI,4BAAKA,EAAM5W,OAAW,4BAAK0T,IAAOkD,EAAM1B,WAAWvB,UAAUC,OAAO,6BAKtD,GAAhBJ,EAAMC,OAAiB,yBAAKtT,UAAU,WACpC,yBAAKA,UAAU,kBACf,kBAAC,YAAD,CACI9C,GAAIyC,cACJ4M,EAAG,EACHC,MAAM,kBACNtM,SAAU,SAACC,GACRwU,EAAcxU,EAAEC,OAAOH,QAE1BI,UAAW,SAACF,GAAqB,IAAbA,EAAEG,UAClBsU,IACAD,EAAc,MAElB1U,MAAOyU,IAEX,yBAAK1U,UAAU,UACX,yBACAJ,QAAW,WACPgV,IACAD,EAAc,KAElB3U,UAAU,sCAAqC,uBAAGA,UAAU,kBAAb,WAG9C,SAMd,KAEGoT,EAAgBC,EAClB,yBAAKrT,UAAU,cAEVsV,EACAY,EACAT,EACAe,EACAvB,GAGL,kBAAC,WAAD,KACa,WAAPvY,EAAoB,kBAAC,EAAD,KAAU,wBAAIsD,UAAU,UAAd,eAAqD,KAC5E,aAAPtD,EAAsB,kBAAC,EAAD,KAAU,wBAAIsD,UAAU,UAAd,kBACf,6BADe,UAEvB,kBAAC,IAAD,CAASQ,GAAG,gBAAe,0BAAMR,UAAU,QAAhB,mBAClB,MAI5B,OACI,yBAAKA,UAAU,cACX,yBAAKA,UAAU,aACdoT,OE7PAsD,GAAqB,SAACxP,GAC/B,OAAO,SAAChM,EAAUC,EAAX,GAAmD,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAGtC,OAFAH,EAAS,CAACO,KAAK,6BACGJ,IACDsB,WAAW,cAAcgL,IAAIT,GAC7C1L,MAAK,WAAKN,EAAS,CAACO,KAAK,4BACzBC,OAAM,SAACC,GAAOT,EAAS,CAACO,KAAK,qBAAsBE,IAAKA,EAAIC,eCuJrE,IAaeuB,eACXC,aAdoB,SAACC,GAErB,OADAZ,QAAQC,IAAIW,GACL,MAEe,SAACnC,GACvB,MAAO,CACHyb,YAAa,SAACzP,GAAQhM,EAAUwb,GAAkBxP,KAClD0P,iBAAkB,SAAC1P,GAAQhM,GDzJxB,SAACA,EAAUC,EAAX,GAAmD,EAA7BC,YAA6B,EAAhBC,aACtCH,EAAS,CAACO,KAAK,2BCyJfob,eAAgB,SAACtS,GAAUrJ,EDzLE,SAACqJ,GAClC,OAAO,SAACrJ,EAAUC,EAAX,GAAmD,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAGtC,OAFAH,EAAS,CAACO,KAAK,gCACGJ,IACDsB,WAAW,cAAcM,IAAIsH,EAAO6P,OAAO7P,OAAOA,EAAO2C,MACzE1L,MAAK,WAAKN,EAAS,CAACO,KAAK,+BACzBC,OAAM,SAACC,GAAOT,EAAS,CAACO,KAAK,wBAAyBE,IAAKA,EAAIC,cCmL3Bkb,CAAqBvS,KAC1DwS,eAAgB,SAAC3C,GAAUlZ,EDhLE,SAACkZ,GAClC,OAAO,SAAClZ,EAAUC,EAAX,GAAmD,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAGtC,OAFAH,EAAS,CAACO,KAAK,gCACGJ,IACDsB,WAAW,cAAcM,IAAImX,GAAO4C,SACpDxb,MAAK,WAAKN,EAAS,CAACO,KAAK,+BACzBC,OAAM,SAACC,GAAOT,EAAS,CAACO,KAAK,wBAAyBE,IAAKA,EAAIC,cC0K3Bqb,CAAqB7C,SAM9D/Z,IAFW8C,EAnLf,SAAsBQ,GAClB,IAAMrD,EAAUwD,cACT8Y,EAAmDjZ,EAAnDiZ,iBAAiBC,EAAkClZ,EAAlCkZ,eAAgBE,EAAkBpZ,EAAlBoZ,eAFf,EAGqBnZ,mBAAS,IAH9B,gCAIuBA,mBAAS,KAJhC,mBAKnBsZ,GALmB,UAKDnZ,aAAY,SAAAV,GAAK,OAAEA,EAAM6Z,oBAE1CC,EAAcxZ,EAAMqJ,MAAMC,OAA1BkQ,WACP3c,qBAAU,WACgC,2BAAnC0c,EAAgBE,iBACf9c,EAAQiF,KAAK,gBAEjBL,YAAW,WAAK0X,MAAoB,OACtC,CAACM,IAEHrR,8BAAoB,CAChBlJ,WAAY,aACZM,IAAKka,EACLxF,QAAQ,mBAAD,OAAqBwF,KAEhC,IAAME,EAActZ,aAAY,SAAAV,GAAK,OAAEA,EAAMnB,UAAU+B,QAAhB,0BAA2CkZ,OApBzD,EAqBMvZ,mBAAS,IArBf,mBAqBlB5B,EArBkB,KAqBRqC,EArBQ,OAsBgBT,mBAAS,IAtBzB,gCAuBiBA,mBAAS,KAvB1B,mBAuBlB0Z,EAvBkB,KAuBHC,EAvBG,OAwBO3Z,oBAAS,GAxBhB,mBAwBlBsK,EAxBkB,KAwBRC,EAxBQ,OAyBmBvK,mBAAS,IAzB5B,mBAyBlB4Z,EAzBkB,KAyBFC,EAzBE,KA0BzBjd,qBAAU,WACN,OAAI4G,mBAASiW,GACTA,GAAqC,GAAtBA,EAAYtX,QAC/BwX,EAAiB,mBACVlZ,EAAYgZ,EAAY,KAFoBE,EAAiB,sBADlCA,EAAiB,sBAIrD,CAACF,IACH7c,qBAAU,WACFwB,GACDA,EAAS0b,QAAU1b,EAAS0b,OAAO3X,OAAS,GAAG0X,EAAkBzb,EAAS0b,UAC/E,CAAC1b,IAEH,IAAM2b,EAAmB,WAClBH,EAAezX,QAAU,GAC5B8W,EAAe,CACXzC,MAAO+C,EACPjQ,KAAM,CAAEwQ,OAAQF,MAGlBI,EAAmB,WACrBb,EAAeI,IAGbU,EAAe7b,EACjB,yBAAKgE,UAAU,YACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,gBACX,+BACA,+BACA,4BAAI,6CAAsB,4BAAKhE,EAAS6D,QACxC,4BAAI,+CAAwB,4BAAK7D,EAAS8b,YAKlD,yBAAK9X,UAAU,mBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,OACf,yBAAKA,UAAU,WAAU,uBAAGA,UAAU,eAAb,kBACvBwX,EACF,kBAAC,WAAD,KACCA,EAAelb,KAAI,SAAC6O,EAAM4M,GAAP,OACpB,kBAAC,WAAD,CAAUrY,IAAKC,eACf,kBAAC,YAAD,CACI4M,EAAG,EACHrP,GAAE,sBAAiB6a,GACnB7X,SAAU,SAACC,GACP,IAAI4J,EAAK,YAAOwB,MAAP,YAAgBiM,IAErBzN,EAAMgO,GAAc,CAAC/I,MAAM7O,EAAEC,OAAOH,MAAO+X,aAAY,GACvDP,EAAkB1N,GAAQ5B,GAAaD,IAE/CjI,MAAQkL,EAAM6D,QAElB,yBAAKhP,UAAU,UACX,yBACAJ,QAAS,WACL,IAAImK,EAAK,YAAOwB,MAAP,YAAgBiM,IAEzBzN,EAAQA,EAAM2C,QAAO,SAACuL,EAAG/I,GAAJ,OAAcA,GAAS6I,KAC5CN,EAAkB1N,GAAQ5B,GAAaD,IAE3ClI,UAAU,+BAA8B,uBAAGA,UAAU,kBAAb,gBAI5C,yBACAJ,QAAS,WACL,IAAImK,EAAK,YAAOwB,MAAP,YAAgBiM,IAEzBzN,EAAMxK,KAAK,CAACyP,MAAM,GAAIgJ,aAAY,IAClCP,EAAkB1N,GAAQ5B,GAAaD,IAE3ClI,UAAU,kBACN,yBAAKA,UAAU,sCAAqC,uBAAGA,UAAU,kBAAb,UAGrD,uBAAGA,UAAU,mBAAb,4BAKX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACwB,MAAjCkX,EAAgBE,iBAA6D,IAAnCF,EAAgBE,gBAC5D,yBAAKxX,QAAS,WAAMgY,KAAsB5X,UAAU,eAAc,kBAAC,OAAD,eAAlE,oBACG,KACkC,+BAAnCkX,EAAgBE,gBAClB,yBAAMpX,UAAU,eAAhB,iBACG,KACkC,2BAAnCkX,EAAgBE,gBAClB,yBAAKpX,UAAU,eAAc,kBAAC,OAAD,iBAA7B,YACG,KACkC,yBAAnCkX,EAAgBE,gBAClB,yBAAKxX,QAAS,WAAMgY,KAAsB5X,UAAU,eAAc,kBAAC,OAAD,cAAlE,eACG,MAEP,yBAAKA,UAAU,iBACwB,MAAjCkX,EAAgBE,iBAA6D,IAAnCF,EAAgBE,gBAC5D,yBAAMxX,QAAS,WAAM+X,KAAsB3X,UAAU,gBAAe,kBAAC,OAAD,aAApE,oBACG,KACkC,+BAAnCkX,EAAgBE,gBAClB,yBAAKpX,UAAU,gBAAf,iBACG,KACkC,2BAAnCkX,EAAgBE,gBAClB,yBAAKpX,UAAU,gBAAe,kBAAC,OAAD,iBAA9B,YACG,KACkC,yBAAnCkX,EAAgBE,gBAClB,yBAAKxX,QAAS,WAAM+X,KAAsB3X,UAAU,eAAc,kBAAC,OAAD,cAAlE,gBACG,QAIhB,KAEH,OACI,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,aACf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,WACX,wBAAIA,UAAU,0BAAd,qBAEJ,yBAAKA,UAAU,WACQ,oBAAjBsX,EACE,kBAAC,EAAD,SAAW,wBAAItX,UAAU,UAAd,cAAX,KACD,KACgB,sBAAjBsX,EACE,kBAAC,EAAD,SAAW,wBAAItX,UAAU,UAAd,uBAAX,KACD,KACgB,mBAAjBsX,EACE,kBAAC,WAAD,KACKO,GAEN,YClEvB,IAUe1a,eACXC,aAXoB,SAACC,GACrB,MAAO,MAEe,SAACnC,GACvB,MAAO,CACHyb,YAAa,SAACzP,GAAQhM,EAAUwb,GAAkBxP,KAClD0P,iBAAkB,SAAC1P,GAAQhM,GF9ExB,SAACA,EAAUC,EAAX,GAAmD,EAA7BC,YAA6B,EAAhBC,aACtCH,EAAS,CAACO,KAAK,+BEmFnBpB,IAFW8C,EAtGf,SAAqBQ,GAAQ,IAClBgZ,EAAiChZ,EAAjCgZ,YAAaC,EAAoBjZ,EAApBiZ,iBADI,EAEsBhZ,mBAAS,IAF/B,mBAEjBsa,EAFiB,KAEAC,EAFA,OAGwBva,mBAAS,IAHjC,mBAGjBwa,EAHiB,KAGCC,EAHD,KAIlBnB,EAAkBnZ,aAAY,SAAAV,GAAK,OAAEA,EAAM6Z,mBAEjD1c,qBAAU,WACN0E,YAAW,WAAK0X,MAAoB,OACtC,CAACM,IAEHrR,8BAAoB,CAChBlJ,WAAY,eAEhB,IAAMkB,EAAaE,aAAY,SAAAV,GAAK,OAAEA,EAAMnB,UAAU+B,QAAQJ,cAbtC,EAckBD,mBAAS,IAd3B,mBAcjB0Z,EAdiB,KAcFC,EAdE,KAexB/c,qBAAU,WACN,OAAI4G,mBAASvD,GACTA,GAAmC,GAArBA,EAAWkC,OACtBwX,EAAiB,qBADyBA,EAAiB,wBADjCA,EAAiB,wBAGpD,CAAC1Z,IAEH,IAAMya,EAAmB,WACC,IAAnBJ,GAA6C,IAApBE,GAC5BzB,EAAY,CACR9W,MAAOqY,EACPJ,MAAOM,EAAiB5b,cAAcJ,MAAM,KAAKqS,KAAK,QAG9D,OACI,yBAAKzO,UAAU,oBACX,yBAAKA,UAAU,aACf,wBAAIA,UAAU,0BAAd,iBACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,cACX,kBAAC,YAAD,CACI9C,GAAG,aACHqP,EAAG,GACHC,MAAM,sBACNtM,SAAU,SAACC,GAAKgY,EAAmBhY,EAAEC,OAAOH,WAGpD,yBAAKD,UAAU,cACX,kBAAC,YAAD,CACI9C,GAAG,cACHqP,EAAG,GACHC,MAAM,wBACNtM,SAAU,SAACC,GAAKkY,EAAoBlY,EAAEC,OAAOH,WAGrD,yBAAKD,UAAU,kBACwB,MAAjCkX,EAAgBE,iBAA6D,IAAnCF,EAAgBE,gBAC5D,yBAAMxX,QAAS,WAAK0Y,KAAsBtY,UAAU,gBAAe,kBAAC,OAAD,aAAnE,iBACG,KACkC,4BAAnCkX,EAAgBE,gBAClB,yBAAKpX,UAAU,gBAAf,wBACG,KACkC,wBAAnCkX,EAAgBE,gBAClB,yBAAKpX,UAAU,gBAAe,kBAAC,OAAD,iBAA9B,YACG,KACkC,sBAAnCkX,EAAgBE,gBAClB,yBAAKxX,QAAS,WAAK0Y,KAAsBtY,UAAU,eAAc,kBAAC,OAAD,cAAjE,UACG,OAGX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,WACX,wBAAIA,UAAU,0BAAd,yBAEJ,yBAAKA,UAAU,WACQ,sBAAjBsX,EACE,kBAAC,EAAD,SAAW,wBAAItX,UAAU,UAAd,cAAX,KACD,KACgB,wBAAjBsX,EACE,kBAAC,EAAD,SAAW,wBAAItX,UAAU,UAAd,uBAAX,KACD,KACgB,qBAAjBsX,EACE,2BAAOtX,UAAU,SACjB,+BACA,4BAAI,6CAAsB,+CAAwB,4CACjDnC,EAAWvB,KAAI,SAACN,GAAD,OAChB,wBAAI0D,IAAKC,eAAQ,wBAAIK,UAAU,qBAAoB,kBAAC,IAAD,CAASA,UAAU,OAAOQ,GAAE,wBAAmBxE,EAASkB,KAAOlB,EAAS6D,QAAqB,4BAAK7D,EAAS8b,OAAW,4BAAK9b,EAASkB,UAIxL,YC0CvB,IAgBeC,eACX9C,IACA+C,aAlBoB,SAACC,GACrB,MAAO,CACHgK,eAAkBhK,EAAMiK,eAAeD,eACvCE,aAAkBlK,EAAMiK,eAAeC,aACvCC,WAAkBnK,EAAMiK,eAAeE,eAIpB,SAACtM,GACxB,MAAM,CACFqd,iBAAkB,SAAC/W,GAAWtG,EV5GL,SAACsG,GAC9B,OAAO,SAACtG,EAAUC,EAAX,GAAmD,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAGtC,OAFAH,EAAS,CAACO,KAAK,4BACGJ,IACDsB,WAAW,YAAYM,IAAIuE,EAAQtE,IAAIiH,IAAI3C,EAAQ0F,MACnE1L,MAAK,WAAKN,EAAS,CAACO,KAAK,2BACzBC,OAAM,SAACC,GAAOT,EAAS,CAACO,KAAK,oBAAqBE,IAAKA,EAAIC,cUsGrB2c,CAAiB/W,KACxDsG,mBAAoB,WAAM5M,GVjGvB,SAACA,EAAUC,EAAX,GACH,OADsD,EAA7BC,YAA6B,EAAhBC,aAC/BH,EAAS,CAACO,KAAK,6BUiGtB+c,qBAAsB,SAACjU,GAAWrJ,EVvIR,SAACqJ,GAE/B,OADA9H,QAAQC,IAAI6H,GACL,SAACrJ,EAAUC,EAAX,GAAmD,EAA7BC,YAA8B,IACjDc,GAAYb,EADoC,EAAhBA,gBAEtC,GAAGkJ,EAAO8E,WAAW,CACjB,IAAI0G,EAAW,GACfA,EAAS,kBAAD,OAAmBxL,EAAOsK,cAA1B,WAAmDtK,EAAO+D,MAClEpM,EAAUS,WAAW,YAAYM,IAAIsH,EAAOwC,WAAWxC,OAAQwL,QAE/D7T,EAAUS,WAAW,YAAYM,IAAIsH,EAAOwC,WAAWxC,OAAO,CAAC+D,MAAOkF,WAAWjJ,EAAO+D,UU8HjDmQ,CAAmBlU,SAIvDpH,EA3If,SAAqBQ,GAAQ,IAElBoJ,EAAapJ,EAAMqJ,MAAMC,OAAzBF,UACAyR,EAAwB7a,EAAxB6a,qBAEP3S,8BAAoB,CAChBlJ,WAAY,WACZM,IAAK8J,EACL4K,QAAQ,eAAD,OAAiB5K,KAE5B,IAAM2R,EAAiB3a,aAAY,SAAAV,GAAK,OAAEA,EAAMnB,UAAU+B,QAAhB,sBAAuC8I,OAVzD,EAWYnJ,mBAAS,IAXrB,mBAWjB+a,EAXiB,KAWLC,EAXK,OAaKhb,mBAAS,IAbd,mBAajB4D,EAbiB,KAaTuG,EAbS,KAcxBvN,qBAAU,WAEN,OAAI4G,mBAASsX,GACTA,GAA0C,GAAxBA,EAAe3Y,QACrCgI,EAAW2Q,EAAe,IACnBE,EAAc,WAFmCA,EAAc,aADjCA,EAAc,aAIrD,CAACF,IAEH,IAAMG,EAAsBrX,EACxB,kBAAC,WAAD,KACI,wBAAIxB,UAAU,UAAd,gBACwB,GAAtBwB,EAAQ6H,WACN,yBAAKrJ,UAAU,OACdiK,OAAOC,KAAK1I,EAAQqI,gBAAgB6C,QAAO,SAAAwD,GAAO,OAAE1O,EAAQqI,eAAeqG,GAAS3C,YAAUK,OAAOtR,KAAI,SAAC4T,GAAD,OAC1G,kBAAC,WAAD,CAAUxQ,IAAKC,eACX,yBAAKK,UAAU,UACX,uBAAGA,UAAU,qBACRkQ,EADL,IACc,6BACT1O,EAAQqI,eAAeqG,GAASxB,kBAGzC,yBAAK1O,UAAU,UACX,2BACI9C,GAAE,UAAKgT,EAAL,UACFzU,KAAK,OACLyR,YAAa1L,EAAQqI,eAAeqG,GAAS5H,SAGrD,yBAAKtI,UAAU,UACX,yBACAJ,QAAS,WACL,IAAI0I,EAAQtJ,IAAE,SAAD,OAAUkR,EAAV,WAA2B4I,MACxC9Z,IAAE,SAAD,OAAUkR,EAAV,WAA2B4I,IAAI,IAChCN,EAAqB,CACjBnP,WAAY7H,EAAQ6H,WACpBtC,UAAWA,EACX8H,cAAeqB,EACf5H,MAAOA,KAGftI,UAAU,gBAXV,WAeJ,yBAAKA,UAAU,WACX,mCAMR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,uBAAGA,UAAU,qBACRwB,EAAQ4G,cAGjB,yBAAKpI,UAAU,UACX,2BACI9C,GAAE,QACFzB,KAAK,OACLyR,YAAa1L,EAAQ8G,SAG7B,yBAAKtI,UAAU,UACX,yBACAJ,QAAS,WACL,IAAI0I,EAAQtJ,IAAE,eAAe8Z,MAC7B9Z,IAAE,eAAe8Z,IAAI,IACrBN,EAAqB,CACjBnP,WAAY7H,EAAQ6H,WACpBtC,UAAWA,EACX8H,eAAe,EACfvG,MAAOA,KAGftI,UAAU,gBAXV,WAeJ,yBAAKA,UAAU,WACX,gCAKjB,KAEH,OACI,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,eAAd,QAAiC,0BAAMA,UAAU,eAAhB,YACjC,uBAAGA,UAAU,qBAAqB+G,GAClB,WAAd4R,EACE,kBAAC,EAAD,SAAW,wBAAI3Y,UAAU,UAAd,cAAX,KACD,KACa,aAAd2Y,EACE,kBAAC,EAAD,SAAW,wBAAI3Y,UAAU,UAAd,aAAX,KACD,KACa,UAAd2Y,EACE,kBAAC,WAAD,KACKE,GAEN,UC3DnB,IAUA1b,eACEC,aAXsB,SAACC,GACvB,MAAO,MAEkB,SAACnC,GAC1B,MAAO,CACL6d,WAAY,WAAM7d,GtB1EX,SAACA,EAAUC,EAAX,GAAsD,IAAhCC,EAA+B,EAA/BA,YAErB0G,GAFoD,EAAlBzG,aACrBD,IACG2G,aAAY,WAAK,IAAD,EAC1BxE,EAAO,UAAGpC,IAAWmC,SAASC,eAAvB,QAAkC,IAE/C,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAS6D,YACL7D,EAAQoD,QACPzF,EAAS,CAACO,KAAM,kBAEhBP,EAASD,KAEb+G,cAAcF,MAGpB,MACF5C,YAAW,WAAK,IAAD,EACX8C,cAAcF,IACD,UAAG3G,IAAWmC,SAASC,eAAvB,QAAkC,IACnC6D,UACRlG,EAASW,OAEd,asB0DXsB,EA3DA,SAAaQ,GACUA,EAAdob,WADY,IAAD,IAGZC,EAAO,UAAGjb,aAAY,SAACV,GAAD,OAASA,EAAMC,SAAShC,KAAK0C,cAA5C,QAAkD,KACzDT,EAAO,UAAGQ,aAAY,SAAAV,GAAK,OAAGA,EAAMC,SAASC,kBAAtC,QAAgD,GAC7D,OACE,yBAAKyC,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOU,OAAK,EAACuY,KAAK,UAAlB,IAA4B,kBAAC,EAAD,MAA5B,KACA,kBAAC,IAAD,CAAOvY,OAAK,EAACuY,KAAK,WAAlB,IAA6B,kBAAC,EAAD,MAA7B,KAEA,kBAAC,EAAD,CAAStV,eAAgB,KACvB,kBAAC,WAAD,KACIqV,GAAWzb,EAAQoD,QACnB,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAOD,OAAK,EAACuY,KAAK,uBAAlB,IAAyC,kBAAC,EAAD,MAAzC,KACA,kBAAC,IAAD,CAAOvY,OAAK,EAACuY,KAAK,kBAAlB,IAAqC,kBAAC,EAAD,MAArC,MACA,kBAAC,IAAD,CAAOvY,OAAK,EAACuY,KAAK,eAAlB,IAAkC,kBAAC,EAAD,MAAlC,KACA,kBAAC,IAAD,CAAOvY,OAAK,EAACuY,KAAK,2BAAlB,IAA8C,kBAAC,GAAD,MAA9C,KACA,kBAAC,IAAD,CAAOvY,OAAK,EAACuY,KAAK,gBAAlB,IAAmC,kBAAC,EAAD,MAAnC,KACA,kBAAC,IAAD,CAAOvY,OAAK,EAACuY,KAAK,gBAAlB,IAAmC,kBAAC,GAAD,MAAnC,KACA,kBAAC,IAAD,CAAOvY,OAAK,EAACuY,KAAK,gBAAlB,IAAmC,kBAAC,GAAD,MAAnC,KACA,kBAAC,IAAD,CAAOvY,OAAK,EAACuY,KAAK,6BAAlB,IAAgD,kBAAC,GAAD,MAAhD,KACA,kBAAC,IAAD,CAAOvY,OAAK,EAACuY,KAAK,KAAlB,IAAuB,kBAAC,EAAD,MAAvB,MAGF,yBAAKjZ,UAAU,QACb,kBAAC,EAAD,KACE,wBAAIA,UAAU,kCAAd,IAAgD,sCAAiB,0BAAMA,UAAU,cAAhB,OACjE,uBAAGA,UAAU,oBAAb,UACS,kBAAC,IAAD,CAASQ,GAAG,UAAU,0BAAMR,UAAU,wBAAhB,WAD/B,4BC5ClBkZ,GAAcC,QACW,cAA7Bxe,OAAO+D,SAAS0a,UAEe,UAA7Bze,OAAO+D,SAAS0a,UAEhBze,OAAO+D,SAAS0a,SAASpS,MACvB,2DAsCN,SAASqS,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT9d,MAAK,SAAAme,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxc,QACfmc,UAAUC,cAAcO,YAI1Bvd,QAAQC,IACN,iHAKE6c,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBld,QAAQC,IAAI,sCAGR6c,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5Bje,OAAM,SAAAye,GACL1d,QAAQ0d,MAAM,4CAA6CA,M,aChG3Dtf,GAAU,CACZkB,WAAY,KACZuF,cAAe,KACfD,YAAa,KACbE,cAAe,MCJb1G,GAAU,CACZwM,eAAgB,uBAChBE,aAAc,KACdC,WAAY,MCHV3M,GAAY,CACduc,gBAAiB,KACjBgD,YAAa,KACbC,cAAe,MCcJC,GATKC,YAAgB,CAChCjf,K5BHuB,WAA4B,IAA3B+B,EAA0B,uDAApBxC,EAAW2f,EAAS,uCAElD,OAAOA,EAAO/e,MACV,IAAK,gBAAiB,MAAO,CAACX,YAAa0f,EAAO/e,KAAMV,QAAS,iCAAmCC,UAAU,MAC9G,IAAK,cAAe,MAAO,CAACF,YAAa0f,EAAO/e,KAAMV,QAASyf,EAAO7e,IAAMX,UAAUwf,EAAO7e,KAC7F,IAAK,iBAAkB,MAAO,CAACb,YAAa0f,EAAO/e,KAAMV,QAAS,iBAAmBC,UAAU,MAC/F,IAAK,eAAgB,MAAO,CAACF,YAAa0f,EAAO/e,KAAMV,QAASyf,EAAO7e,IAAMX,UAAUwf,EAAO7e,KAC9F,IAAK,iBAAkB,MAAO,CAACb,YAAa0f,EAAO/e,KAAMV,QAAS,oBAAsBC,UAAU,MAClG,IAAK,eAAgB,MAAO,CAACF,YAAa0f,EAAO/e,KAAMV,QAASyf,EAAO7e,IAAMX,UAAUwf,EAAO7e,KAC9F,IAAK,2BAA4B,MAAO,CAAEb,YAAY0f,EAAO/e,KAAMV,QAAQ,uBAAwBC,UAAU,wBAC7G,IAAK,qBAAsB,OAAOH,EAClC,QAAS,OAAOwC,I4BPpBI,OHHyB,WAA8B,IAA7BJ,EAA4B,uDAApBxC,GAAW2f,EAAS,uCAEtD,OAAOA,EAAO/e,MACV,IAAK,qBACD,MAAO,CAACM,WAAYye,EAAOze,WAAYuF,cAAe,KAAMD,YAAY,KAAME,cAAeiZ,EAAO/e,MACxG,IAAK,yBACD,MAAO,CAACM,WAAYye,EAAOze,WAAYuF,cAAekZ,EAAOlZ,cAAeD,YAAY,KAAME,cAAeiZ,EAAO/e,MACxH,IAAK,2BACD,MAAO,CAACM,WAAYye,EAAOze,WAAYuF,cAAe,KAAMD,YAAYmZ,EAAO7e,IAAK4F,cAAeiZ,EAAO/e,MAC9G,IAAK,eACD,OAAO,2BAAIZ,IAAX,IAAsB0G,cAAciZ,EAAO/e,OAC/C,QAAS,OAAO4B,IGPpB6Z,gBDL2B,WAA4B,IAA3B7Z,EAA0B,uDAApBxC,GAAW2f,EAAS,uCAEtD,OAAOA,EAAO/e,MACV,IAAK,8BACD,MAAO,CAAC2b,gBAAiBoD,EAAO/e,KAAM2e,YAAa,cAAgBK,cAAc,MACrF,IAAK,0BACD,MAAO,CAACrD,gBAAiBoD,EAAO/e,KAAM2e,YAAa,sBAAwBK,cAAc,MAC7F,IAAK,wBACD,MAAO,CAACrD,gBAAiBoD,EAAO/e,KAAM2e,YAAa,sBAAwBK,cAAcD,EAAO7e,KACpG,IAAK,2BACD,MAAO,CAACyb,gBAAiBoD,EAAO/e,KAAM2e,YAAa,cAAgBK,cAAc,MACrF,IAAK,uBACD,MAAO,CAACrD,gBAAiBoD,EAAO/e,KAAM2e,YAAa,sBAAwBK,cAAc,MAC7F,IAAK,qBACD,MAAO,CAACrD,gBAAiBoD,EAAO/e,KAAM2e,YAAa,sBAAwBK,cAAcD,EAAO7e,KACpG,IAAK,8BACG,MAAO,CAACyb,gBAAiBoD,EAAO/e,KAAM2e,YAAa,cAAgBK,cAAc,MACzF,IAAK,0BACD,MAAO,CAACrD,gBAAiBoD,EAAO/e,KAAM2e,YAAa,sBAAwBK,cAAc,MAC7F,IAAK,wBACD,MAAO,CAACrD,gBAAiBoD,EAAO/e,KAAM2e,YAAa,iBAAmBK,cAAcD,EAAO7e,KAC/F,IAAK,qBAAsB,OAAOd,GAClC,QAAS,OAAOwC,IChBpBiK,eFN0B,WAA8B,IAA7BjK,EAA4B,uDAApBxC,GAAW2f,EAAS,uCAEvD,OADA/d,QAAQC,IAAR,OAAY8d,QAAZ,IAAYA,OAAZ,EAAYA,EAAQ/e,MACb+e,EAAO/e,MACV,IAAK,0BACD,MAAO,CAAE4L,eAAgBmT,EAAO/e,KAAM+L,WAAW,oBAAqBD,aAAc,MACxF,IAAK,sBACD,MAAO,CAAEF,eAAgBmT,EAAO/e,KAAM+L,WAAW,sBAAuBD,aAAc,MAC1F,IAAK,oBACD,MAAO,CAAEF,eAAgBmT,EAAO/e,KAAM+L,WAAW,oBAAqBD,aAAciT,EAAO7e,KAC/F,IAAK,0BACD,MAAO,CAAE0L,eAAgBmT,EAAO/e,KAAM+L,WAAW,oBAAqBD,aAAc,MACxF,IAAK,sBACD,MAAO,CAAEF,eAAgBmT,EAAO/e,KAAM+L,WAAW,sBAAuBD,aAAc,MAC1F,IAAK,oBACD,MAAO,CAAEF,eAAgBmT,EAAO/e,KAAM+L,WAAW,oBAAqBD,aAAciT,EAAO7e,KAC/F,IAAK,uBACD,OAAO,2BAAId,IAAX,IAAsB0G,cAAciZ,EAAO/e,OAC/C,QAAS,OAAO4B,IEVpBC,SAAUod,kBACVxe,UAAWye,sB,oDCIfrd,KAASsd,cAboB,CAC3BC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMC9d,KAASpB,YAApB,IAEQoB,MAAf,ECsCM+d,GAAQC,YACZhB,GACAnd,YACEoe,YAAgBC,KAAMC,kBAAkB,CAACrgB,0BAAaC,gCACtDqgB,0BAAepe,MAUbqe,GAAW,CACfre,YACAic,OAPgB,CAChBqC,YAAa,QACbC,wBAAwB,GAMxB3gB,SAAUmgB,GAAMngB,SAChB4gB,oDAMIC,GAAe,SAAC,GAAgB,IAAdxhB,EAAa,EAAbA,SAChBe,EAAOyC,aAAa,SAAAV,GAAK,OAAEA,EAAMC,SAAShC,QAChD,OAAI8F,mBAAS9F,GACNf,EADoB,4CAO7ByhB,IAASC,OAEP,kBAAC,IAAD,CAAUZ,MAAOA,IACf,kBAAC,6BAA+BM,GAC9B,kBAAC,GAAD,KACE,kBAAC,GAAD,SAKLO,SAASC,eAAe,SNhFpB,SAAkB5C,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI4C,IAAIC,GAAwB1hB,OAAO+D,SAASkR,MACpD0M,SAAW3hB,OAAO+D,SAAS4d,OAIvC,OAGF3hB,OAAOyE,iBAAiB,QAAQ,WAC9B,IAAMka,EAAK,UAAM+C,GAAN,sBAEPnD,KAgEV,SAAiCI,EAAOC,GAEtCgD,MAAMjD,EAAO,CACXkD,QAAS,CAAE,iBAAkB,YAE5BhhB,MAAK,SAAAihB,GAEJ,IAAMC,EAAcD,EAASD,QAAQ3f,IAAI,gBAEnB,MAApB4f,EAAS/I,QACO,MAAfgJ,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5CnD,UAAUC,cAAcmD,MAAMphB,MAAK,SAAAme,GACjCA,EAAakD,aAAarhB,MAAK,WAC7Bb,OAAO+D,SAASoe,eAKpBzD,GAAgBC,EAAOC,MAG1B7d,OAAM,WACLe,QAAQC,IACN,oEAvFAqgB,CAAwBzD,EAAOC,GAI/BC,UAAUC,cAAcmD,MAAMphB,MAAK,WACjCiB,QAAQC,IACN,iHAMJ2c,GAAgBC,EAAOC,OM2D/BE,K","file":"static/js/main.c4a00c0c.chunk.js","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction ScrollToTop({ history, children }) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    }\n  }, []);\n\n  return <Fragment>{children}</Fragment>;\n}\n\nexport default withRouter(ScrollToTop);","const initState = {\n    authMessage: null,\n    authLog: null,\n    authError: null\n}\n\nexport const authReducer = (state=initState, action)=>{\n    // console.log(action?.type);\n    switch(action.type){\n        case 'LOGIN_SUCCESS': return {authMessage: action.type, authLog: 'You are successfully logged in' , authError:null } ;\n        case 'LOGIN_ERROR': return {authMessage: action.type, authLog: action.err , authError:action.err } ;\n        case 'LOGOUT_SUCCESS': return {authMessage: action.type, authLog: 'Logout Success' , authError:null } ;\n        case 'LOGOUT_ERROR': return {authMessage: action.type, authLog: action.err , authError:action.err } ;\n        case 'SIGNUP_SUCCESS': return {authMessage: action.type, authLog: 'SignUp Successful' , authError:null } ;\n        case 'SIGNUP_ERROR': return {authMessage: action.type, authLog: action.err , authError:action.err } ;\n        case 'LOGOUT_NOT_ADMIN_SUCCESS': return { authMessage:action.type, authLog:'You are not an admin', authError:'You are not an admin' }\n        case 'AUTH_MESSAGE_RESET': return initState;\n        default: return state;\n    }\n}","import { authReducer } from \"../reducers/authReducer\";\n\nexport const initAction = ()=>{\n    return (dispatch, getState,{ getFirebase, getFirestore} ) =>{\n        const firebase = getFirebase();\n        var checkIsAdmin =  setInterval(()=>{\n            const profile = getState().firebase.profile ?? {};\n            // console.log('profile=>',profile);\n            if(profile?.isLoaded){\n                if(profile.isAdmin){\n                    dispatch({type: \"LOGIN_SUCCESS\"})\n                }else{\n                    dispatch(notAdminLogoutAction())\n                }\n                clearInterval(checkIsAdmin);\n                // dispatch(authMessageResetAction());\n            }\n        },200);\n        setTimeout(()=>{ \n            clearInterval(checkIsAdmin);\n            const profile = getState().firebase.profile ?? {};\n            if(!profile.isLoaded){\n                dispatch(authMessageResetAction());\n            }\n         },5000)\n    }\n}\n\nexport const loginAction = (credentials)=>{\n    return (dispatch, getState,{ getFirebase, getFirestore} ) =>{\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n            )\n            .then(()=>{\n                var checkIsAdmin =  setInterval(()=>{\n                    const profile = getState().firebase.profile ?? {};\n                    console.log('profile=>',profile);\n                    if(profile.isLoaded){\n                        if(profile.isAdmin){\n                            dispatch({type: \"LOGIN_SUCCESS\"})\n                        }else{\n                            dispatch(notAdminLogoutAction())\n                        }\n                        clearInterval(checkIsAdmin)\n                    }\n                },200);\n                setTimeout(()=>{ clearInterval(checkIsAdmin) },5000)\n            })\n            .catch(err=>{\n                console.log(err);\n                dispatch({\n                    type: \"LOGIN_ERROR\",\n                    err: err.message\n                })\n           })\n    }\n}\n\nexport const logoutAction = ()=>{\n    // console.log('logout request');\n    return (dispatch, getState,{ getFirebase, getFirestore })=>{\n        const firebase = getFirebase();\n        return firebase.auth().signOut()\n        .then(()=>{ \n            // console.log('logout successful');\n            dispatch({type:'LOGOUT_SUCCESS'}) \n        })\n        .catch(err=>{\n            dispatch({\n                type: \"LOGOUT_ERROR\",\n                err: err.message\n            })\n        })\n    }\n}\n\nexport const notAdminLogoutAction = ()=>{\n    // console.log('logout request');\n    return (dispatch, getState,{ getFirebase, getFirestore })=>{\n        const firebase = getFirebase();\n        return firebase.auth().signOut()\n        .then(()=>{ \n            // console.log('logout successful');\n            dispatch({type:'LOGOUT_NOT_ADMIN_SUCCESS'}) \n        })\n        .catch(err=>{\n            dispatch({\n                type: \"LOGOUT_NOT_ADMIN_ERROR\",\n                err: err.message\n            })\n        })\n    }\n}\n\nexport const signupAction = (newUser)=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        \n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        return firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password)\n        .then((resp)=>{\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                email: newUser.email,\n                initials: newUser.firstName[0]+newUser.lastName[0],\n                isAdmin: true\n            })\n        })\n        .then(()=>{ dispatch({ type:\"SIGNUP_SUCCESS\" }) })\n        .catch((err)=>{ dispatch({ type:\"SIGNUP_ERROR\", err:err.message }) })\n    }\n}\n\nexport const signUpExistsAction = (user) =>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        \n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        return firebase.auth().signInWithEmailAndPassword(user.email, user.password)\n        .then((resp)=>{\n            // console.log('resp', resp.user.uid);\n            return firestore.collection('users').doc(resp.user.uid).update({\n                isAdmin: true\n            })\n        })\n        .then(()=>{ dispatch({ type:\"SIGNUP_SUCCESS\" }) })\n        .catch((err)=>{ \n            // console.log(err);\n            dispatch({ type:\"SIGNUP_ERROR\", err:err.message }) \n            dispatch(notAdminLogoutAction());\n        })\n    }\n}\n\nexport const  authMessageResetAction = ()=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        return dispatch({ type:'AUTH_MESSAGE_RESET' })\n    }\n}","import _ from \"lodash\";\n\nexport const searchAction = (searchTerm, category)=>{\n    // console.log('in searchAction', searchTerm, category);\n    return async (dispatch, getState, {getFirestore, getFirebase})=>{\n        // dispatch({type:'SEARCH_IN_PROGRESS'});\n        const firestore = getFirestore();\n        // searchTerm= searchTerm.toLowerCase();\n        var keywords = searchTerm.split(/(?:,| |\\+|-|\\(|\\))+/);\n        keywords = keywords.concat( keywords.map(each=>each.toLowerCase()) );\n        console.log('keywords=>', keywords);\n        if(category == 'Products'){\n            const snaps = await firestore.collection('products').where('tags','array-contains-any',keywords).get();\n            if(snaps.empty) console.log('empty')\n            snaps.forEach(doc=>{\n                console.log(doc.id);\n            })\n        }else if(category == 'Users'){\n            const snaps = await firestore.collection('users').where('tags','array-contains-any',keywords).get();\n            if(snaps.empty) console.log('empty')\n            snaps.forEach(doc=>{\n                console.log(doc.id);\n            })\n        }else if(category == 'Orders'){\n            // const snaps = await firestore.collection('users').where('')\n        }\n    }\n}\n\nexport const searchResetAction = ()=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        return dispatch({ type:\"SEARCH_RESET\" });\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { NavLink, useHistory, withRouter } from 'react-router-dom'\nimport {v1 as uuid} from 'uuid';\nimport { connect, useSelector } from 'react-redux';\n\nimport Cart from \"@material-ui/icons/AddShoppingCart\";\nimport Close from '@material-ui/icons/CloseRounded';\nimport Menu from '@material-ui/icons/MenuRounded';\n\nimport $ from 'jquery'\nimport M from 'materialize-css';\nimport { Dropdown, Button, Divider, Collapsible, CollapsibleItem, Icon } from \"react-materialize\";\n\nimport { firebaseConnect, firestoreConnect, useFirestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { logoutAction } from '../store/actions/authActions';\nimport { searchAction, searchResetAction } from '../store/actions/searchActions';\nimport queryString from \"query-string\";\nimport _ from 'lodash';\n\nfunction Navbar(props) {\n    const { auth,profile, logout, search, searchReset} = props ;\n    const [categories, setCategories] = useState(null);\n\n    const history = useHistory()\n    const [cartCount,setCartCount] = useState(0);\n\n    const authuid = useSelector(state=> state.firebase.auth.uid ) ?? 'default';\n    const proflie = useSelector(state=> state.firebase.profile ) ?? 'default';\n  \n    const cart =  useSelector(state=> state.firestore.ordered.cart) ?? []\n\n    const [menuOpenState, setMenuOpenState] = useState(false);\n    const [category, setCategory] = useState('Products');\n    const [searchTerm,setSearchTerm] = useState('');\n    var query = queryString.parse(props?.location?.search);\n    useEffect(()=>{\n      setSearchTerm(query?.searchTerm ?? '');\n    },[query?.searchTerm]);\n    useEffect(()=>{\n      setCategory(query?.category ?? 'Products');\n    },[query?.category]);\n    \n    const [width, setWidth] = useState(window.innerWidth);\n    const [height, setHeight] = useState(window.innerHeight);\n\n\n    const menuOpen = ()=>{\n      //console.log('menu-open');\n      $('.side_menu').css('zIndex', '2900');\n      $('.side_menu_content').css('transform', 'translateX(0%)');\n      $('.overlay').css('opacity', '1');\n    }\n    const menuClose = ()=>{\n      //console.log('menu-close');\n      $('.side_menu_content').css('transform', 'translateX(-100%)');\n      $('.overlay').css('opacity', '0');\n      setTimeout(()=>{\n        $('.side_menu').css('zIndex', '-1');\n      },200)\n    }\n\n    const updateWidthAndHeight = () => {\n      setWidth(window.innerWidth);\n      setHeight(window.innerHeight);\n    };\n    \n    useEffect(()=>{\n      menuOpenState? menuOpen() : menuClose();\n    },[menuOpenState])\n    \n    useEffect(()=>{\n      $('link').click(()=>{ console.log('link Click'); setMenuOpenState(false)})\n      $('ovelayLink').click(()=>{ console.log('link Click');; setMenuOpenState(false)})\n      window.addEventListener(\"resize\", updateWidthAndHeight);\n      return () => {\n        window.removeEventListener(\"resize\", updateWidthAndHeight)\n      };\n    },[])\n\n    const submitSearch = ()=>{\n      console.log(category, searchTerm);\n      searchReset();\n      history.push('/store?searchTerm='+searchTerm+\"&&category=\"+category);\n    }\n\n    const dropdown_inner_html =  categories?.map( eachcategory=> ( <a key={uuid()} onClick={()=>{setCategory(eachcategory?.title)}}>{eachcategory?.title}</a> ) );\n    const dropdown_html = (\n      <Dropdown\n          id=\"Dropdown_6\"\n          options={{\n            alignment: 'left',\n            autoTrigger: true,\n            closeOnClick: true,\n            constrainWidth: false,\n            container: null,\n            coverTrigger: false,\n            hover: false,\n            inDuration: 150,\n            onCloseEnd: null,\n            onCloseStart: null,\n            onOpenEnd: null,\n            onOpenStart: null,\n            outDuration: 250\n          }}\n          trigger={\n            <div className='btn categories_dropdown_trigger' >{category.slice(0,15)+((category.length>15)?\"..\":'')+\" \\u25BC\"}</div>\n          }\n        >\n          {dropdown_inner_html}\n        </Dropdown>\n    );\n    const searchbar_inner_html = (\n      <div className=\"navbar__searchInput_container\">\n        <div className=\"navbar__searchInput\" >\n        <input \n          id=\"searchInput\" \n          type=\"text\"\n          value={searchTerm}\n          onChange={ e=>setSearchTerm(e.target.value) }\n          onKeyDown={ e=>{ if(e.keyCode==13)submitSearch();} }\n        />\n        <i onClick={submitSearch} className=\"material-icons search-icon\">search</i>\n      </div>\n      </div>\n    )\n    // const sideNavCategoryLinks_html =  categories?.map( eachcategory=> (<div key={uuid()} className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to={\"/store/\"+eachcategory?.urlid}>{eachcategory?.title}</NavLink></div>) );\n    \n    const overlayLink = (to, link)=>(<div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to={to} >{link}</NavLink></div>)\n\n\n    return (\n        <div className=\"Navbar\">\n          <nav>\n              <div className=\"nav__left\">\n              <span onClick={()=>{ setMenuOpenState(!menuOpenState) }}>\n                {\n                  (!menuOpenState)?\n                  (<Menu className=\"menu-icon\"/>):\n                  (<Close className=\"menu-icon\" />)\n                }\n              </span>\n              <NavLink onClick={()=>{setMenuOpenState(false)}} exact to=\"/\">\n                <span className=\"navbar__logo\">Store Console</span>\n                {/* <span>{width}x{height}</span> */}\n              </NavLink>\n              </div>\n              \n                {searchbar_inner_html}\n\n              {\n                (auth?.uid && profile?.isAdmin)?(\n                  <ul className=\"hide-on-med-and-down row-flex-center\">\n                    <li><NavLink onClick={()=>{setMenuOpenState(false)}} className=\"nav_user_block_link\" to=\"/account\">\n                    <div className=\"nav_user_block\">\n                      <p className=\"line1\">Hello,</p>\n                      <p className=\"line2\">{profile?.firstName}</p>\n                    </div>\n                    </NavLink></li>\n                  </ul>\n                ):(\n                  <ul className=\"hide-on-med-and-down row-flex-center\">\n                    <li><NavLink onClick={()=>{setMenuOpenState(false)}} className=\"btn login_btn\" to=\"/login\">Login</NavLink></li>\n                    <li><NavLink onClick={()=>{setMenuOpenState(false)}} className=\"btn signup_btn\" to=\"/signup\">Signup</NavLink></li>\n                  </ul>\n                )\n              }\n          </nav>  \n\n\n          <div className=\"side_menu\">\n            <div className=\"overlay\">\n              <div className=\"side_menu_content\">\n                <div className=\"overlay_top_container\">\n                  \n\n                  <Collapsible accordion>\n                    {(auth?.uid)?(\n                    <CollapsibleItem\n                      expanded={false}\n                      header={`Hello Admin,\\n ${profile.firstName} ${profile.lastName}`}\n                      icon={<Icon>account_box</Icon>}\n                      node=\"div\"\n                    >\n                      Account\n                    </CollapsibleItem>\n                    ):(null)}\n                    <CollapsibleItem\n                      expanded={true}\n                      header=\"Console\"\n                      icon={<Icon>place</Icon>}\n                      node=\"div\"\n                    >\n                      {overlayLink('/addProduct','Add Product')}\n                      {overlayLink('/searchProduct','Search Product')}\n                      {overlayLink('/searchOrder','Search Orders')}\n                      {overlayLink(\"/addCategory\", \"Add Category\")}\n                    </CollapsibleItem>\n                    <CollapsibleItem\n                      expanded={false}\n                      header=\"Explore\"\n                      icon={<Icon>whatshot</Icon>}\n                      node=\"div\"\n                    >\n                      <div className=\"overlayLinkContainer\"> <NavLink onClick={()=>{setMenuOpenState(false)}} className=\"overlayLink\" exact to=\"/\">Home</NavLink></div>                      \n                    </CollapsibleItem>\n                  </Collapsible>\n\n                </div>\n                  {\n                    (auth?.uid && profile.isAdmin)?(\n                        <div >\n                          Not recognizing this account?\n                          <div onClick={()=>{ setMenuOpenState(false); logout(); }} to=\"/login\" className=\"btn login_btn\" >LogOut</div>\n                        </div>\n                    ):(\n                      <div className=\"overlay_bottom_container\">\n                        <div><NavLink onClick={()=>{setMenuOpenState(false)}} to=\"/login\" className=\"btn login_btn\" >Login</NavLink></div>\n                        <div><NavLink onClick={()=>{setMenuOpenState(false)}} to=\"/signup\" className=\"btn signup_btn\" >Signup</NavLink></div>\n                      </div>\n                    )\n                  }\n              \n              </div>\n              <div onClick={()=>{setMenuOpenState(false)}} className=\"side_right\"></div>\n            </div>\n          </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n  // console.log('state',state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n  return {\n    logout: ()=>{ dispatch( logoutAction() ) },\n    search: (searchTerm, category)=>{ dispatch( searchAction(searchTerm,category) ) },\n    searchReset: ()=>{ dispatch( searchResetAction() ) }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withRouter  \n)(Navbar)\n","import React, { useEffect, useState, Fragment } from 'react'\nimport Navbar from '../components/Navbar'\nimport $ from 'jquery'\nimport M from 'materialize-css';\nimport { Dropdown, Button, Divider, Icon } from \"react-materialize\";\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport {v1 as uuid } from 'uuid';\nimport queryString from 'query-string'\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { searchAction, searchResetAction } from '../store/actions/searchActions';\n\n\nfunction Store(props) {\n    const history = useHistory();\n    var query = queryString.parse(props?.location?.search)\n    const searchTerm =query?.searchTerm ?? ''; \n    const category =query?.category ?? 'All'; \n    // console.log('seachTerm form store page', searchTerm);\n    const {search, searchAction, searchReset} = props;\n    const {searchError, searchResults, searchMessage} = search;\n    useEffect(()=>{\n      searchReset();\n      if(searchTerm == ''){\n        history.push('/store/all');\n      }else{\n        searchAction(searchTerm,category);\n      }\n    },[searchTerm,category])\n    useEffect(()=>{\n      console.log(\"searchState=>\",{searchMessage, searchError, searchResults});\n    },[searchMessage,searchError, searchResults])\n    return (\n        <div className=\"Store Page\">\n            <div className=\"products-container container\">\n              \n              {searchResults && searchResults.map(product=>( \n                <Fragment>\n                  {/* <ProductCard key={uuid()} product={product} />  */}\n                </Fragment>\n              ))}\n              {\n                (searchMessage == 'SEARCH_RESULTS_NOT_FOUND')\n                ?( <p>{searchError}</p> ):null\n              }\n              {\n                (searchMessage == 'SEARCH_IN_PROGRESS' )\n                ?( <p>Loading...</p> ):null\n              }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n  // console.log(state);\n  return {\n    search: state.search,\n    products: state.firestore.ordered.products,\n    isLoaded: true\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n  return {\n    searchAction: (searchTerm, category)=>{ dispatch( searchAction(searchTerm,category) ) },\n    searchReset: ()=>{ dispatch( searchResetAction() ) }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withRouter  \n)\n(Store)\n\n","import React, { useState, useEffect } from 'react'\nimport $ from 'jquery';\nimport { loginAction, authMessageResetAction } from '../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nfunction Login(props) {\n    \n    const { authMessage, authLog, login, authMessageReset} = props;\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [emailBlur, setEmailBlur] = useState(false);\n    const [passwordBlur, setPasswordBlur] = useState(false);\n\n    var [allValid, setAllValid] = useState(false);\n\n    const history = useHistory();\n\n\n    useEffect(()=>{\n        if(!emailBlur){ return;}\n        emailValidation();\n    },[email]);\n\n    useEffect(()=>{\n        if(!passwordBlur){ return;}\n        passwordValidation();\n    },[password]);\n    \n    \n    useEffect(()=>{\n        // console.log('authMessage',authMessage, authLog);\n        setTimeout(()=>{ authMessageReset() },3000)\n        if(authMessage == 'LOGIN_SUCCESS') \n            setTimeout(()=>{ history.push('/') }, 3000);\n    },[authLog]);\n    \n    const emailValidation = ()=>{\n        if(email.length==0){ setInvalid('email', 'enter your email'); return;}\n        var regexEmail = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\n        if( !regexEmail.test(email) ){ setInvalid('email', 'email not valid'); return;}\n        setValid('email'); return;\n    }\n\n    const passwordValidation = ()=>{\n        if(password.length==0){ setInvalid('password', 'enter your password'); return;}\n        if( password.length<8){ setInvalid('password', 'password length might be greater'); return;}\n        setValid('password'); return;\n    }\n\n    const setInvalid = (field, errorMessage)=>{\n        $(`.${field}-field`).removeClass('valid').addClass('invalid');\n        $(`.${field}-helper-text`).html(errorMessage);\n    }\n    const setValid = (field)=>{\n        $(`.${field}-field`).removeClass('invalid').addClass('valid');\n        $(`.${field}-helper-text`).html('');\n    }\n\n    const formValidation = ()=>{\n        setEmailBlur(true);\n        setPasswordBlur(true);\n        emailValidation();\n        passwordValidation();        \n        if($('.input-field.invalid').length == 0) allValid= true;\n        else allValid = false;\n    }\n\n    const handleSubmit= (e)=>{\n        e.preventDefault();\n        formValidation();\n        // console.log('formvalidation', allValid);\n        if(allValid){ \n            // console.log(email, password);\n            props.login({email,password});\n        }\n        else {\n            // console.log('form is invalid');\n        }\n    }\n\n    return (\n        <div className=\"Login\">\n            <div className=\"form-container\">\n                <div className=\"card\">\n                <div className=\"card-title\">\n                        <span className=\"light_text\">Log</span>\n                        <span className=\"heavy_text\">In</span>\n                    </div>\n                    <div className=\"card-content\">\n                    <div className=\"log center\">\n                        {(authMessage == 'LOGIN_SUCCESS'           )?( <div className=\"success center\">{authLog}</div>):(null) }\n                        {(authMessage == 'LOGIN_ERROR'             )?( <div className=\"error center\">{authLog}</div>):(null) }\n                        {(authMessage == 'LOGOUT_NOT_ADMIN_SUCCESS')?( <div className=\"error center\">{authLog}</div>):(null) }\n                    </div>\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"input-field email-field\">\n                                <i className=\"material-icons prefix\">email</i>\n                                <label htmlFor=\"email\">Email</label>\n                                <input onChange={(e)=>{setEmail(e.target.value)}}  onBlur={()=>{setEmailBlur(true); emailValidation();}}id=\"email\" type=\"email\" value={email}/>\n                                <span className=\"helper-text email-helper-text\"></span>\n                            </div>\n                            <div className=\"input-field password-field\">\n                                <i className=\"material-icons prefix\">fingerprint</i>\n                                <label htmlFor=\"password\">Password</label>\n                                <input onChange={(e)=>{setPassword(e.target.value)}} onBlur={()=>{setPasswordBlur(true); passwordValidation();}} id=\"password\" type=\"password\" value={password}/>\n                                <span className=\"helper-text password-helper-text\"></span>\n                            </div>\n                            <div className=\"center\">\n                                <button className=\"btn light_btn\">Login</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps =(state)=>{\n    return{\n        authLog: state.auth.authLog,\n        authMessage: state.auth.authMessage\n    }\n\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        login: (credentials)=>{ dispatch( loginAction(credentials) ) },\n        authMessageReset: ()=>{ dispatch( authMessageResetAction() ) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Delayed extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {hidden : true};\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({hidden: false});\n        }, this.props.waitBeforeShow);\n    }\n\n    render() {\n        return this.state.hidden ? 'LOADING...........' : this.props.children;\n    }\n}\n\nDelayed.propTypes = {\n  waitBeforeShow: PropTypes.number.isRequired\n};\n\nexport default Delayed;","import React, { useState, useEffect, Fragment } from 'react'\nimport $ from 'jquery';\nimport { authMessageResetAction, signupAction, signUpExistsAction } from '../store/actions/authActions';\nimport { connect, useSelector } from 'react-redux';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { compose } from 'redux';\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase';\nimport Delayed from '../utils/Delayed';\nimport 'materialize-css';\nimport { Button, Card, Row, Col, Collapsible, CollapsibleItem, Icon } from 'react-materialize';\n\nfunction Signup(props) {\n    \n    const history = useHistory();\n    const { authMessage, authError, signup, signUpExists, authMessageReset} = props;\n\n    var queryStringParse = queryString.parse(props?.location?.search);\n    const [signUpKey,setSignUpKey] = useState(queryStringParse?.signUpKey);\n\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [emailExists, setEmailExists] = useState('');\n    const [passwordExists, setPasswordExists] = useState('');\n\n    const [firstNameBlur, setFirstNameBlur] = useState(false);\n    const [lastNameBlur, setLastNameBlur] = useState(false);\n    const [emailBlur, setEmailBlur] = useState(false);\n    const [passwordBlur, setPasswordBlur] = useState(false);\n    const [confirmPasswordBlur, setConfirmPasswordBlur] = useState(false);\n    const [emailExistsBlur, setEmailExistsBlur] = useState(false);\n    const [passwordExistsBlur, setPasswordExistsBlur] = useState(false);\n\n    useFirestoreConnect([{\n        collection: 'signUpKey'\n    }])\n    const signupKeyCol = useSelector(state => state?.firestore?.ordered?.signUpKey) ?? null;\n    const [signUpAuthkey, setSignUpAuthKey] = useState(null);\n    useEffect(()=>{\n        if(!(signupKeyCol)) return;\n        setSignUpAuthKey(signupKeyCol[0].signUpKey);\n    },[signupKeyCol]);\n    useEffect(()=>{\n        console.log('signUpAuthkey',signUpAuthkey);\n    },[signUpAuthkey])\n    \n    var [allValid, setAllValid] = useState(false);\n    var [allValidExists, setAllValidExists] = useState(false);\n    var [authLog,setAuthLog] =  useState('');\n\n\n    useEffect(()=>{  if(!firstNameBlur){ return;}  firstNameValidation(); },[firstName]);\n    useEffect(()=>{  if(!lastNameBlur){ return;}  lastNameValidation(); },[lastName]);\n    useEffect(()=>{  if(!emailBlur){ return;}  emailValidation(); },[email]);\n    useEffect(()=>{ if(!passwordBlur){ return;} passwordValidation(); },[password]);\n    useEffect(()=>{ if(!confirmPasswordBlur){ return;} confirmPasswordValidation(); },[confirmPassword]);\n    \n    useEffect(()=>{  if(!emailExistsBlur){ return;}  emailExistsValidation(); },[emailExists]);\n    useEffect(()=>{ if(!passwordExistsBlur){ return;} passwordExistsValidation(); },[passwordExists]);\n    \n    useEffect(()=>{\n        console.log('authMessage',authMessage, authError);\n        if(authMessage == 'SIGNUP_SUCCESS'){ \n            setAuthLog('You are successfully signed up and logged in.');\n            setTimeout(()=>{ history.push('/') },3000)\n        }\n        else { setAuthLog(authError) };\n        setTimeout(()=>{\n            authMessageReset();\n        },5000)\n    },[authMessage]);\n\n    \n    var renderLog = (authMessage==\"AUTH_MESSAGE_RESET\" || authMessage == null)?null\n        :(<span className={(authMessage==\"SIGNUP_SUCCESS\")?\"success\":\"error\"} >{authLog}</span>);\n\n    const firstNameValidation = ()=>{\n        if(firstName.length==0){ setInvalid('firstName', 'enter your firstName'); return;}\n        setValid('firstName'); return;\n    }\n\n    const lastNameValidation = ()=>{\n        if(lastName.length==0){ setInvalid('lastName', 'enter your lastName'); return;}\n        setValid('lastName'); return;\n    }\n\n    const emailValidation = ()=>{\n        if(email.length==0){ setInvalid('email', 'enter your email'); return;}\n        var regexEmail = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\n        if( !regexEmail.test(email) ){ setInvalid('email', 'email not valid'); return;}\n        setValid('email'); return;\n    }\n    \n    const emailExistsValidation = ()=>{\n        if(emailExists.length==0){ setInvalid('emailExists', 'enter your email'); return;}\n        var regexEmail = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\n        if( !regexEmail.test(emailExists) ){ setInvalid('emailExists', 'email not valid'); return;}\n        setValid('emailExists'); return;\n    }\n\n    const passwordValidation = ()=>{\n        if(password.length==0){ setInvalid('password', 'enter your password'); return;}\n        if( password.length<8){ setInvalid('password', 'password should be a minimum of 8 characters'); return;}\n        setValid('password'); return;\n    }\n    \n    const passwordExistsValidation = ()=>{\n        if( passwordExists.length==0){ setInvalid('passwordExists', 'enter your password'); return;}\n        if( passwordExists.length<8){ setInvalid('passwordExists', 'password should be a minimum of 8 characters'); return;}\n        setValid('passwordExists'); return;\n    }\n\n    const confirmPasswordValidation = ()=>{\n        if(confirmPassword.length==0){ setInvalid('confirmPassword', 'confirm your password'); return;}\n        if( confirmPassword!=password){ setInvalid('confirmPassword', 'passwords didnot match'); return;}\n        setValid('confirmPassword'); return;\n    }\n\n    const setInvalid = (field, errorMessage)=>{\n        $(`.${field}-field`).removeClass('valid').addClass('invalid');\n        $(`.${field}-helper-text`).html(errorMessage);\n    }\n    const setValid = (field)=>{\n        $(`.${field}-field`).removeClass('invalid').addClass('valid');\n        $(`.${field}-helper-text`).html('');\n    }\n\n    const formValidation = ()=>{\n        setFirstNameBlur(true);\n        setLastNameBlur(true);\n        setEmailBlur(true);\n        setPasswordBlur(true);\n        setConfirmPasswordBlur(true);\n        firstNameValidation();\n        lastNameValidation();\n        emailValidation();\n        passwordValidation();\n        confirmPasswordValidation();\n        if($('.signupForm .input-field.invalid').length == 0) allValid= true;\n        else allValid = false;\n    }\n    const formExistsValidation = ()=>{\n        setEmailExistsBlur(true);\n        setPasswordExistsBlur(true);\n        emailExistsValidation();\n        passwordExistsValidation();\n        if($('.signupFormExists .input-field.invalid').length == 0) allValidExists= true;\n        else allValidExists = false;\n    }\n\n    const handleSubmit= (e)=>{\n        e.preventDefault();\n        formValidation();\n        console.log('formvalidation', allValid);\n        if(allValid){ \n            signup({firstName, lastName, email, password, confirmPassword})\n        }\n        else console.log('form is invalid');\n    }\n    const handleExistsSubmit= (e)=>{\n        e.preventDefault();\n        formExistsValidation();\n        console.log(emailExists, passwordExists)\n        console.log('formvalidationExists', allValidExists);\n        if(allValidExists){ \n            signUpExists({email:emailExists, password:passwordExists})            \n        }\n        else console.log('form is invalid');\n    }\n\n    const SignUpFormJSX = (signUpAuthkey && signUpKey == signUpAuthkey)?(\n        <div className=\"form-container center\">\n            <div className=\"card\">\n                <div className=\"card-title\">\n                    <span className=\"light_text\">Sign</span>\n                    <span className=\"heavy_text\">Up</span>\n                    {/* <span>{signUpKey}</span> */}\n                </div>\n                <div className=\"card-content\">\n                <div className=\"log center\">\n                    {renderLog}\n                </div>\n                    <form className=\"row signupForm\" onSubmit={handleSubmit}>\n                        \n                        <div className=\"col s6 input-field firstName-field\">\n                            <i className=\"material-icons prefix\">person</i>\n                            <label htmlFor=\"firstName\">First Name</label>\n                            <input onChange={(e)=>{setFirstName(e.target.value)}}  onBlur={()=>{setFirstNameBlur(true); firstNameValidation();}} id=\"firstName\" type=\"text\" value={firstName}/>\n                            <span className=\"helper-text firstName-helper-text\"></span>\n                        </div>\n\n                        <div className=\"col s6 input-field lastName-field\">\n                            <i className=\"material-icons prefix\"></i>\n                            <label htmlFor=\"lastName\">Last Name</label>\n                            <input onChange={(e)=>{setLastName(e.target.value)}}  onBlur={()=>{setLastNameBlur(true); lastNameValidation();}} id=\"lastName\" type=\"text\" value={lastName}/>\n                            <span className=\"helper-text lastName-helper-text\"></span>\n                        </div>\n\n                        <div className=\"col s12 input-field email-field\">\n                            <i className=\"material-icons prefix\">email</i>\n                            <label htmlFor=\"email\">Email</label>\n                            <input onChange={(e)=>{setEmail(e.target.value)}}  onBlur={()=>{setEmailBlur(true); emailValidation();}} id=\"email\" type=\"email\" value={email}/>\n                            <span className=\"helper-text email-helper-text\"></span>\n                        </div>\n\n                        <div className=\"col s12 input-field password-field\">\n                            <i className=\"material-icons prefix\">fingerprint</i>\n                            <label htmlFor=\"password\">Password</label>\n                            <input onChange={(e)=>{setPassword(e.target.value)}} onBlur={()=>{setPasswordBlur(true); passwordValidation();}} id=\"password\" type=\"password\" value={password}/>\n                            <span className=\"helper-text password-helper-text\"></span>\n                        </div>\n                        <div className=\"col s12 input-field confirmPassword-field\">\n                            <i className=\"material-icons prefix\">check_circle</i>\n                            <label htmlFor=\"confirmPassword\">confirmPassword</label>\n                            <input onChange={(e)=>{setConfirmPassword(e.target.value)}} onBlur={()=>{setConfirmPasswordBlur(true); confirmPasswordValidation();}} id=\"confirmPassword\" type=\"password\" value={confirmPassword}/>\n                            <span className=\"helper-text confirmPassword-helper-text\"></span>\n                        </div>\n\n                        <div className=\"center\">\n                            <button className=\"btn signup_btn\">Signup</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    ):(null)\n\n    const SignUpExistsFormJSX = (signUpAuthkey && signUpKey == signUpAuthkey)?(\n        <div className=\"form-container center\" >\n            <div className=\"card\">\n                <div className=\"card-title\">\n                    <span className=\"light_text\">Sign</span>\n                    <span className=\"heavy_text\">Up: </span>\n                    <span>UserExists</span>\n                </div>\n                <div className=\"card-content\">\n                <div className=\"log center\">\n                    {renderLog}\n                </div>\n                    <form className=\"row signupFormExists\" onSubmit={handleExistsSubmit}>\n                        \n                        <div className=\"col s12 input-field emailExists-field\">\n                            <i className=\"material-icons prefix\">email</i>\n                            <label htmlFor=\"emailExists\">Email</label>\n                            <input onChange={(e)=>{setEmailExists(e.target.value)}}  onBlur={()=>{setEmailExistsBlur(true); emailExistsValidation();}} id=\"emailExists\" type=\"email\" value={emailExists}/>\n                            <span className=\"helper-text emailExists-helper-text\"></span>\n                        </div>\n\n                        <div className=\"col s12 input-field passwordExists-field\">\n                            <i className=\"material-icons prefix\">fingerprint</i>\n                            <label htmlFor=\"passwordExists\">Password</label>\n                            <input onChange={(e)=>{setPasswordExists(e.target.value)}} onBlur={()=>{setPasswordExistsBlur(true); passwordExistsValidation();}} id=\"passwordExists\" type=\"password\" value={passwordExists}/>\n                            <span className=\"helper-text passwordExists-helper-text\"></span>\n                        </div>\n\n                        <div className=\"center\">\n                            <button className=\"btn signup_btn\">Admin Signup</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    ):(null)\n\n    const SignUpPageJSX = ( signUpAuthkey && signUpKey == signUpAuthkey)?(\n            <div className=\"Signup\">\n                <div className=\"container\">\n                <Fragment>\n                    <Collapsible\n                      accordion\n                      popout\n                      style={{\n                          'flex-grow': '1'\n                      }}\n                    >\n                      <CollapsibleItem\n                        expanded={false}\n                        header={ <h6 className=\"center\"><Icon>whatshot</Icon> New Admin User </h6> }\n                        className=\"center\"\n                        node=\"div\"\n                      >\n                        {SignUpFormJSX}\n                      </CollapsibleItem>\n                      <CollapsibleItem\n                        expanded={false}\n                        header={ <h6 className=\"center\"><Icon>place</Icon> Already here on Digizup Store? </h6> }\n                        className=\"center\"\n                        node=\"div\"\n                      >\n                        {SignUpExistsFormJSX}\n                      </CollapsibleItem>\n                    </Collapsible>\n                </Fragment>\n                </div>\n            </div>\n        ):(\n            <div className=\"Page\">\n                <div className=\"row\">\n                    <div className=\"col s12 m8 l6 offset-m2 offset-l3\">\n                    <div className=\"card round-card\">\n                    <div className=\"card-content\">\n                    <h4 className=\"center primary-green-dark-text\"> <span>Sign</span><span className=\"heavy_text\">Up</span></h4>\n                    <p className=\"flow-text center\">\n                        Sorry!! Please verify your <span className=\"heavy_text\">SignUpKey</span> to proceed\n                    </p>\n                    </div>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        )\n\n    return (\n        <Fragment>\n            <Delayed waitBeforeShow={1000}>\n                {SignUpPageJSX}\n            </Delayed>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps =(state)=>{\n    console.log(state);\n    return{\n        authError: state.auth.authError,\n        authMessage: state.auth.authMessage\n    }\n\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        signup: (newUser)=>{ dispatch( signupAction(newUser) ) },\n        signUpExists: (user)=>{ dispatch( signUpExistsAction(user) ) },\n        authMessageReset: ()=>{ dispatch( authMessageResetAction() ) }\n\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withRouter\n)(Signup)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter, useHistory } from 'react-router-dom'\nimport { compose } from 'redux';\nimport { connect, useSelector } from 'react-redux';\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase';\n\nimport queryString from 'query-string'\nimport { renderIntoDocument } from 'react-dom/test-utils';\n\nimport $ from 'jquery';\n\nimport OwlCarousel from 'react-owl-carousel2';\nimport 'react-owl-carousel2/lib/styles.css'; //Allows for server-side rendering.\nimport 'react-owl-carousel2/src/owl.carousel.css'; //Allows for server-side rendering.\nimport 'react-owl-carousel2/src/owl.theme.green.css'; //Allows for server-side rendering.\n\nimport { v1 as uuid } from \"uuid\";\nimport Delayed from '../utils/Delayed';\n\nfunction Product(props) {\n\n    const history = useHistory();\n    const {productid} = props.match.params;\n    useFirestoreConnect([\n        {collection: 'products', doc: productid}\n    ])\n    const product = useSelector(({firestore:{data}})=> data.products && data.products[productid] )\n    \n    const toOptionIndexArray = (optionString)=>{\n        return optionString?.split('_').slice(1);\n    }\n    const toOptionString = (array)=>{\n        return \"option\"+array?.reduce((acum, each)=> acum+=\"_\"+each, '');\n    }\n\n    return (\n        <div className='Product Page'>\n            <div className=\"container\">\n                <h1>Products Page</h1>                \n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n\n    }\n}\n\nexport default \ncompose(\n    connect(mapStateToProps,mapDispatchToProps),\n    withRouter\n)(Product)\n","import React from 'react'\n\nfunction InfoCard({children}) {\n    return (\n        <div className=\"Info Card\">\n        <div className=\"row\">\n        <div className=\"col s12 m8 l6 offset-m2 offset-l3\">\n        <div className=\"card round-card\">\n        <div className=\"card-content\">\n            {children}\n        </div>\n        </div>\n        </div>\n        </div>\n        </div>\n    )\n}\n\nexport default InfoCard\n","import React, { useEffect, useState, Fragment } from 'react'\nimport { compose } from 'redux'\nimport { connect, useSelector } from 'react-redux'\nimport { withRouter, useHistory, NavLink } from 'react-router-dom'\nimport { authMessageResetAction } from '../store/actions/authActions';\nimport Delayed from '../utils/Delayed';\nimport InfoCard from '../components/InfoCard';\n\nfunction Home(props) {\n    const history = useHistory();\n\n    const HomePageJSX = (\n        <Fragment>\n            <div className=\"container\">\n            <h3 className=\"center head\"><span className=\"heavy_text\">Digizup</span> Store <span className=\"heavy_text\">Console</span></h3>\n            <div className=\"card round-card\">\n            <div className=\"card-content\">\n            <div className=\"row\"> \n                <div className=\"col s6 center\">\n                    <p className=\"flow-text center\">Add Product</p>\n                    <NavLink to=\"/addProduct\"><div className=\"btn-floating primary-green-dark-bg\"><i className=\"material-icons\">add</i></div></NavLink> \n                </div>\n                <div className=\"col s6 center\">\n                    <p className=\"flow-text center\">Add Category</p>\n                    <NavLink to=\"/addCategory\"><div className=\"btn-floating primary-green-dark-bg\"><i className=\"material-icons\">add</i></div></NavLink> \n                </div>\n                <div className=\"col s6 center\">\n                    <p className=\"flow-text center\">Search Product</p>\n                    <NavLink to=\"/searchProduct\"><div className=\"btn-floating primary-green-dark-bg\"><i className=\"material-icons\">search</i></div></NavLink> \n                </div>\n                <div className=\"col s6 center\">\n                    <p className=\"flow-text center\">Search Order</p>\n                    <NavLink to=\"/searchOrder\"><div className=\"btn-floating primary-green-dark-bg\"><i className=\"material-icons\">search</i></div></NavLink> \n                </div>\n            </div>\n            </div>\n            </div>\n            </div>\n        </Fragment>\n    )\n        \n\n    return (\n        <div className=\"Home Page\">\n            {HomePageJSX}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    // console.log('state=>',state);\n    return {\n        \n    }\n}\n\nconst mapDispatchtoProps = (dispatch)=>{\n    return{\n        authMessageResetAction: ()=>{dispatch(authMessageResetAction())}\n    }\n}\n\nexport default  compose(\n    connect(mapStateToProps,null),\n    withRouter\n)(Home)","import React, { Fragment, useEffect } from 'react'\nimport InfoCard from '../components/InfoCard'\nimport { NavLink, withRouter } from 'react-router-dom'\nimport { Icon } from '@material-ui/core'\nimport { useState } from 'react'\nimport { compose } from 'redux'\n\nimport 'materialize-css';\nimport { TextInput, Chip, Divider, Collapsible, CollapsibleItem } from 'react-materialize'\nimport {v1 as uuid } from 'uuid';\nimport { addProductAction, productUpdateReset } from '../store/actions/productAction'\nimport { connect } from 'react-redux'\nimport { reactReduxFirebase } from 'react-redux-firebase'\n\nfunction AddProduct(props) {\n\n    const [product,setProduct] = useState({});\n\n    const [stage, setStage] = useState('init');\n    const [rerender, setRerender] = useState(false);\n\n    const [productName, setProductName]                       = useState( product.productName             ??  ''      );\n    const [price, setPrice]                                   = useState( product.price                   ??  0       );\n    const [images, setImages]                                 = useState( product.images                  ??  [''] );\n    const [description, setDescription]                       = useState( product.description             ??  ''      );\n    const [features, setFeatures]                             = useState( product.features                ??  ['']      );\n    const [specs, setSpecs]                                   = useState( product.specs                   ??  [{specKey:'', specValue:''}]      );\n    const [categories, setCategories]                         = useState( product.categories              ??  ['All'] );\n    const [tags, setTags]                                     = useState( product.tags                    ??  []      );\n    const [hasOptions, setHasOptions]                         = useState( product.hasOptions              ??  false   );\n    const [inStock, setInStock]                               = useState( product.inStock                 ??  true    );\n    const [optionCategories, setOptionCategories]             = useState( product.optionCategories        ??  []      );\n    const [optionCategoriesObject, setOptionCategoriesObject] = useState( product.optionCategoriesObject  ??  {}      );\n    const [productOptions, setProductOptions]                 = useState( product.productOptions          ??  {}      );\n\n    useEffect(()=>{\n        console.log('optionCategories=>',optionCategories)\n        if(!optionCategories) return;\n        var local = optionCategoriesObject;\n        optionCategories.forEach((each,index)=>{\n            if(!Object.keys(local).includes(each)){\n                local[each] = [{ \n                    optionName:'',\n                    optionFeatures: [''],\n                    optionSpecs: [{ specKey:'', specValue:'' }],\n                    optionTags: ['']\n                }];\n            }\n        })\n        setRerender(!rerender);\n    },[optionCategories])\n\n    const [tempCat,setTempCat] = useState('');\n    const [tempTag,setTempTag] = useState('');\n    const [tempOpCat,setTempOpCat] = useState('');\n\n    const Con = (arA,arB)=>{\n        // console.log('in Con',arA,arB)\n        var arC = [];\n        if(!arB || !arA) return;\n        arA.forEach(eachA=>{\n            arB.forEach(eachB=>{\n                if(eachB?.length> 1){\n                    arC.push([eachA,...eachB])\n                }else{\n                    arC.push([eachA,eachB])\n                }\n            })\n        })\n        return arC;\n    }\n    const concatRec = (arARRAY,C)=>{    \n        // console.log('in rec');\n        if(arARRAY.length == 1){\n            return Con(arARRAY[0],C);\n        }\n        else{\n            // console.log('arARRAY', arARRAY);\n            var befLast = new Array (...arARRAY);\n            var last = befLast.pop();\n            // console.log('befLast', befLast);\n            // console.log('last', last);\n            // console.log('C', C);\n            // console.log(Con(last,C));\n            return concatRec( befLast, Con(last,C) );\n        }\n    }\n    const getOptionsIndexAr= (lenar)=>{\n        var arARRAY = lenar.map((each)=> new Array(each).fill().map((each,index)=>index) ) \n        // console.log('arArray init=> ',arARRAY);\n        var last = arARRAY.pop();\n        return concatRec(arARRAY, last);\n    }\n\n    const getIndciesFromOptionString = (string) => string.split('_').splice(1);\n\n    const startProductOptions = ()=>{\n        if(!optionCategories || optionCategories== [] || optionCategories.length<=0)  return;\n        var catlen = optionCategories.map((each)=>optionCategoriesObject[each].length);\n        console.log(catlen)\n        var optionIndexArr = getOptionsIndexAr(catlen);\n        var productOptionsKeys = optionIndexArr.map((each)=>'option_'+each.join('_'));\n        console.log(productOptionsKeys);\n        var localProductOptions = productOptions;\n        productOptionsKeys.forEach(each=>{\n            if(!Object.keys(productOptions).includes(each)){\n                localProductOptions[each] = {\n                    productFullName: '',\n                    price: 0,\n                    images: [''],\n                    inStock: true,\n                    isActive: true,\n                    optionTags: []\n                }\n            }\n        })\n        setStage('productOptions')\n    }\n\n    const getProductJSON = ()=>{\n        var pro = {} ;\n        if(hasOptions == true){\n            var localProductOptions = productOptions;\n            Object.keys(localProductOptions).forEach((eachOp,index)=>{\n                if(localProductOptions[eachOp].isActive == false){\n                    localProductOptions[eachOp] = {\n                                                      \"productFullName\": \"\",\n                                                      \"price\": 0,\n                                                      \"images\": [],\n                                                      \"inStock\": false,\n                                                      \"isActive\": false,\n                                                      \"optionTags\": []\n                                                  }\n                }\n            })\n            pro={\n                productName,\n                productOptions: localProductOptions,\n                optionCategories,\n                optionCategoriesObject,\n                hasOptions, \n                categories,\n                tags,\n                description,\n                specs,\n                features\n            }\n        }else{\n            pro={\n                productName,\n                price: parseFloat(price),\n                inStock,\n                hasOptions, \n                categories,\n                tags,\n                images,\n                description,\n                specs,\n                features\n            }\n        }\n        setProduct(pro);\n    }\n\n    const {addProductAction, productUpdateReset, productMessage, productError, productLog} = props;\n    useEffect(()=>{\n        setTimeout(()=>{\n            productUpdateReset()\n        },7000)\n    },[productMessage])\n    const submitProduct = ()=>{\n        addProductAction(product);\n    }\n\n    const initForm = (\n        <form className=\"row\">\n            <div className=\"col s12 productName-field\">\n                <label htmlFor=\"productName\">productName</label>\n                <input onChange={(e)=>{setProductName(e.target.value)}} type=\"text\" id=\"productName\" value={productName}/>\n            </div>\n            <div className=\"col s12 hasOptions-field\" >\n            <p>\n            <label>\n                <input name=\"hasOptions\" \n                readOnly={true} type=\"radio\" checked={hasOptions == true} />\n                <span  onClick={()=>{setHasOptions(!hasOptions)}} >{(hasOptions)\n                ?(<Fragment><span className=\"left-align primary-green-dark-text\"><Icon>done_all</Icon>hasOptions</span></Fragment>)\n                :(<Fragment><span className=\"left-align primary-red-text\"       ><Icon>close</Icon>hasOptions</span></Fragment>)}\n                </span>\n            </label>\n            </p>\n            </div>\n            <div className=\"col s12 center\">\n                <div \n                onClick={()=>{\n                    if(hasOptions == true) setStage('hasOptions');\n                    else setStage('doesnotHasOptions');\n                }}\n                className=\"btn dark_btn\">Next</div>\n            </div>\n        </form>\n    )\n\n    const descriptionForm = (\n        <form  className=\"row\">\n            <div className=\"col s12 input-field\">\n                <label className=\"active\" >Description</label>\n                <textarea style={{'height': `${description.split('\\n').length*35}px`}} className=\"materialize-textarea active\" onChange={(e)=>{ setDescription(e.target.value) }} id=\"description\">{description}</textarea>\n            </div>\n            <div className=\"col s12 center\">\n                <div \n                onClick={()=>{\n                    setStage('addFeatures');\n                }}\n                className=\"btn dark_btn\">Next</div>\n            </div>\n        </form>\n    )\n\n    const addFeaturesForm = (\n        <form className=\"row\">\n            <h6 className=\"center\">Features</h6>\n            {features.map((feature,index)=>(\n                <Fragment key={uuid()} >\n                <TextInput\n                id={uuid()}\n                s={10}\n                label={`Feature#${index} =>`}\n                onBlur={(e)=>{\n                   var local = features;\n                   local[index] = e.target.value;\n                   console.log(local);\n                    setFeatures(local)\n                  }}\n                defaultValue={feature}\n                />\n                <div className=\"col s2\">\n                    <div onClick={()=>{\n                        var local = features; \n                        local = local.filter((each,eachIndex)=> eachIndex!=index);\n                        setFeatures(local); setRerender(!rerender);\n                    }}  className=\"btn-floating primary-red-bg\"><i className=\"material-icons\">delete</i></div>\n                </div>\n                </Fragment>\n            ))}\n            <div className=\"col s12 center\">\n                <div onClick={()=>{ setFeatures([...features, '']) }} className=\"btn-floating primary-green-dark-bg\"><i className=\"material-icons\">add</i></div>\n            </div>\n            <br/>\n            <br/>\n            <br/>\n            <div className=\"col s12 center\">\n                <div onClick={()=>{ setStage('addSpecs') }} className=\"btn dark_btn\">Next</div>\n            </div>\n        </form>\n    )\n\n    const addSpecsForm = (\n        <form className=\"row\">\n            <h6 className=\"center\">Specifications</h6>\n            {specs.map((spec,index)=>(\n                <Fragment key={uuid()} >\n                <TextInput\n                    id={uuid()}\n                    s={5}\n                    label={`Spec#${index}(key) =>`}\n                    onBlur={(e)=>{\n                        var local = specs; \n                        local[index].specKey= e.target.value;\n                        setSpecs(local); setRerender(!rerender);\n                    }}\n                    defaultValue={spec.specKey}\n                />\n                <TextInput\n                    id={uuid()}\n                    s={5}\n                    label={`Spec#${index}(value) =>`}\n                    onBlur={(e)=>{\n                        var local = specs; \n                        local[index].specValue= e.target.value;\n                        setSpecs(local); setRerender(!rerender);\n                    }}\n                    defaultValue={spec.specValue}\n                />\n                <div className=\"col s2\">\n                    <div onClick={()=>{\n                        var local = specs; \n                        local = local.filter((each,eachIndex)=> eachIndex!=index);\n                        setSpecs(local);\n                    }}  className=\"btn-floating primary-red-bg\"><i className=\"material-icons\">delete</i></div>\n                </div>\n                </Fragment>\n            ))}\n            <div className=\"col s12 center\">\n                <div onClick={()=>{ setSpecs([...specs, {specKey:'', specValue:''} ]) }} className=\"btn-floating primary-green-dark-bg\"><i className=\"material-icons\">add</i></div>\n            </div>\n            <div className=\"col s12 center\">\n                <div onClick={()=>{ setStage('addCategoriesAndTags') }} className=\"btn dark_btn\">Next</div>\n            </div>\n        </form>\n    )\n\n    const addCategoriesAndTagsForm = (\n        <form className=\"row\">\n            <h6 className=\"center\">Categories</h6>\n            <div className=\"col s12\">\n            {categories.map((category,index)=>(\n\n                <Chip\n                key={uuid()}\n                close={false}\n                options={null}\n                onClick={()=>{ setCategories(categories.filter((each,eachIndex)=>eachIndex!=index)) }}\n                className=\"green-dark-chip hoverable\"\n                >\n                <p>{category}</p>\n              </Chip>\n            ))}\n            </div>\n            <div className=\"col s12 input-field\">\n                <input \n                    onChange={(e)=>{setTempCat(e.target.value)}} \n                    onKeyDown={(e)=>{ if(e.keyCode==13){ e.preventDefault(); setCategories([...categories, tempCat.trim()]); setTempCat('');  } }} \n                    type=\"text\" id='categories-enter' value={tempCat} placeholder='Add Category'\n                />\n            </div>\n            <div className=\"col s12\">\n            <Divider />\n            <Divider />\n            </div>\n            <h6 className=\"center\">Tags</h6>\n            <div className=\"col s12\">\n            {tags.map((tag,index)=>(\n\n                <Chip\n                key={uuid()}\n                close={false}\n                options={null}\n                onClick={()=>{ setTags(tags.filter((each,eachIndex)=>eachIndex!=index)) }}\n                className=\"green-dark-chip hoverable\"\n                >\n                <p>{tag}</p>\n              </Chip>\n            ))}\n            </div>\n            <div className=\"col s12 input-field\">\n                <input \n                    onChange={(e)=>{setTempTag(e.target.value)}} \n                    onKeyDown={(e)=>{ if(e.keyCode==13){ e.preventDefault(); setTags([...tags, ...tempTag.trim().toLowerCase().split(' ').filter(each=>![' ','','\\n'].includes(each))]); setTempTag('');  } }} \n                    type=\"text\" id='tags-enter' value={tempTag} placeholder='Add Tag'\n                />\n            </div>\n            <div className=\"col s6 center\">\n                <div onClick={()=>{ getProductJSON();setStage('productJSON') }} className=\"btn dark_btn\">View JSON</div>\n            </div>\n        </form>\n    )\n\n    const hasOptionsForm = (hasOptions == true)?(\n        <form className=\"row\">\n            <h5 className=\"center\">hasOptions=> true</h5>\n            <div className=\"col s12 input-field\">\n                <input \n                    onChange={(e)=>{setTempOpCat(e.target.value);}} \n                    onKeyDown={(e)=>{if(e.keyCode==13){\n                        e.preventDefault();\n                        setOptionCategories([...optionCategories, tempOpCat]); setTempOpCat(''); setRerender(!rerender)\n                    }}} \n                    type=\"text\" id='tags-enter' value={tempOpCat} placeholder='Add Option Category'\n                />\n            </div>\n            <div className=\"col s12\">\n            {optionCategories.map((opCat,index)=>(\n                <Chip\n                key={uuid()}\n                close={false}\n                options={null}\n                className=\"green-dark-chip hoverable\"\n                >\n                <p className='flow-text'>{opCat}</p>\n                </Chip>\n            ))}\n            </div>\n            <div className=\"col s12\">\n                <Fragment>\n                {Object.keys(optionCategoriesObject)?.sort().map((opCatOb,index)=>(\n                 <Fragment>\n                    <Fragment>\n                        <p className=\"white flow-text head\">{index}=>{opCatOb}</p>\n                    </Fragment>\n                    <Fragment>\n                    {optionCategoriesObject[opCatOb]?.map((eachElem,elemIndex)=>(\n                    <Fragment key={uuid()}>\n                    <Fragment>\n                        <Fragment>\n                        <div className=\"row\">\n                        <div className=\"col s6\"><p className=\"flow-text head heavy_text\">{opCatOb}#{elemIndex}=></p></div>\n                        <div className=\"col s6 right-align\">\n                            <div \n                            onClick={()=>{\n                                var local = optionCategoriesObject;\n                                local[opCatOb] = local[opCatOb].filter((filter, filterindex)=> elemIndex!=filterindex);\n                                setOptionCategoriesObject(local); setRerender(!rerender);\n                            }}\n                            className=\"btn red_btn no-wrap\"> <i className=\"material-icons\">delete</i> {opCatOb}#{elemIndex}</div>\n                        </div>\n                        </div>\n                        </Fragment>\n                        <div className=\"row\">\n\n                            <div className=\"col s4\"><p>OptionName: </p></div>\n                            <TextInput\n                                id={uuid()}\n                                s={8}\n                                onBlur={(e)=>{\n                                    var local = optionCategoriesObject;\n                                    local[opCatOb][elemIndex].optionName = e.target.value;\n                                    setOptionCategoriesObject(local); setRerender(!rerender);\n                                }}\n                                defaultValue={eachElem.optionName}\n                            />\n                        </div>\n                        <p className=\"head\">Options Features</p>\n                        <div className=\"row\">\n                        {eachElem.optionFeatures?.map((eachElemFeature,eachElemFeatureIndex)=>(\n                            <Fragment key={uuid()}>\n                            <TextInput\n                                id={uuid()}\n                                s={10}\n                                onBlur={(e)=>{\n                                    var local = optionCategoriesObject;\n                                    local[opCatOb][elemIndex].optionFeatures[eachElemFeatureIndex] = e.target.value;\n                                    setOptionCategoriesObject(local); setRerender(!rerender);\n                                }}\n                                defaultValue={eachElemFeature}\n                            />\n                            <div className=\"col s2\">\n                                <div \n                                onClick={(e)=>{\n                                    var local = optionCategoriesObject;\n                                    local[opCatOb][elemIndex].optionFeatures = local[opCatOb][elemIndex].optionFeatures.filter((filter, filterindex)=> eachElemFeatureIndex!=filterindex);\n                                    setOptionCategoriesObject(local); setRerender(!rerender);\n                                }}\n                                className=\"btn-floating primary-red-bg\"><i className=\"material-icons\">delete</i></div>\n                            </div>\n                            <div className=\"col s12\"></div>\n                            </Fragment>    \n                        ))}\n                        <div className=\"col s12 center\">\n                            <div \n                            onClick={(e)=>{\n                                var local = optionCategoriesObject;\n                                local[opCatOb][elemIndex].optionFeatures.push('');\n                                setOptionCategoriesObject(local); setRerender(!rerender);\n                            }}\n                            className=\"btn-floating primary-green-dark-bg\"><i className=\"material-icons\">add</i></div>\n                        </div>\n                        </div>\n                        <p className=\"head\">OptionSpecs</p>\n                        <div className=\"row\">\n                        {eachElem.optionSpecs?.map((eachElemSpec,eachElemSpecIndex)=>(\n                            <Fragment key={uuid()}>\n                            <TextInput\n                                id={uuid()}\n                                s={5}\n                                onBlur={(e)=>{\n                                    var local = optionCategoriesObject;\n                                    local[opCatOb][elemIndex].optionSpecs[eachElemSpecIndex].specKey = e.target.value;\n                                    setOptionCategoriesObject(local); setRerender(!rerender);\n                                }}\n                                defaultValue={eachElemSpec.specKey}\n                            />\n                            <TextInput\n                                id={uuid()}\n                                s={5}\n                                onBlur={(e)=>{\n                                    var local = optionCategoriesObject;\n                                    local[opCatOb][elemIndex].optionSpecs[eachElemSpecIndex].specValue = e.target.value;\n                                    setOptionCategoriesObject(local); setRerender(!rerender);\n                                }}\n                                defaultValue={eachElemSpec.specValue}\n                            />\n                            <div className=\"col s2\">\n                                <div \n                                onClick={()=>{\n                                    var local = optionCategoriesObject;\n                                    local[opCatOb][elemIndex].optionSpecs = local[opCatOb][elemIndex].optionSpecs.filter((filter, filterindex)=> eachElemSpecIndex!=filterindex);\n                                    setOptionCategoriesObject(local); setRerender(!rerender);\n                                }}\n                                className=\"btn-floating primary-red-bg\"><i className=\"material-icons\">delete</i></div>\n                            </div>\n                            <div className=\"col s12\"></div>\n                            </Fragment>    \n                        ))}\n                        <div className=\"col s12 center\">\n                            <div \n                            onClick={()=>{\n                                var local = optionCategoriesObject;\n                                local[opCatOb][elemIndex].optionSpecs.push({ specKey: '', specValue: '' });\n                                setOptionCategoriesObject(local); setRerender(!rerender);\n                            }}\n                            className=\"btn-floating primary-green-dark-bg\"><i className=\"material-icons\">add</i></div>\n                        </div>\n                        </div>\n                    <Divider />\n                    <Divider />\n                    <Divider />\n                    </Fragment>\n                    </Fragment>\n                    ))}\n                    <div className=\"row\">\n                        <div className=\"col s6 center\">\n                            <div \n                            onClick={()=>{\n                                var local = optionCategoriesObject;\n                                delete local[opCatOb];\n                                var localopcategories = optionCategories.filter(eachcat=>eachcat!=opCatOb);\n                                setOptionCategories(localopcategories);\n                                setOptionCategoriesObject(local); setRerender(!rerender);\n                            }}\n                            className=\"btn red_btn no-wrap\"> <i className=\"material-icons\">delete</i> {opCatOb} Category</div>\n                        </div>\n                        <div className=\"col s6 center\">\n                            <div \n                            onClick={()=>{\n                                var local = optionCategoriesObject;\n                                local[opCatOb].push({ \n                                    optionName:'',\n                                    optionFeatures: [''],\n                                    optionSpecs: [{ specKey:'', specValue:'' }]\n                                });\n                                setOptionCategoriesObject(local); setRerender(!rerender);\n                            }}\n                            className=\"btn dark_btn\">\n                                <i className=\"material-icons\">add</i> {opCatOb} Option\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"center\">\n                        \n                    </div>\n                    </Fragment>\n                 </Fragment>\n                ))}\n                </Fragment>\n            <div className=\"center\">\n                <div  onClick={()=>{ startProductOptions() }} className=\"btn dark_btn\">\n                    Proceed to Product Options\n                </div>\n            </div>\n            </div>\n        </form>\n    ):(null)\n    \n    const productOptionsForm = (hasOptions == true)?(\n        <Fragment>\n        {Object.keys(productOptions).map((productOption,index)=>(\n            \n                <Fragment key={uuid()}>\n                <div className=\"row\">\n                    <div className=\"col s12\">\n                        <table className=\"white\">\n                        <tbody>\n                        <tr><th className=\"head\">{productOption}</th>{optionCategories && optionCategories.map((each,index)=>(<th key={uuid()}>{optionCategoriesObject[each][getIndciesFromOptionString(productOption)[index]].optionName}</th>))}</tr>\n                        </tbody>\n                        </table>\n                    </div>\n                    <div className=\"col s6\">\n                    <p>\n                    <label>\n                        <input\n                        readOnly={true} type=\"radio\" checked={productOptions[productOption].isActive} />\n                        <span  \n                        onClick={()=>{\n                            console.log('clicked');\n                            var local = productOptions;\n                            local[productOption].isActive  = !local[productOption].isActive;\n                            console.log(local);\n                            setProductOptions(local); setRerender(!rerender);\n                        }} \n                        >{(productOptions[productOption].isActive)\n                        ?(<Fragment><span className=\"left-align primary-green-dark-text\"><Icon>done_all</Icon>isActive</span></Fragment>)\n                        :(<Fragment><span className=\"left-align primary-red-text\"       ><Icon>close</Icon>not Active</span></Fragment>)}\n                        </span>\n                    </label>\n                    </p>\n                    </div>\n                    {(productOptions[productOption].isActive)?(\n                        <Fragment>\n                        <div className=\"col s6\">\n                        <p>\n                        <label>\n                            <input\n                            readOnly={true} type=\"radio\" checked={productOptions[productOption].inStock} />\n                            <span  \n                            onClick={()=>{\n                                // console.log('clicked');\n                                var local = productOptions;\n                                local[productOption].inStock  = !local[productOption].inStock;\n                                // console.log(local);\n                                setProductOptions(local); setRerender(!rerender);\n                            }} \n                            >{(productOptions[productOption].inStock)\n                            ?(<Fragment><span className=\"left-align primary-green-dark-text\"><Icon>done_all</Icon>inStock</span></Fragment>)\n                            :(<Fragment><span className=\"left-align primary-red-text\"       ><Icon>close</Icon>out of Stock</span></Fragment>)}\n                            </span>\n                        </label>\n                        </p>\n                        </div>\n                        <div className=\"col s12\"></div>\n                        <div className=\"col s4\"><p className=\"head\">ProductFullName</p></div>\n                        <TextInput\n                            id={uuid()}\n                            s={8}\n                            onBlur={(e)=>{\n                                var local = productOptions;\n                                local[productOption].productFullName = e.target.value;\n                                setProductOptions(local); setRerender(!rerender);\n                            }}\n                            defaultValue={productOptions[productOption].productFullName}\n                        />\n                        <div className=\"col s12\"></div>\n                        <div className=\"col s4\"><p className=\"head\">ProductPrice</p></div>\n                        <TextInput\n                            id={uuid()}\n                            s={8}\n                            type='number'\n                            onBlur={(e)=>{\n                                var local = productOptions;\n                                local[productOption].price = parseFloat(e.target.value);\n                                setProductOptions(local); setRerender(!rerender);\n                            }}\n                            defaultValue={productOptions[productOption].price}\n                        />\n                        {(productOptions[productOption].images && productOptions[productOption].images.length> 0)?(\n                            <Fragment>\n                            <p className=\"left-align head\">Product Images</p>\n                            {productOptions[productOption].images.map((image,imIndex)=>(\n                                <Fragment key={uuid()}>\n                                <div className=\"row\">\n                                <TextInput\n                                id={uuid()}\n                                s={8}\n                                onBlur={(e)=>{\n                                    var local = productOptions;\n                                    local[productOption].images[imIndex] = e.target.value;\n                                    setProductOptions(local); setRerender(!rerender);\n                                }}\n                                defaultValue={image}\n                                />  \n                                <div className=\"col s2\">\n                                    <div \n                                    onClick={()=>{\n                                        var local = productOptions;\n                                        local[productOption].images = local[productOption].images.filter((each,eaindex)=>eaindex!=imIndex);\n                                        setProductOptions(local); setRerender(!rerender);\n                                    }}\n                                    className=\"btn-floating red_btn\"> <i className=\"material-icons\">delete</i> </div>\n                                </div>\n                                </div>\n                            </Fragment>\n                            ))}\n                            </Fragment>\n                        ):(\n                            <p className=\"head center heavy_text\">No images right now</p>\n                        )}\n                            <div className=\"col s12 center\">\n                                <div \n                                onClick={()=>{\n                                    var local = productOptions;\n                                    local[productOption].images.push('');\n                                    setProductOptions(local); setRerender(!rerender);\n                                }}\n                                className=\"btn-floating primary-green-dark-bg\"><i className=\"material-icons\">add</i></div>\n                            </div>\n                            <div className=\"col s4\">Option tags</div>\n                            {(productOptions[productOption].optionTags.map(((tag,tagindex)=>(\n                                <Chip\n                                key={uuid()}\n                                close={false}\n                                options={null}\n                                onClick={()=>{ \n                                    var local = productOptions;\n                                    local[productOption].optionTags = local[productOption].optionTags.filter((each,eachIndex)=>eachIndex!=tagindex);\n                                    setProductOptions(local); setRerender(!rerender);\n                                }}\n                                className=\"green-dark-chip hoverable\"\n                                >\n                                <p>{tag}</p>\n                              </Chip>\n                            ))))}\n                            <TextInput\n                                id={uuid()}\n                                s={12}\n                                onKeyDown={(e)=>{if(e.keyCode == 13){\n                                    var local = productOptions;\n                                    local[productOption].optionTags = [ ...local[productOption].optionTags , ...e.target.value.trim().toLowerCase().split(' ').filter(each=>![' ','','\\n'].includes(each)) ];\n                                    setProductOptions(local); setRerender(!rerender);\n                                }}}\n                                defaultValue={''}\n                            />\n                        </Fragment>\n                    ):(null)}\n\n                </div>\n                </Fragment>\n        ))}\n        <div className=\"center\">\n            <div\n            onClick={()=>{ setStage('addDescription') }}\n            className=\"btn dark_btn\">\n                Next\n            </div>\n        </div>\n        </Fragment>\n    ):(null)\n\n    const doesnotHasOptionsForm = (hasOptions == false)?(\n        <form className=\"row\">\n            <TextInput\n                id={uuid()}\n                s={6}\n                type='number'\n                label={'Product Price'}\n                onChange={(e)=>{ setPrice(parseFloat(e.target.value)) }}\n                value={price}\n            />\n            <div className=\"col s6\">\n                <p>\n                <label>\n                    <input\n                    readOnly={true} type=\"radio\" checked={inStock} />\n                    <span  \n                    onClick={()=>{ setInStock(!inStock); setRerender(!rerender) }} \n                    >{(inStock)\n                    ?(<Fragment><span className=\"left-align primary-green-dark-text\"><Icon>done_all</Icon>inStock</span></Fragment>)\n                    :(<Fragment><span className=\"left-align primary-red-text\"       ><Icon>close</Icon>out of Stock</span></Fragment>)}\n                    </span>\n                </label>\n                </p>\n            </div>\n            <div className=\"col s12 center\">\n            </div>\n            <div className=\"col s12\"><h6 className=\"head\">Images :</h6></div>\n            {images.map((image,index)=>(\n            <Fragment key={uuid()} >\n                <TextInput\n                id={uuid()}\n                s={10}\n                label={`Image#${index} =>`}\n                onBlur={(e)=>{\n                   var local = images;\n                   local[index] = e.target.value;\n                   console.log(local);\n                    setImages(local)\n                  }}\n                defaultValue={image}\n                />\n                <div className=\"col s2\">\n                    <div onClick={()=>{\n                        var local = images; \n                        local = local.filter((each,eachIndex)=> eachIndex!=index);\n                        setImages(local); setRerender(!rerender);\n                    }}  className=\"btn-floating primary-red-bg\"><i className=\"material-icons\">delete</i></div>\n                </div>\n            </Fragment>\n            ))}\n        <div className=\"col s12 center\">\n            <div onClick={()=>{ setImages([...images, '']) }} className=\"btn-floating primary-green-dark-bg\"><i className=\"material-icons\">add</i></div>\n        </div>\n        <br/>\n        <br/>\n        <br/>\n        <div className=\"col s12 center\">\n            <div\n                onClick={()=>{ setStage('addDescription') }}\n                className=\"btn dark_btn\">\n                    Next\n            </div>\n        </div>\n    </form>\n    ):(null)\n\n    const productJSON = (\n        <div className=\"productJSON\">\n            <p className=\"line-break\">\n                {JSON.stringify(product,null,4)}\n\n            </p>\n\n            <div className=\"row\">\n                <div className=\"s12 center\">\n                    <p className=\"log center\">\n                        <span className={(productMessage=='PRODUCT_ADD_ERROR')?(\"error\"):(\"success\")}>{productLog}</span>\n                    </p>\n                </div>\n                <div className=\"col s6 center\">\n                    <div onClick={()=>{setStage('init')}} className=\"btn light_btn\">\n                        <i className=\"material-icons\">edit</i> Start\n                    </div>\n                </div>\n                <div className=\"col s6 center\">\n                    {(productMessage == 'PRODUCT_UPDATE_RESET')?(<div className=\"btn dark_btn\" onClick={submitProduct} ><i className=\"material-icons\">add</i> Upload Product</div>):('')}\n                    {(productMessage == 'PRODUCT_ADD_IN_PROGRESS')?(<div className=\"btn dark_btn\"> Uploading....</div>):('')}\n                    {(productMessage == 'PRODUCT_ADD_ERROR')?(<div className=\"btn red_btn\" onClick={submitProduct} > Failed! <i  className=\"material-icons\">replay</i> Retry</div>):('')}\n                    {(productMessage == 'PRODUCT_ADD_SUCCESS')?(<div className=\"btn dark_btn\"><i  className=\"material-icons\">done_all</i>Uploaded</div>):('')}\n                </div>\n            </div>\n        </div>\n    )\n    const formStage = {\n        'init'                 :  {form: initForm                 ,show: true                , btnTitle:'Home' },\n        'hasOptions'           :  {form: hasOptionsForm           ,show: (hasOptions==true ) , btnTitle:'Has Options' },\n        'productOptions'       :  {form: productOptionsForm       ,show: (hasOptions==true ) , btnTitle:'Product Options' },\n        'doesnotHasOptions'    :  {form: doesnotHasOptionsForm    ,show: (hasOptions==false) , btnTitle:'No Options' },\n        'addDescription'       :  {form: descriptionForm          ,show: true                , btnTitle:'Description' },\n        'addFeatures'          :  {form: addFeaturesForm          ,show: true                , btnTitle:'Features' },\n        'addSpecs'             :  {form: addSpecsForm             ,show: true                , btnTitle:'Specifications' },\n        'addCategoriesAndTags' :  {form: addCategoriesAndTagsForm ,show: true                , btnTitle:'Categories and Tags' },\n        'productJSON'          :  {form: productJSON              ,show: true                , btnTitle:'Product Upload' }\n    }\n\n    return (\n        <div className=\"AddProduct Page\" >\n            <div className=\"container\">\n                <h4 className=\"center head\">Add <span className=\" heavy_text\">Product</span></h4>\n                <Collapsible>\n                    <CollapsibleItem\n                    header={\n                        <p className=\"center head heavy_text\"> Navigation </p>\n                    }\n                    >\n                        <div className=\"row-flex-center flex-wrap\">\n                            {Object.keys(formStage).map((each)=>(\n                            (formStage[each].show)\n                            ?(<div key={uuid()} className=\"btn dark_btn\" onClick={()=>{setStage(each)}} >{formStage[each].btnTitle}</div>)\n                            :(<div key={uuid()} className=\"btn dark_btn disabled\" onClick={()=>{setStage(each)}} >{formStage[each].btnTitle}</div>)\n                            ))}\n                            <a href=\"/addProduct\"><div key={uuid()} className=\"btn red_btn\" onClick={()=>{setProduct({})}} >reset product</div></a>\n                        </div>\n                    </CollapsibleItem>\n                </Collapsible>\n                { formStage[stage].form }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        productMessage  : state.productUpdates.productMessage,\n        productError    : state.productUpdates.productError,\n        productLog      : state.productUpdates.productLog,\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        addProductAction: (product)=>{dispatch(addProductAction(product))},\n        productUpdateReset: ()=>{ dispatch(productUpdateReset()) }\n    }\n}\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps)\n)(AddProduct)\n","export const updateProductInstock  = (productid, hasOptions, option ,inStock)=>{\n    console.log(productid, hasOptions, option ,inStock);\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firestore = getFirestore();\n        if(hasOptions){\n            var updateOb = {};\n            updateOb[`productOptions.${option}.inStock`] = inStock\n            firestore.collection('products').doc(productid).update( updateOb );\n        }else{\n            firestore.collection('products').doc(productid).update({ inStock });\n        }\n    }\n}\n\nexport const updateProductPrice = (update)=>{\n    console.log(update);\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firestore = getFirestore();\n        if(update.hasOptions){\n            var updateOb = {};\n            updateOb[`productOptions.${update.productOption}.price`] = update.price;\n            firestore.collection('products').doc(update.productid).update( updateOb );\n        }else{\n            firestore.collection('products').doc(update.productid).update({price: parseFloat(update.price)});\n        }\n    }\n}\n\nexport const addProductAction  = (newProduct)=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        dispatch({type:'PRODUCT_ADD_IN_PROGRESS'});\n        const firestore = getFirestore();\n        return firestore.collection('products').add({ ...newProduct, createdAt: new Date()})\n        .then(()=>{dispatch({type:\"PRODUCT_ADD_SUCCESS\"})})\n        .catch((err)=>{dispatch({type:\"PRODUCT_ADD_ERROR\", err: err.message})});\n\n    }\n}\n\nexport const setProductAction  = (product)=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        dispatch({type:'PRODUCT_SET_IN_PROGRESS'});\n        const firestore = getFirestore();\n        return firestore.collection('products').doc(product.id).set(product.data)\n        .then(()=>{dispatch({type:\"PRODUCT_SET_SUCCESS\"})})\n        .catch((err)=>{dispatch({type:\"PRODUCT_SET_ERROR\", err: err.message})});\n\n    }\n}\n\nexport const productUpdateReset  = ()=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        return dispatch({type:\"PRODUCT_UPDATE_RESET\"})\n    }\n}","import React, {Fragment, useEffect} from 'react'\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { Icon } from '@material-ui/core';\nimport {v1 as uuid} from 'uuid'\nimport { compose } from 'redux';\n\nimport 'materialize-css';\nimport { Divider, Collapsible, CollapsibleItem } from 'react-materialize'\nimport { useState } from 'react';\nimport { updateProductInstock } from '../store/actions/productAction';\nimport { connect } from 'react-redux';\n\nfunction ProductSearchCard({product, updateProductInstock}) {\n    const optionsKeys = Object.keys(product?.productOptions ?? {}).sort() ?? [];\n    const optionCategories  = product?.optionCategories ?? [];\n    const op_indexes = (option) => option.split('_').slice(1).map(each=>parseInt(each))\n    const ProductCardWithOptionsJSX = (product && product.hasOptions==true && optionsKeys)?(\n        <div className=\"col s12\" key={uuid()}> \n            <div className=\"card round-card\">\n            <div className=\"card-content\">\n                <table \n                className=\"small-table\">\n                    <tbody>\n                      <tr key={uuid()}>\n                      <th><NavLink to={`/editProduct/${product.id}`} className=\"head\">{product.id}</NavLink></th>\n                      </tr>\n                      <tr>\n                          <td>Product Name:  <span className=\"text-link heavy_text\">{product.productName}</span></td>\n                          <td className=\"no-wrap valign-wrapper\" >hasOptions:{(product.hasOptions?(<Icon className=\"primary-green-dark-text\" >done_all</Icon>):(<Icon className=\"primary-red-text\" >close</Icon>))}</td>\n                      </tr>\n                    </tbody>\n                </table>\n                {optionsKeys.map(optionk=>\n                (product.productOptions[optionk].isActive)?(\n                <Fragment key={uuid()}>\n                <p className=\"white small-font\" >\n                    OptionName: {product.productOptions[optionk].productFullName}\n                    \n                </p>\n                <table className=\"small-table\" >\n                <tbody>\n                <tr className=\"white\" >\n                    <td>Option id: {optionk}</td>\n                    <td>\n                        {op_indexes(optionk).map((each,index)=>\n                        <p className=\"line-break\" key={uuid()}>\n                            <span>{optionCategories[index]}: </span><span className=\"heavy_text\">{product.optionCategoriesObject[optionCategories[index]][each].optionName} <br /></span> \n                        </p>\n                        )}\n                    </td>\n                    <td>\n                        <p>\n                        <label onClick={()=>{\n                            updateProductInstock(product.id, product.hasOptions, optionk, !product.productOptions[optionk].inStock )\n                        }} >\n                            <input name={`${product.id}-${optionk}-inStockRadio`} readOnly={true} type=\"radio\" checked={product.productOptions[optionk].inStock == true} />\n                            <span>{(product.productOptions[optionk].inStock)?(<Fragment><span className=\"left-align primary-green-dark-text\"><Icon>done_all</Icon>In Stock</span></Fragment>\n                                                            ):(<Fragment><span className=\"left-align primary-red-text\"       ><Icon>close</Icon>Out of Stock</span></Fragment>)}\n                            </span>\n                        </label>\n                        </p>\n                    </td>\n                </tr>\n                </tbody>\n                </table>\n                <p> <Divider /> </p>\n                </Fragment>\n                ):(null))}\n            </div>\n            <Divider />\n            </div>\n        </div>\n    ):(null)\n\n    const ProductCardWithoutOptionsJSX = (product && product.hasOptions==false)?(\n        <div className=\"col s12\" key={uuid()}> \n        <div className=\"card round-card\">\n        <div className=\"card-content\">\n        <table className=\"small-table\" >\n            <tbody>\n                <tr key={uuid()}>\n                    <th><NavLink to={`/editProduct/${product.id}`} className=\"head\">{product.id}</NavLink></th>\n                    <td className=\"no-wrap valign-wrapper\" >hasOptions:{(product.hasOptions?(<Icon className=\"primary-green-dark-text\" >done_all</Icon>):(<Icon className=\"primary-red-text\" >close</Icon>))}</td>\n                    <td>\n                        <label>\n                            <input type=\"radio\" name={`${product.id}+-inStockRadio`} id={`${product.id}+-inStockRadio`} readOnly={true} checked={product.inStock == true} />\n                            <span \n                            onClick={()=>{ updateProductInstock(product.id, product.hasOptions, null, !product.inStock ) }}>{\n                                (product.inStock)\n                                ?(<Fragment><span className=\"left-align primary-green-dark-text\"><Icon>done_all</Icon>In Stock</span></Fragment>)\n                                :(<Fragment><span className=\"left-align primary-red-text\"       ><Icon>close</Icon>Out of Stock</span></Fragment>)\n                            }</span>\n                        </label>\n                    </td>\n                </tr>\n            </tbody>\n            </table>\n            <p className=\"small-font\">Product Name: {product.productName}</p>\n            <Divider />\n            <Divider />\n            <Divider />\n        </div>\n        </div> \n        </div>\n    ):(null)\n\n    return (\n        <Fragment>\n            {(product)?(\n                <Fragment>\n                    {(product.hasOptions == true )?(ProductCardWithOptionsJSX):('')}\n                    {(product.hasOptions == false)?(ProductCardWithoutOptionsJSX):('')}\n                </Fragment>\n            ):(null)}\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    return {}\n}\nconst mapDispatchToProps = (dispatch) =>{\n    return {\n        updateProductInstock: (productid, hasOptions, option ,inStock)=>{ dispatch( updateProductInstock(productid, hasOptions, option ,inStock) ) }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withRouter\n)(ProductSearchCard)\n","import React, { useState, Fragment } from 'react';\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase';\nimport { useSelector, connect } from 'react-redux';\nimport { useEffect } from 'react';\n// import 'materilize-css'\nimport { TextInput, Icon } from 'react-materialize'\nimport { unstable_createMuiStrictModeTheme } from '@material-ui/core';\nimport { v1 as uuid } from 'uuid';\nimport { NavLink } from 'react-router-dom';\nimport InfoCard from '../components/InfoCard';\nimport ProductSearchCard from '../components/ProductSearchCard';\n\nfunction SearchProduct() {\n    const initQuery = {\n        collection: 'products',\n        doc: 'default'\n    }\n    const [productsQuery, setProductsQuery ] = useState(initQuery);\n    useFirestoreConnect([productsQuery]);\n    \n    const products = useSelector(state=> state.firestore.ordered.products)??[];\n    const [productsLog, setProductsLog] = useState('');\n    useEffect(()=>{\n        if(JSON.stringify(initQuery) === JSON.stringify(productsQuery)){ console.log('init query');return setProductsLog(''); }\n        // console.log('passed',initQuery == productsQuery, initQuery, productsQuery);\n        if(!isLoaded(products)) return setProductsLog('LOADING_PRODUCTS');\n        if(!products || products.length == 0) return setProductsLog('NOT_FOUND_PRODUCTS')\n        return setProductsLog('LOADED_PRODUCTS')\n    },[products]);\n    const [productSearchTerm, setProductSearchTerm] = useState('');\n    const submitProductSearch = ()=>{\n        setProductsLog('LOADING_PRODUCTS');\n        var local = productSearchTerm.trim();\n        // console.log('productSearchTerm => ',productSearchTerm);\n        if(local == 'all'){\n            setProductsQuery({\n                collection: 'products',\n            });\n        }else{\n            setProductsQuery({\n                collection: 'products',\n                doc: local\n            });\n        }\n\n    }\n    const searchBar = (\n        <div className=\"searchbar_container\">\n        <div className=\"searchInput\" >\n        <input \n          id=\"searchInput\" \n          type=\"text\"\n          value={productSearchTerm}\n          onChange={ e=>setProductSearchTerm(e.target.value) }\n          onKeyDown={ e=>{ if(e.keyCode==13)submitProductSearch();} }\n        />\n        <Icon>search</Icon>\n      </div>\n      </div>\n    )\n    const ProductsViewJSX= (products && products.length>0)?(\n        <div className=\"row\">\n                <div className=\"col s12\" key={uuid()}> \n                    {products.map(product=>(\n                        <ProductSearchCard key={uuid()} product={product} />\n                    ))}    \n                </div>\n        </div>\n    ):(null)\n    \n\n    return (\n        <div className=\"SearchProduct Page\">\n            <div className=\"container\">\n                <h4 className=\"head center\"> Search <span className=\"heavy_text\">Product</span> </h4>\n                <div className=\"searchbar\">\n                    {searchBar}\n                </div>\n                {(productsLog == '')?(<InfoCard><p className=\"flow-text center\">Please search by product id </p></InfoCard>):(null)}\n                {(productsLog == 'LOADING_PRODUCTS')?(<InfoCard><p className=\"flow-text center\">Searching....</p></InfoCard>):(null)}\n                {(productsLog == 'NOT_FOUND_PRODUCTS')?(<InfoCard><p className=\"flow-text center\">NoProducts Found</p></InfoCard>):(null)}\n                {(productsLog == 'LOADED_PRODUCTS')?(ProductsViewJSX):(null)}\n                \n            </div>    \n        </div>\n    )\n}\n\nexport default SearchProduct\n","import React, { useState, useEffect, Fragment } from 'react'\nimport 'materialize-css';\nimport { Dropdown, TextInput, Icon, Collapsible,CollapsibleItem } from 'react-materialize'\nimport { v1 as uuid } from 'uuid';\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase';\nimport { useSelector } from 'react-redux';\nimport { NavLink, useHistory, withRouter } from 'react-router-dom';\nimport moment from 'moment';\nimport { compose } from 'redux';\nimport queryString from 'query-string';\nimport InfoCard from '../components/InfoCard';\nimport _ from 'lodash'\nfunction SearchOrder() {\n    const history = useHistory();\n    var queryPar = queryString.parse(history.location.search);\n    var soCat = queryPar?.searchOrderCategory ?? 'oa-id';\n    var soTerm= queryPar?.searchOrderTerm ?? '' ;\n    \n    \n    const [searchOrderCategory, setSearchOrderCategory] = useState(soCat);\n    const [searchOrderTerm, setSearchOrderTerm] = useState(soTerm);\n    const searchCategories = ['order-id','user-id','oa-id'];\n    const [log, setLog]  = useState('');\n    const initQuery = {\n        doc: 'default'\n    }\n    const getQuery = (searchOrderTerm, searchOrderCategory)=>{\n        if(searchOrderTerm == 'all')return {};\n        else if(searchOrderCategory == 'order-id')return {where: ['orderid', '==', searchOrderTerm]};\n        else if(searchOrderCategory == 'consumer-id')return {where: ['consumeruid', '==', searchOrderTerm]};\n        else if(searchOrderCategory == 'oa-id') return {doc: searchOrderTerm};\n    }\n\n    const [query, setQuery] = useState(getQuery(soTerm, soCat));\n    useFirestoreConnect({collection: 'ordersForAdmins', ...query, storeAs: 'ordersForAdmins'});\n    const ordersForAdmins = useSelector(state=> state.firestore.ordered.ordersForAdmins);\n    const [orders, setOrders] = useState([]);\n\n    useEffect(()=>{\n        if(!isLoaded(ordersForAdmins)) return setLog('SEARCHING');\n        if(!ordersForAdmins || ordersForAdmins.length == 0)  return setLog('NOT_FOUND');\n        setOrders(_.orderBy(ordersForAdmins,['createdAt'],['desc']));\n    },[ordersForAdmins])\n\n    const orderSearchFn = (searchOrderTerm, searchOrderCategory)=>{\n        // console.log('orderSearchFn');\n        setOrders([]);\n        setLog('SEARCHING');\n        setQuery(getQuery(searchOrderTerm,searchOrderCategory));\n    }\n    \n\n    useEffect(()=>{\n        return history.listen(async ()=>{\n            console.log('history effect');\n            queryPar = queryString.parse(history.location.search);\n            soTerm= queryPar?.searchOrderTerm ?? '' ;\n\n            soCat = queryPar?.searchOrderCategory ?? 'oa-id';\n            setSearchOrderCategory(soCat);\n            setSearchOrderTerm(soTerm);\n            orderSearchFn(soTerm, soCat);\n            return;\n        })\n    },[history])\n    \n    useEffect(()=>{\n        console.log('orders',orders);\n    },[orders])\n\n    const updateHistoryLink = ()=>{\n        history.push(`/searchOrder?searchOrderTerm=${searchOrderTerm.split(' ').join('')}&searchOrderCategory=${searchOrderCategory}`);\n    }\n    const resetHistoryLink = ()=>{\n        history.push(`/searchOrder`);\n    }\n\n    const seachDropdown = (\n        <Dropdown\n        id=\"orderSearchDropdown\"\n        options={{\n          alignment: 'left',\n          autoTrigger: true,\n          closeOnClick: true,\n          constrainWidth: false,\n          container: null,\n          coverTrigger: true,\n          hover: false,\n          inDuration: 150,\n          onCloseEnd: null,\n          onCloseStart: null,\n          onOpenEnd: null,\n          onOpenStart: null,\n          outDuration: 250\n        }}\n        trigger={\n          <div className='btn categories_dropdown_trigger' >{searchOrderCategory.slice(0,15)+((searchOrderCategory.length>15)?\"..\":'')+\" \\u25BC\"}</div>\n        }\n      >\n        {searchCategories?.map( eachcategory=> ( <a key={uuid()} onClick={()=>{setSearchOrderCategory(eachcategory)}}>{eachcategory}</a> ) )}\n      </Dropdown>\n    )\n\n    const searchBar = (\n        <div className=\"searchbar_container\">\n        <div className=\"searchInput\" >\n        {seachDropdown}\n        <input \n            id=\"searchInput\" \n            type=\"text\"\n            value={searchOrderTerm}\n            onChange={(e)=>{ setSearchOrderTerm(e.target.value); }}\n            onKeyDown={(e)=>{if(e.keyCode == 13){\n                updateHistoryLink();\n                // orderSearchFn(searchOrderTerm, searchOrderCategory);\n            }}}\n        />\n        <div className=\"head cursor-pointer\" onClick={()=>{ updateHistoryLink();  }}>\n            <Icon>search</Icon>\n        </div>\n      </div>\n      </div>\n    )\n    \n    const utilityButtonsArea = (\n        <div className=\"utilityButtonsArea center\">\n            <div className=\"row\">\n                <div onClick={()=>{ resetHistoryLink(); setLog('SEARCHING'); setOrders([]); setQuery({}) }} className=\"col s6 l4\"><div className=\"btn light_btn\">Get All Orders</div></div>\n                <div onClick={()=>{ resetHistoryLink(); setLog('SEARCHING'); setOrders([]); setQuery({where:['isOpen','==',true]}) }} className=\"col s6 l4\"><div className=\"btn dark_btn\">Get Open Orders</div></div>\n                <div onClick={()=>{ resetHistoryLink(); setLog('SEARCHING'); setOrders([]); setQuery({where:['isOpen','==', false]}) }} className=\"col s6 l4\"><div className=\"btn red_btn\">Get Closed Orders</div></div>\n            </div>\n        </div>\n    );\n\n    const OrderViewJSX = (orders && orders.length>0)?(\n        <div className=\"orders-view\">\n        <Collapsible accordion={false}>\n            {orders.map((order,index)=>(\n                <CollapsibleItem\n                    key={uuid()}\n                    expanded={false}\n                    header={\n                    <p className=\"small-text\">\n                        oa-id: <span className=\"regular_text small-text head\">{order.id}</span>\n                    </p>}\n                    // icon={<Icon>filter_drama</Icon>}\n                    node=\"div\"\n                >\n                    <div className=\"row\">\n                        <div className=\"col s6 l3 center\">\n                            <h6>\n                            {(order.isOpen)\n                            ?( <span className=\"head\"> <Icon>done_all</Icon> Order is Open </span> )\n                            :( <span className=\"primary-red-text\"> <Icon>clear</Icon> Order is Closed </span> )}\n                            </h6>\n                        </div>\n                        <div className=\"col s6 l3 center\">\n                            <NavLink to={`/order/`+order.id}>\n                                <div className=\"btn dark_btn\">ManageOrder</div>\n                            </NavLink>\n                        </div>\n                        <div className=\"col s6 l3 center\">\n                            <p className=\"left-align\">{moment(order.createdAt.toDate()).format('MMM Do YY, h:mm a')}</p>\n                        </div>\n                        <div className=\"s12 m0\"></div>\n                        <div className=\"col s6 l3 center\">\n                            <p className=\"center\">order status: <span className=\"heavy_text\">{order.status}</span></p>\n                        </div>\n                        \n                    </div>\n                </CollapsibleItem>\n            ))}\n        </Collapsible>\n        </div>\n    ):( \n        <Fragment>\n            {(log == '')?(<InfoCard><h5 className=\"center\">Search using oa-id user-id or order-id </h5></InfoCard>):(null)}\n            {(log=='SEARCHING')?(<InfoCard><h5 className=\"center\">Searching ....</h5></InfoCard>):(null)}\n            {(log=='NOT_FOUND')?(<InfoCard><h5 className=\"center\">No Orders Found</h5></InfoCard>):(null)}\n        </Fragment>\n    )\n\n    return (\n        <div className=\"Search Order Page\">\n            <div className=\"container\">\n                <h4 className=\"head center\"> Search <span className=\"heavy_text\">Order</span> </h4>\n                <div className=\"searchbar\">\n                    {searchBar}\n                    <h6 className=\"center heavy_text\">OR</h6>\n                    {utilityButtonsArea}\n                </div>\n\n                {OrderViewJSX}\n            </div>    \n        </div>\n    )\n}\n\nexport default compose(\n    withRouter\n)(SearchOrder)\n","import React from 'react'\n\nexport const numberFormat = (value) =>\nnew Intl.NumberFormat('en-IN', {\n  style: 'currency',\n  currency: 'INR'\n}).format(value);\n\nexport const priceFormat = (price)=>{\n    var formatted = numberFormat(price);\n    var symbol = formatted[0];\n    var integer = formatted.split('.')[0].slice(1);\n    var decimal = formatted.split('.')[1];\n    return (\n      <span className=\"product-price\">\n        {symbol+\" \"+integer+\".\"}<sub>{decimal}</sub>\n      </span>\n    )\n}","import React, { useEffect, Fragment } from 'react'\nimport { compose } from 'redux'\nimport { withRouter, NavLink } from 'react-router-dom'\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase'\nimport { useSelector, connect } from 'react-redux';\nimport InfoCard from '../components/InfoCard';\nimport { useState } from 'react';\nimport { v1 as uuid } from 'uuid';\nimport { priceFormat } from '../utils/utils';\nimport 'materialize-css';\nimport {Select,  Icon, TextInput} from 'react-materialize'\nimport moment from 'moment';\nimport { updateOrderAction } from '../store/actions/orderActions';\n\nfunction Order(props){\n    // console.log(props);\n    const {updateOrderAction} = props\n    const oaid = props.match.params.oaid;\n    console.log(oaid)\n    useFirestoreConnect({\n        collection: 'ordersForAdmins',\n        doc : oaid,\n        storeAs: `oa=${oaid}`\n    })\n    const oaCollection = useSelector(state=> state.firestore.ordered[`oa=${oaid}`]);\n    const [order, setOrder] = useState();\n    const [log, setLog ] = useState('');\n    useEffect(()=>{\n        if(!isLoaded(oaCollection)){ setLog('LOADING'); return;}\n        if(!oaCollection || oaCollection.length == 0){ setLog('NOT_FOUND'); return;}\n        setOrder(oaCollection[0]);\n    },[oaCollection])\n    \n    const statusOptions = ['Order Placed', 'Preparing For Dispatch', 'Dispatched', 'In Transit', 'On the Way', 'Out for Delivery', 'Delivered', 'Delayed', 'Cancellation Requested', 'Cancelled']\n    const [localStatus, setLocalStatus] = useState(order?.status);\n    const [localTrack, setLocalTrack] = useState('');\n    \n    useEffect(()=>{\n        console.log('localStatus =>',localStatus);\n    },[localStatus])\n\n    const updateStatus = ()=>{\n        console.log('localStatus =>',localStatus);\n        updateOrder({\n            docid: oaid, \n            data:{\n                    status: localStatus,\n                    tracking: [\n                        {title: localStatus, updateTime: new Date()},\n                        ...order?.tracking\n                    ],\n                    updatedAt: new Date()\n            }    \n        });\n    }\n\n    const addTrack = ()=>{\n        console.log('addTrack => ', addTrack);\n        updateOrder({\n            docid: oaid, \n            data:{\n                    tracking: [\n                        {title: localTrack, updateTime: new Date()},\n                        ...order?.tracking\n                    ],\n                    updatedAt: new Date()\n            }    \n        })\n    }\n\n    const closeOrder = ()=>{\n        updateOrder({\n            docid: oaid,\n            data:{\n                isOpen: false,\n                updatedAt: new Date()\n            }\n        })\n    }\n\n    const updateOrder = (update)=>{\n        updateOrderAction(update);\n    }\n\n    const cartJSX = (order && order.cart)?(\n        <div className=\"cart\">\n                <div className=\"card round-card\">\n                <div className=\"card-content overflowable\">\n                <table>\n                <tr><td>Product</td><td>Price</td><td>CartQty</td><td>SubTotal</td></tr>\n                {order.cart.map(each=>(\n                <tr key={uuid()}><td>{each.productName}</td><td>{each.productPrice}</td><td>{each.cartQty}</td><td>{each.productPrice*each.cartQty}</td></tr>\n                ))}\n                <tr><td></td><td></td><th>Total</th><th className=\"no-wrap\">{priceFormat(order.cart.reduce((ac,each)=>(ac+each.productPrice*each.cartQty),0))}</th></tr>\n                </table>\n                </div>\n                </div>\n            </div>\n    ):(null)\n    \n    const accountJSX = (order)?(\n        <div className=\"account\">\n                <div className=\"card round-card\">\n                <div className=\"card-content overflowable\">\n                <h6 className=\"center head heavy_text\">Account</h6>\n                <table>\n                <tbody>\n                <tr><td className=\"small-text\">Consumer id</td><th className=\"small-text\">{order.consumeruid}</th></tr>\n                <tr><td className=\"small-text\">Order id</td><th className=\"small-text\">{order.orderid}</th></tr>\n                <tr><td className=\"small-text\">oa id</td><th className=\"small-text\">{order.id}</th></tr>\n                </tbody>\n                </table>\n                </div>\n                </div>\n            </div>\n    ):(null)\n\n    const addressJSX = (order && order.address)?(\n        <div className=\"address\">\n            <div className=\"card round-card\">\n            <div className=\"card-content overflowable\">\n            <h6 className=\"center head heavy_text\">Address</h6>\n            <table>\n            <tbody>\n            <tr><td>Full Name</td><th>{order.address.fullName}</th></tr>\n            <tr><td>Address Line</td><th>{order.address.addressLine}</th></tr>\n            <tr><td>City</td><th>{order.address.city}</th></tr>\n            <tr><td>State</td><th>{order.address.state}</th></tr>\n            <tr><td>Country</td><th>{order.address.country}</th></tr>\n            <tr><td>Pincode</td><th>{order.address.pincode}</th></tr>\n            <tr><td>Phone No</td><th>{order.address.phoneNo}</th></tr>\n            <tr><td>Payment Type</td><th>{order.paymentType}</th></tr>\n            </tbody>\n            </table>\n            </div>\n            </div>\n        </div>\n    ):(null)\n    const statusJSX = (order)?(\n        <div className=\"status\">\n            <div className=\"card round-card overflow-visble\">\n            <div className=\"card-content overflow-visble\">\n            <h6 className=\"center head heavy_text\">Status</h6>\n                <div className=\"row\">\n                {(order.isOpen)?(\n                <div className=\"col s12 center row\">\n                    <div className=\"col s6 center\"><h6 className=\"head heavy_text\"><Icon>done_all</Icon>Order is OPEN</h6></div>\n                    <div className=\"col s6 center\"><div onClick={()=>{ closeOrder(); }} className=\"btn red_btn\">Close Order</div></div>\n                </div>\n                ):(\n                <div className=\"col s12 center\"><h6 className=\"primary-red-text heavy_text\"><Icon>clear</Icon> Order is Closed </h6></div>\n                )}\n                <div className=\"s12\"></div>\n                <div className=\"col s12 center\">\n                    Current Status: <span className=\"heavy_text\">{order.status}</span>\n                </div>\n                {(order.isOpen)?(\n                <Fragment>\n                <div className=\"col s12 l8 center\">\n                <Select\n                  id=\"statusSelection\"\n                  multiple={false}\n                  onChange={(e)=>{ setLocalStatus(e.target.value); }}\n                  s={12}\n                  options={{\n                    classes: '',\n                    dropdownOptions: {\n                      alignment: 'left',\n                      autoTrigger: true,\n                      closeOnClick: true,\n                      constrainWidth: true,\n                      coverTrigger: true,\n                      hover: false,\n                      inDuration: 150,\n                      onCloseEnd: null,\n                      onCloseStart: null,\n                      onOpenEnd: null,\n                      onOpenStart: null,\n                      outDuration: 250\n                    }\n                  }}\n                  value={order.status}\n                >\n                  <option className=\"small-text\" disabled value=\"\">Update Status</option>\n                  {statusOptions.map(eaStatus=>(\n                  <option className=\"small-text\" value={eaStatus}>{eaStatus}</option>\n                  ))}\n                </Select>\n                </div>\n                <div className=\"col s12 l4\">\n                    <div \n                    onClick={()=>{ updateStatus(); }}\n                    className=\"btn dark_btn\">\n                        Update Status\n                    </div>\n                </div>\n                </Fragment>\n                ):(null)}\n                </div>\n            </div>\n            </div>\n        </div>\n    ):(null)\n\n    const trackingJSX  = (order && order.tracking)?(\n        <div className=\"tracking\">\n            <div className=\"card round-card overflow-visble\">\n            <div className=\"card-content overflow-visble\">\n            <h6 className=\"center head heavy_text\">Tracking</h6>\n            <div className=\"row\">\n            <div className=\"col s12\">\n            <table>\n            <tbody>\n            {order.tracking.map(track=>(\n            <tr><td>{track.title}</td><td>{moment(track.updateTime.toDate()).format('MMM Do YY, h:mm a')}</td></tr>\n            ))}\n            </tbody>\n            </table>\n            </div>\n            {(order.isOpen == true)?(<div className=\"col s12\">\n                <div className=\"valign-wrapper\">\n                <TextInput\n                    id={uuid()}\n                    s={8}\n                    label='Add Tracking =>'\n                    onChange={(e)=>{\n                       setLocalTrack(e.target.value);\n                    }}\n                    onKeyDown={(e)=>{if(e.keyCode == 13){\n                        addTrack();\n                        setLocalTrack('');\n                    }}}\n                    value={localTrack}\n                />\n                <div className=\"col s2\">\n                    <div \n                    onClick = {()=>{ \n                        addTrack();\n                        setLocalTrack('');\n                    }}\n                    className=\"btn-floating primary-green-dark-bg\"><i className=\"material-icons\">add</i></div>\n                </div>\n                </div>\n            </div>):(null)}\n\n            </div>\n            </div>\n            </div>\n        </div>\n    ):(null)\n\n    const OrderViewJSX = (order)?(\n        <div className=\"order-view\">\n            {/* <p className=\"line-break small-text\">{JSON.stringify(order,null,4)}</p> */}\n            {accountJSX}\n            {statusJSX}\n            {addressJSX}\n            {trackingJSX}\n            {cartJSX}\n        </div>\n    ):(\n        <Fragment>\n            {(log == 'LOADING')?( <InfoCard><h5 className=\"center\">Loading...</h5></InfoCard> ):(null)}\n            {(log == 'NOT_FOUND')?( <InfoCard><h5 className=\"center\">\n                Order not found<br />\n                Please <NavLink to=\"/searchOrder\"><span className=\"head\">Search Order</span></NavLink>\n            </h5></InfoCard> ):(null)}\n        </Fragment>\n    )\n\n    return (\n        <div className=\"Order Page\" >\n            <div className=\"container\">\n            {OrderViewJSX}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    return {}\n};\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        updateOrderAction:  (update)=>{ dispatch(updateOrderAction(update)) }\n    }\n};\n\nexport default \ncompose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withRouter\n)(Order)","export const updateOrderAction  = (update)=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firestore = getFirestore();\n        return firestore.collection('ordersForAdmins').doc(update.docid).update(update.data);\n    }\n}","export const updateCategoryAction  = (update)=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        dispatch({type:'CATEGORY_UPDATE_IN_PROGRESS'});\n        const firestore = getFirestore();\n        return firestore.collection('categories').doc(update.docid).update(update.data)\n        .then(()=>{dispatch({type:\"CATEGORY_UPDATE_SUCCESS\"})})\n        .catch((err)=>{dispatch({type:\"CATEGORY_UPDATE_ERROR\", err: err.message})});\n    }\n}\n\nexport const deleteCategoryAction  = (docid)=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        dispatch({type:'CATEGORY_DELETE_IN_PROGRESS'});\n        const firestore = getFirestore();\n        return firestore.collection('categories').doc(docid).delete()\n        .then(()=>{dispatch({type:\"CATEGORY_DELETE_SUCCESS\"})})\n        .catch((err)=>{dispatch({type:\"CATEGORY_DELETE_ERROR\", err: err.message})});\n    }\n}\n\nexport const addCategoryAction  = (data)=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        dispatch({type:'CATEGORY_ADD_IN_PROGRESS'});\n        const firestore = getFirestore();\n        return firestore.collection('categories').add(data)\n        .then(()=>{dispatch({type:\"CATEGORY_ADD_SUCCESS\"})})\n        .catch((err)=>{dispatch({type:\"CATEGORY_ADD_ERROR\", err: err.message})});\n    }\n}\n\nexport const categoryLogResetAction  = (data)=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        dispatch({type:'CATEGORY_LOG_RESET'});\n    }\n}","import React, { useState, useEffect, Fragment } from 'react'\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase'\nimport 'materialize-css';\nimport { TextInput, Icon } from 'react-materialize';\nimport { connect, useSelector } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter, NavLink, useHistory } from 'react-router-dom';\nimport { addCategoryAction, categoryLogResetAction, updateCategoryAction, deleteCategoryAction } from '../store/actions/categoryActions'\nimport { v1 as uuid } from 'uuid';\nimport InfoCard from '../components/InfoCard';\n\nfunction EditCategory(props) {\n    const history = useHistory();\n    const {categoryLogReset,updateCategory, deleteCategory} = props;\n    const [newCategoryName, setNewCategoryName] = useState('');\n    const [newCategoryUrlid, setNewCategoryUrlid] = useState('');\n    const categoryReducer = useSelector(state=>state.categoryReducer)\n    // console.log(props);\n    const {categoryid} = props.match.params;\n    useEffect(()=>{\n        if(categoryReducer.categoryMessage == 'CATEGORY_DELETE_SUCCESS'){\n            history.push('/addCategory');\n        }\n        setTimeout(()=>{categoryLogReset()},3000)\n    },[categoryReducer])\n\n    useFirestoreConnect({\n        collection: 'categories',\n        doc: categoryid,\n        storeAs: `editCategoryDoc=${categoryid}`\n    })\n    const categoryCol = useSelector(state=>state.firestore.ordered[`editCategoryDoc=${categoryid}`]);\n    const [category, setCategory] =useState({});\n    const [localCategory, setLocalCategory] =useState({});\n    const [categoriesLog, setCategoriesLog] = useState('');\n    const [rerender, setRerender] = useState(false);\n    const [categoryBanner, setCategoryBanner] = useState([]);\n    useEffect(()=>{\n        if(!isLoaded(categoryCol)) return setCategoriesLog('LOADING_CATEGORY');\n        if(!categoryCol || categoryCol.length == 0) return setCategoriesLog('NOT_FOUND_CATEGORY')\n        setCategoriesLog('LOADED_CATEGORY')\n        return setCategory(categoryCol[0]);\n    },[categoryCol]);\n    useEffect(()=>{\n        if(!category) return;\n        if(category.banner && category.banner.length > 0) setCategoryBanner(category.banner);\n    },[category])\n\n    const updateCategoryFn = ()=>{\n        if(categoryBanner.length <= 0) return;\n        updateCategory({\n            docid: categoryid,\n            data: { banner: categoryBanner }\n        });\n    }\n    const deleteCategoryFn = ()=>{\n        deleteCategory(categoryid);\n    }\n\n    const categoryJSX = (category)?(\n        <div className=\"category\">\n            <div className=\"card round-card\">\n                <div className=\"card-content\">\n                    <table>\n                    <tbody>\n                    <tr><td>Category Name</td><th>{category.title}</th></tr>\n                    <tr><td>Category url-id</td><th>{category.urlid}</th></tr>\n                    </tbody>\n                    </table>\n                </div>\n            </div>\n            <div className=\"card round-card\">\n                <div className=\"card-content\">\n                    <div className=\"row\">\n                    <div className=\"col s12\"><p className=\"head center\">Banner Images</p></div>\n                    {(categoryBanner)?(\n                    <Fragment>\n                    {categoryBanner.map((eachB,eachBindex)=>(\n                    <Fragment key={uuid()}>\n                    <TextInput \n                        s={9}\n                        id={`bannerimage-${eachBindex}`}\n                        onChange={(e)=>{\n                            var local = new Array(...categoryBanner);\n                                // console.log(local);\n                                local[eachBindex] = {image:e.target.value, productLink:false};\n                                setCategoryBanner(local); setRerender(!rerender);\n                        }}\n                        value={ eachB.image }\n                    />\n                    <div className=\"col s2\">\n                        <div \n                        onClick={()=>{\n                            var local = new Array(...categoryBanner);\n                            // console.log(local);\n                            local = local.filter((ea,eaindex)=>eaindex!=eachBindex);\n                            setCategoryBanner(local); setRerender(!rerender);\n                        }}\n                        className=\"btn-floating primary-red-bg\"><i className=\"material-icons\">delete</i></div>\n                    </div>\n                    </Fragment>\n                    ))}\n                    <div \n                    onClick={()=>{\n                        var local = new Array(...categoryBanner);\n                        // console.log(local);\n                        local.push({image:'', productLink:false});\n                        setCategoryBanner(local); setRerender(!rerender);\n                    }}\n                    className=\"col s12 center\">\n                        <div className=\"btn-floating primary-green-dark-bg\"><i className=\"material-icons\">add</i></div>\n                    </div>\n                    </Fragment>\n                    ):(<p className=\"center red-text\">banner images not set</p> )}\n                    </div>\n\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col s6 center\">\n                    {(categoryReducer.categoryMessage==null  || categoryReducer.categoryMessage == '')?(\n                    <div onClick={()=>{ deleteCategoryFn() }} className=\"btn red_btn\"><Icon>delete</Icon> Delete Category</div>\n                    ):(null)}\n                    {(categoryReducer.categoryMessage == 'CATEGORY_DELETE_IN_PROGRESS')?(\n                    <div  className=\"btn red_btn\"> Deleting... </div>\n                    ):(null)}\n                    {(categoryReducer.categoryMessage == 'CATEGORY_DELETE_SUCCESS')?(\n                    <div className=\"btn red_btn\"><Icon>done_all</Icon> Deleted</div>\n                    ):(null)}\n                    {(categoryReducer.categoryMessage == 'CATEGORY_DELETE_ERROR')?(\n                    <div onClick={()=>{ deleteCategoryFn() }} className=\"btn red_btn\"><Icon>clear</Icon> Delete Err</div>\n                    ):(null)}\n                </div>\n                <div className=\"col s6 center\">\n                    {(categoryReducer.categoryMessage==null  || categoryReducer.categoryMessage == '')?(\n                    <div  onClick={()=>{ updateCategoryFn() }} className=\"btn dark_btn\"><Icon>edit</Icon> Update Category</div>\n                    ):(null)}\n                    {(categoryReducer.categoryMessage == 'CATEGORY_UPDATE_IN_PROGRESS')?(\n                    <div className=\"btn dark_btn\"> Updating... </div>\n                    ):(null)}\n                    {(categoryReducer.categoryMessage == 'CATEGORY_UPDATE_SUCCESS')?(\n                    <div className=\"btn dark_btn\"><Icon>done_all</Icon> Updated</div>\n                    ):(null)}\n                    {(categoryReducer.categoryMessage == 'CATEGORY_UPDATE_ERROR')?(\n                    <div onClick={()=>{ updateCategoryFn() }} className=\"btn red_btn\"><Icon>clear</Icon>Retry Upload</div>\n                    ):(null)}\n                </div>\n            </div>\n        </div>\n    ):(null)\n\n    return (\n        <div className=\"AddCategory Page\">\n            <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col s12\">\n                    <h5 className=\"center head heavy_text\">Edit Categories:</h5>\n                </div>\n                <div className=\"col s12\">\n                    {(categoriesLog == 'LOADING_CATEGORY')?(\n                        <InfoCard> <h5 className=\"center\">Loading...</h5> </InfoCard>\n                    ):(null)}\n                    {(categoriesLog == 'NOT_FOUND_CATEGORY')?(\n                        <InfoCard> <h5 className=\"center\">No categories found</h5> </InfoCard>\n                    ):(null)}\n                    {(categoriesLog == 'LOADED_CATEGORY')?(\n                        <Fragment>\n                            {categoryJSX}\n                        </Fragment>\n                    ):(null)}\n                </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) =>{\n    console.log(state);\n    return {}\n}\nconst mapDispatchToProps =(dispatch) => {\n    return {\n        addCategory: (data)=>{dispatch( addCategoryAction(data) )},\n        categoryLogReset: (data)=>{dispatch( categoryLogResetAction(data) )},\n        updateCategory: (update)=>{dispatch( updateCategoryAction(update) )},\n        deleteCategory: (docid)=>{ dispatch( deleteCategoryAction(docid) ) }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withRouter\n)(EditCategory)\n","import React, { useState, useEffect } from 'react'\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase'\nimport 'materialize-css';\nimport { TextInput, Icon } from 'react-materialize';\nimport { connect, useSelector } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport { addCategoryAction, categoryLogResetAction } from '../store/actions/categoryActions'\nimport { v1 as uuid } from 'uuid';\nimport InfoCard from '../components/InfoCard';\n\nfunction AddCategory(props) {\n    const {addCategory, categoryLogReset} = props;\n    const [newCategoryName, setNewCategoryName] = useState('');\n    const [newCategoryUrlid, setNewCategoryUrlid] = useState('');\n    const categoryReducer = useSelector(state=>state.categoryReducer)\n    \n    useEffect(()=>{\n        setTimeout(()=>{categoryLogReset()},3000)\n    },[categoryReducer])\n\n    useFirestoreConnect({\n        collection: 'categories'\n    })\n    const categories = useSelector(state=>state.firestore.ordered.categories);\n    const [categoriesLog, setCategoriesLog] = useState('');\n    useEffect(()=>{\n        if(!isLoaded(categories)) return setCategoriesLog('LOADING_CATEGORIES');\n        if(!categories || categories.length == 0) return setCategoriesLog('NOT_FOUND_CATEGORIES')\n        return setCategoriesLog('LOADED_CATEGORIES')\n    },[categories])\n\n    const submitNewCategory= ()=>{\n        if(newCategoryName == '' || newCategoryUrlid == '') return;\n        addCategory({\n            title: newCategoryName,\n            urlid: newCategoryUrlid.toLowerCase().split(' ').join('-')\n        })\n    }\n    return (\n        <div className=\"AddCategory Page\">\n            <div className=\"container\">\n            <h5 className=\"center head heavy_text\">Add Category:</h5>\n            <div className=\"row\">\n                <div className=\"col s12 m6\">\n                    <TextInput \n                        id=\"newcatname\"\n                        s={12}\n                        label='New Category Name=>'\n                        onChange={(e)=>{setNewCategoryName(e.target.value)}}\n                    />\n                </div>\n                <div className=\"col s12 m6\">\n                    <TextInput \n                        id=\"newcaturlid\"\n                        s={12}\n                        label='New Category url-id=>'\n                        onChange={(e)=>{setNewCategoryUrlid(e.target.value)}}\n                    />\n                </div>\n                <div className=\"col s12 center\">\n                    {(categoryReducer.categoryMessage==null  || categoryReducer.categoryMessage == '')?(\n                    <div  onClick={()=>{submitNewCategory()}} className=\"btn dark_btn\"><Icon>edit</Icon> Add Category</div>\n                    ):(null)}\n                    {(categoryReducer.categoryMessage == 'CATEGORY_ADD_IN_PROGRESS')?(\n                    <div className=\"btn dark_btn\"> Adding Category... </div>\n                    ):(null)}\n                    {(categoryReducer.categoryMessage == 'CATEGORY_ADD_SUCCESS')?(\n                    <div className=\"btn dark_btn\"><Icon>done_all</Icon> Updated</div>\n                    ):(null)}\n                    {(categoryReducer.categoryMessage == 'CATEGORY_ADD_ERROR')?(\n                    <div onClick={()=>{submitNewCategory()}} className=\"btn red_btn\"><Icon>clear</Icon>Retry </div>\n                    ):(null)}\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col s12\">\n                    <h5 className=\"center head heavy_text\">Existing Categories:</h5>\n                </div>\n                <div className=\"col s12\">\n                    {(categoriesLog == 'LOADING_CATEGORIES')?(\n                        <InfoCard> <h5 className=\"center\">Loading...</h5> </InfoCard>\n                    ):(null)}\n                    {(categoriesLog == 'NOT_FOUND_CATEGORIES')?(\n                        <InfoCard> <h5 className=\"center\">No categories found</h5> </InfoCard>\n                    ):(null)}\n                    {(categoriesLog == 'LOADED_CATEGORIES')?(\n                        <table className=\"white\">\n                        <tbody>\n                        <tr><td>Category name</td><td>Category url-id</td><td>Category id</td></tr> \n                        {categories.map((category)=>(\n                        <tr key={uuid()}><td className=\"head regular_text\"><NavLink className='head' to={`/editCategory/${category.id}`}>{category.title}</NavLink></td><th>{category.urlid}</th><td>{category.id}</td></tr>\n                        ))}\n                        </tbody>\n                        </table>\n                    ):(null)}\n                </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) =>{\n    return {}\n}\nconst mapDispatchToProps =(dispatch) => {\n    return {\n        addCategory: (data)=>{dispatch( addCategoryAction(data) )},\n        categoryLogReset: (data)=>{dispatch( categoryLogResetAction(data) )}\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withRouter\n)(AddCategory)\n","import React, { Fragment, useEffect } from 'react'\nimport InfoCard from '../components/InfoCard'\nimport { NavLink, withRouter } from 'react-router-dom'\nimport { Icon } from '@material-ui/core'\nimport { useState } from 'react'\nimport { compose } from 'redux'\nimport $ from 'jquery';\nimport 'materialize-css';\nimport { TextInput, Chip, Divider, Collapsible, CollapsibleItem } from 'react-materialize'\nimport {v1 as uuid } from 'uuid';\nimport { setProductAction, productUpdateReset,updateProductPrice } from '../store/actions/productAction'\nimport { connect, useSelector } from 'react-redux'\nimport { reactReduxFirebase, useFirestoreConnect, isLoaded } from 'react-redux-firebase'\n\nfunction EditProduct(props) {\n\n    const {productid} = props.match.params;\n    const {updateProductPriceFn} = props;\n    // console.log(productid);\n    useFirestoreConnect({\n        collection: 'products',\n        doc: productid,\n        storeAs: `editproduct=${productid}`\n    })\n    const editProductCol = useSelector(state=>state.firestore.ordered[`editproduct=${productid}`]);\n    const [loadingLog, setLoadingLog] = useState('');\n\n    const [product,setProduct] = useState({});\n    useEffect(()=>{\n        // console.log(editProductCol);\n        if(!isLoaded(editProductCol)) return setLoadingLog('LOADING');\n        if(!editProductCol || editProductCol.length ==0) return setLoadingLog('NOT_FOUND');\n        setProduct(editProductCol[0])     \n        return setLoadingLog(\"LOADED\");\n    },[editProductCol])\n\n    const priceAdjustmentJSX = (product)?(\n        <Fragment>\n            <h5 className=\"center\">Adjust Price</h5>\n            {(product.hasOptions == true)?(\n                <div className=\"row\">\n                {Object.keys(product.productOptions).filter(optionk=>product.productOptions[optionk].isActive).sort().map((optionk)=>(\n                <Fragment key={uuid()}>\n                    <div className=\"col s3\">\n                        <p className=\"head center-align\">\n                            {optionk} <br/>\n                            {product.productOptions[optionk].productFullName}\n                        </p>\n                    </div>\n                    <div className=\"col s6\">\n                        <input \n                            id={`${optionk}-Price`}\n                            type=\"text\"\n                            placeholder={product.productOptions[optionk].price}\n                        />\n                    </div>\n                    <div className=\"col s3\">\n                        <div \n                        onClick={()=>{\n                            var price = $(`input#${optionk}-Price`).val();\n                            $(`input#${optionk}-Price`).val('')\n                            updateProductPriceFn({\n                                hasOptions: product.hasOptions,\n                                productid: productid,\n                                productOption: optionk,\n                                price: price\n                            })\n                        }}\n                        className=\"btn dark_btn\">\n                            Update\n                        </div>\n                    </div>\n                    <div className=\"col s12\">\n                        <hr/>\n                    </div>\n                </Fragment>\n                ))}\n                </div>\n            ):(\n                <div className=\"row\">\n                    <div className=\"col s3\">\n                        <p className=\"head center-align\">\n                            {product.productName}\n                        </p>\n                    </div>\n                    <div className=\"col s6\">\n                        <input \n                            id={`Price`}\n                            type=\"text\"\n                            placeholder={product.price}\n                        />\n                    </div>\n                    <div className=\"col s3\">\n                        <div \n                        onClick={()=>{\n                            var price = $(`input#Price`).val();\n                            $(`input#Price`).val('')\n                            updateProductPriceFn({\n                                hasOptions: product.hasOptions,\n                                productid: productid,\n                                productOption: false,\n                                price: price\n                            })\n                        }}\n                        className=\"btn dark_btn\">\n                            Update\n                        </div>\n                    </div>\n                    <div className=\"col s12\">\n                        <hr/>\n                    </div>\n                </div>\n            )}\n        </Fragment>\n    ):(null)\n\n    return (\n        <div className=\"EditProduct Page\" >\n            <div className=\"container\">\n                <h4 className=\"center head\">Edit <span className=\" heavy_text\">Product</span></h4>\n                <p className=\"small-text center\">{productid}</p>\n                {(loadingLog == \"LOADING\")?(\n                    <InfoCard> <h5 className=\"center\">Loading...</h5> </InfoCard>\n                ):(null)}\n                {(loadingLog == \"NOT_FOUND\")?(\n                    <InfoCard> <h5 className=\"center\">Not Found</h5> </InfoCard>\n                ):(null)}\n                {(loadingLog == \"LOADED\")?(\n                    <Fragment>\n                        {priceAdjustmentJSX}\n                    </Fragment>\n                ):(null)}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        productMessage  : state.productUpdates.productMessage,\n        productError    : state.productUpdates.productError,\n        productLog      : state.productUpdates.productLog,\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        setProductAction: (product)=>{dispatch(setProductAction(product))},\n        productUpdateReset: ()=>{ dispatch(productUpdateReset()) },\n        updateProductPriceFn: (update)=>{ dispatch(updateProductPrice(update)) }\n    }\n}\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps)\n)(EditProduct)\n","import React, { Fragment } from 'react';\nimport { BrowserRouter, Switch, Route, withRouter, NavLink } from 'react-router-dom';\nimport ScrollToTop from './utils/ScrollToTop';\nimport Store from './views/Store';\nimport Navbar from './components/Navbar';\nimport Login from './views/Login';\nimport Signup from './views/Signup';\nimport Product from './views/Product';\nimport Home from './views/Home';\nimport { initAction } from './store/actions/authActions';\nimport { compose } from 'redux';\nimport { connect, useSelector } from 'react-redux';\nimport AddProduct from './views/AddProduct';\nimport Delayed from './utils/Delayed';\nimport InfoCard from './components/InfoCard';\nimport SearchProduct from './views/SearchProduct';\nimport SearchOrder from './views/SearchOrder';\nimport Order from './views/Order';\nimport EditCategory from './views/EditCategory';\nimport AddCategory from './views/AddCategory';\nimport EditProduct from './views/EditProduct';\n\n\nfunction App(props) {\n  const {initAction} = props;\n  // initAction();\n  const authuid = useSelector((state)=>state.firebase.auth.uid)??null;\n  const profile = useSelector(state=> state.firebase.profile)??{};\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <ScrollToTop >\n          <Navbar />\n          <Switch>\n\n            <Route exact path=\"/login\"> <Login /> </Route>\n            <Route exact path=\"/signup\"> <Signup /> </Route>\n            \n            <Delayed waitBeforeShow={2000}>\n              <Fragment>\n                {(authuid && profile.isAdmin)?(\n                  <Fragment>\n                      <Route exact path=\"/product/:productid\"> <Product /> </Route>\n                      <Route exact path=\"/searchProduct\" > <SearchProduct />  </Route> \n                      <Route exact path=\"/addProduct\" > <AddProduct /> </Route> \n                      <Route exact path=\"/editProduct/:productid\" > <EditProduct /> </Route> \n                      <Route exact path=\"/searchOrder\" > <SearchOrder /> </Route> \n                      <Route exact path=\"/order/:oaid\" > <Order /> </Route> \n                      <Route exact path=\"/addCategory\" > <AddCategory /> </Route> \n                      <Route exact path=\"/editCategory/:categoryid\" > <EditCategory /> </Route> \n                      <Route exact path=\"/\"> <Home /> </Route>\n                    </Fragment>\n                  ):(\n                    <div className=\"Page\">\n                      <InfoCard>\n                        <h4 className=\"center primary-green-dark-text\"> <span>Sign</span><span className=\"heavy_text\">Up</span></h4>\n                        <p className=\"flow-text center\">\n                          Please <NavLink to=\"/login\" ><span className=\"heavy_text text-link\">SignIn</span></NavLink> to continue.\n                        </p>\n                      </InfoCard>\n                    </div>\n                )}            \n              </Fragment>\n            </Delayed>\n\n          </Switch>\n        </ScrollToTop>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state)=>{\n  return {}\n}\nconst mapDispatchToProps = (dispatch)=>{\n  return {\n    initAction: ()=>{ dispatch(initAction()) }\n  }\n}\n\nexport default \ncompose(\n  connect(mapStateToProps, mapDispatchToProps),\n)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState={\n    searchTerm: null,\n    searchResults: null,\n    searchError: null,\n    searchMessage: null\n}\n\nexport const searchReducer = (state = initState, action)=>{\n    // console.log(action?.type);\n    switch(action.type){\n        case 'SEARCH_IN_PROGRESS': \n            return {searchTerm: action.searchTerm, searchResults: null, searchError:null, searchMessage: action.type };\n        case 'SEARCH_RESULTS_FETCHED': \n            return {searchTerm: action.searchTerm, searchResults: action.searchResults, searchError:null, searchMessage: action.type };\n        case 'SEARCH_RESULTS_NOT_FOUND': \n            return {searchTerm: action.searchTerm, searchResults: null, searchError:action.err, searchMessage: action.type };\n        case 'SEARCH_RESET' :\n            return {...initState, searchMessage:action.type};\n        default: return state;\n    }\n}","const initState={\n    productMessage: 'PRODUCT_UPDATE_RESET',\n    productError: null,\n    productLog: null\n}\n\nexport const productReducer = (state = initState, action)=>{\n    console.log(action?.type);\n    switch(action.type){\n        case 'PRODUCT_ADD_IN_PROGRESS': \n            return { productMessage: action.type, productLog:'Product Adding...', productError: null };\n        case 'PRODUCT_ADD_SUCCESS': \n            return { productMessage: action.type, productLog:'Product Add Success', productError: null };\n        case 'PRODUCT_ADD_ERROR': \n            return { productMessage: action.type, productLog:'Product Add Error', productError: action.err };\n        case 'PRODUCT_SET_IN_PROGRESS': \n            return { productMessage: action.type, productLog:'Product Adding...', productError: null };\n        case 'PRODUCT_SET_SUCCESS': \n            return { productMessage: action.type, productLog:'Product Add Success', productError: null };\n        case 'PRODUCT_SET_ERROR': \n            return { productMessage: action.type, productLog:'Product Add Error', productError: action.err };\n        case 'PRODUCT_UPDATE_RESET' :\n            return {...initState, searchMessage:action.type};\n        default: return state;\n    }\n}","const initState = {\n    categoryMessage: null,\n    categoryLog: null,\n    cateogryError: null\n}\n\nexport const categoryReducer = (state=initState, action)=>{\n    // console.log(action?.type);\n    switch(action.type){\n        case 'CATEGORY_UPDATE_IN_PROGRESS'  :\n            return {categoryMessage: action.type, categoryLog: 'Updating...' , categoryError:null } ;\n        case 'CATEGORY_UPDATE_SUCCESS'      : \n            return {categoryMessage: action.type, categoryLog: 'Update Successful!!' , categoryError:null } ;\n        case 'CATEGORY_UPDATE_ERROR'               : \n            return {categoryMessage: action.type, categoryLog: 'Update Successful!!' , categoryError:action.err } ;\n        case 'CATEGORY_ADD_IN_PROGRESS'  :\n            return {categoryMessage: action.type, categoryLog: 'Updating...' , categoryError:null } ;\n        case 'CATEGORY_ADD_SUCCESS'      : \n            return {categoryMessage: action.type, categoryLog: 'Update Successful!!' , categoryError:null } ;\n        case 'CATEGORY_ADD_ERROR'               : \n            return {categoryMessage: action.type, categoryLog: 'Update Successful!!' , categoryError:action.err } ;\n        case 'CATEGORY_DELETE_IN_PROGRESS'  :\n                return {categoryMessage: action.type, categoryLog: 'Deleting...' , categoryError:null } ;\n        case 'CATEGORY_DELETE_SUCCESS'      : \n            return {categoryMessage: action.type, categoryLog: 'Delete Successful!!' , categoryError:null } ;\n        case 'CATEGORY_DELETE_ERROR'               : \n            return {categoryMessage: action.type, categoryLog: 'Delete Error!!' , categoryError:action.err } ;\n        case 'CATEGORY_LOG_RESET': return initState;\n        default: return state;\n    }\n}","import { combineReducers } from \"redux\"\nimport { firebaseReducer } from \"react-redux-firebase\"\nimport { firestoreReducer } from \"redux-firestore\"\nimport { authReducer } from \"./authReducer\"\nimport { searchReducer } from \"./searchReducer\"\nimport { productReducer } from \"./productReducer\"\nimport { categoryReducer } from \"./categoryReducer\"\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    search: searchReducer,\n    categoryReducer: categoryReducer,\n    productUpdates: productReducer,\n    firebase: firebaseReducer,\n    firestore: firestoreReducer\n})\n\nexport default rootReducer","import firebase from \"firebase/app\";\nimport 'firebase/auth';      //firebase authentication\nimport 'firebase/firestore'; //firebase firestore\nimport 'firebase/analytics'; //firebase analytics\n\nexport const firebaseConfig ={\n  apiKey: \"AIzaSyBHW5GkbAYKKiS-0O7V9yE6I_rhqdm5dmI\",\n  authDomain: \"digizup-store-test1.firebaseapp.com\",\n  databaseURL: \"https://digizup-store-test1.firebaseio.com\",\n  projectId: \"digizup-store-test1\",\n  storageBucket: \"digizup-store-test1.appspot.com\",\n  messagingSenderId: \"629806898681\",\n  appId: \"1:629806898681:web:ddcb815a9177a59d6b7128\",\n  measurementId: \"G-B7TL94P73H\"\n}\n\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport const db = firebase.firestore();\n\nexport default firebase;","//importing defaults\n//----------------------------------------------------------\nimport React, { Children } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//importing 'redux': Redux Store\n//createStore: create our redux store\n//applyMiddleware: extend Redux with custom functionality\nimport { createStore, applyMiddleware, compose } from 'redux';\n \n//importing 'react-redux': binding layer between the store and the dom\n//Provider: makes our store available to be used in our components\nimport { Provider, useSelector } from \"react-redux\";\n// import { Provider } from \"react-redux\";\n//----------------------------------------------------------\n\n\n//Reducers: handles the store opertations and data mutations\n//import rootReducer \nimport  rootReducer from './store/reducers/rootReducer';\n\n//import thunk\n//thunk: is a middleware that allows us to return a function instead of an action-creator\n//these asynchronous funcitons send a call do the processing and then dispatch a synchronous action \nimport thunk from 'redux-thunk';\n\n\n//firebase\n//----------------------------------------------------------\n//importing Firebase \n\n\n//importing react-redux-firebase\n//ReactReduxFirebaseProvider: lets rrfProps(store content from firebase) be available to our redux store\n//getFirebase: used to manipulate data in firebase\n//isLoaded: hepler funciton, detects if data from redux state has been loaded or not\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded, firebaseConnect  } from \"react-redux-firebase\";\n\n//importing redux-firestore\n//createFirestoreInstance: in v3.0.0 version this is introduced that is passed in rrfProps\n//getFirestore: used to manipulate data in firestore\n//reduxFirestore: v2.0.0 way to firebase-store-enhancer\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\n\nimport firebase from \"./config/FirebaseConfig\";\n//----------------------------------------------------------\n\n//store\n//----------------------------------------------------------\n//create store\n//createStore( reducer, store-enhancer ) \n//[OR]  createStore( reducer, compose(...multiple-store-enhancers) ) \n//compose: use to apply multiple store enhancer. (programmatic utility)\n//thunk.withExtraArgument(object of store-enhacer): adds these encapsulated  store-enhancers as an extra-argument to the reducer\n//reduxFirestore(firebase): adds store-enhancer of Firestore \n\nconst store = createStore(\n  rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(firebase)\n  )\n);\n\n//react-redux-firebase-configuration of store\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true\n}\n//react-redux-firebase-props the actual contents of the store from firebase\nconst rrfProps = {\n  firebase,\n  config:   rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n//----------------------------------------------------------\n\n//wait to load\n//----------------------------------------------------------\nconst AuthIsLoaded = ( {children} )=>{\n  const auth = useSelector( state=>state.firebase.auth );\n  if(!isLoaded(auth)) return <div>Loading...</div>;\n  return children;\n}\n//----------------------------------------------------------\n\n//we are rendering our web app accordingly to the dom\n//----------------------------------------------------------\nReactDOM.render(\n  \n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>\n\n  ,document.getElementById('root')\n);\n//----------------------------------------------------------\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}